{"version":3,"file":"empire.js","sources":["node_modules/jquery/dist/jquery.js","source/scripts/globals/jquery.js","node_modules/jquery-trend/jquery.trend.js","node_modules/jquery-revealer/jquery.revealer.js","node_modules/ev-emitter/ev-emitter.js","node_modules/get-size/get-size.js","node_modules/desandro-matches-selector/matches-selector.js","node_modules/fizzy-ui-utils/utils.js","node_modules/flickity/js/cell.js","node_modules/flickity/js/slide.js","node_modules/flickity/js/animate.js","node_modules/flickity/js/flickity.js","node_modules/unipointer/unipointer.js","node_modules/unidragger/unidragger.js","node_modules/flickity/js/drag.js","node_modules/tap-listener/tap-listener.js","node_modules/flickity/js/prev-next-button.js","node_modules/flickity/js/page-dots.js","node_modules/flickity/js/player.js","node_modules/flickity/js/add-remove-cell.js","node_modules/flickity/js/lazyload.js","node_modules/flickity/js/index.js","source/scripts/globals/flickity-ios-fix.js","node_modules/intersection-observer/intersection-observer.js","node_modules/rimg/dist/index.es.js","node_modules/rimg-shopify/dist/index.es.js","source/scripts/helpers/Quantity.js","source/scripts/Forms.js","source/scripts/templates/Account.js","source/scripts/templates/Contact.js","node_modules/fitvids/index.js","node_modules/grouped-content/dist/index.js","source/scripts/components/RichText.js","source/scripts/templates/Page.js","source/scripts/Sections.js","node_modules/shopify-currency-converter/dist/index.js","node_modules/scriptjs/dist/script.js","source/scripts/Layout.js","source/scripts/helpers/getHeaderOffset.js","source/scripts/components/StickyHeader.js","source/scripts/Accordion.js","source/scripts/components/NavMobileSubMenus.js","source/scripts/components/NavMobile.js","source/scripts/helpers/scrollLeft.js","source/scripts/components/MegaNavScroller.js","source/scripts/components/NavDesktop.js","node_modules/just-debounce/index.js","node_modules/eventemitter2/lib/eventemitter2.js","source/scripts/Search.js","source/scripts/components/search/SearchForm.js","source/scripts/components/search/LiveSearchTemplates.js","source/scripts/components/search/LiveSearch.js","source/scripts/sections/StaticSectionHeader.js","source/scripts/sections/StaticSectionFooter.js","source/scripts/sections/StaticArticle.js","source/scripts/sections/StaticBlog.js","source/scripts/components/MessageBanner.js","source/scripts/sections/StaticCart.js","node_modules/vanilla-modal/dist/index.js","source/scripts/components/Modal.js","source/scripts/helpers/a11y.js","source/scripts/ProductOptions.js","source/scripts/VariantHelper.js","source/scripts/helpers/Images.js","source/scripts/components/AddToCartFlyout.js","source/scripts/components/Youtube.js","source/scripts/components/Vimeo.js","source/scripts/components/Video.js","source/scripts/components/ProductGallery.js","source/scripts/components/ProductDetails.js","source/scripts/components/ProductQuickshop.js","source/scripts/components/ProductGridItem.js","source/scripts/components/RecentlyViewed.js","source/scripts/helpers/SelectWidth.js","source/scripts/sections/StaticCollection.js","source/scripts/sections/StaticGiftcard.js","source/scripts/sections/StaticPassword.js","source/scripts/components/ProductRowScroller.js","source/scripts/sections/StaticProduct.js","source/scripts/sections/StaticSearch.js","source/scripts/sections/DynamicBlogPosts.js","source/scripts/sections/StaticHighlightsBanners.js","source/scripts/sections/StaticSlideshow.js","source/scripts/sections/DynamicPromoBlocks.js","source/scripts/sections/DynamicMenuList.js","node_modules/twitter-fetcher/js/twitterFetcher_min.js","source/scripts/sections/DynamicTwitterFeed.js","source/scripts/sections/DynamicInstagramFeed.js","source/scripts/sections/DynamicFeaturedCollection.js","source/scripts/sections/DynamicSearch.js","source/scripts/sections/DynamicRichText.js","source/scripts/sections/DynamicVideo.js","source/scripts/sections/DynamicNewsletter.js","node_modules/pxs-map/dist/index.es.js","source/scripts/Empire.js"],"sourcesContent":["/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// jQuery plugins expect to find a global `jQuery` object, so we\n// need to attach it to the window.\n//\n// This is in its own file because we have to attach it before any\n// other imports happen, but with ES6 modules, all `import`s have\n// to be at the top.\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\n","/*!\n * Trend 0.2.0\n *\n * Fail-safe TransitionEnd event for jQuery.\n *\n * Adds a new \"trend\" event that can be used in browsers that don't\n * support \"transitionend\".\n *\n * NOTE: Only supports being bound with \"jQuery.one\".\n *\n * Copyright 2014, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n;(function($){\n\n  // Prefixed transitionend event names\n  var transitionEndEvents =\n    \"webkitTransitionEnd \" +\n    \"otransitionend \" +\n    \"oTransitionEnd \" +\n    \"msTransitionEnd \" +\n    \"transitionend\";\n\n  // Prefixed transition duration property names\n  var transitionDurationProperties = [\n    \"transition-duration\",\n    \"-moz-transition-duration\",\n    \"-webkit-transition-duration\",\n    \"-ms-transition-duration\",\n    \"-o-transition-duration\",\n    \"-khtml-transition-duration\"\n  ];\n\n  // Prefixed transition delay property names\n  var transitionDelayProperties = [\n    \"transition-delay\",\n    \"-moz-transition-delay\",\n    \"-webkit-transition-delay\",\n    \"-ms-transition-delay\",\n    \"-o-transition-delay\",\n    \"-khtml-transition-delay\"\n  ];\n\n  // Parses a CSS time value into milliseconds.\n  var parseTime = function(s) {\n    s = s.replace(/\\s/, \"\");\n    var v = window.parseFloat(s);\n\n    return s.match(/[^m]s$/i)\n      ? v * 1000\n      : v;\n  };\n\n  // Parses the longest time unit found in a series of CSS properties.\n  // Returns a value in milliseconds.\n  var parseProperties = function(el, properties) {\n    var duration = 0;\n\n    for (var i = 0; i < properties.length; i++) {\n      // Get raw CSS value\n      var value = el.css(properties[i]);\n      if (!value) continue;\n\n      // Multiple transitions--pick the longest\n      if (value.indexOf(\",\") !== -1) {\n        var values = value.split(\",\");\n        var durations = (function(){\n          var results = [];\n          for (var i = 0; i < values.length; i++) {\n            var duration = parseTime(values[i]);\n            results.push(duration);\n          }\n          return results;\n        })();\n\n        duration = Math.max.apply(Math, durations);\n      }\n\n      // Single transition\n      else {\n        duration = parseTime(value);\n      }\n\n      // Accept first vaue\n      break;\n    }\n\n    return duration;\n  };\n\n  $.event.special.trend = {\n    // Triggers an event handler when an element is done transitioning.\n    //\n    // Handles browsers that don't support transitionend by adding a\n    // timeout with the transition duration.\n    add: function(handleObj) {\n      var el = $(this);\n      var fired = false;\n\n      // Mark element as being in transition\n      el.data(\"trend\", true);\n\n      // Calculate a fallback duration. + 20 because some browsers fire\n      // timeouts faster than transitionend.\n      var time =\n        parseProperties(el, transitionDurationProperties) +\n        parseProperties(el, transitionDelayProperties) +\n        20;\n\n      var cb = function(e) {\n        // transitionend events can be sent for each property. Let's just\n        // skip all but the first. Also handles the timeout callback.\n        if (fired) return;\n\n        // Child elements that also have transitions can be fired before we\n        // complete. This will catch and ignore those. Unfortunately, we'll\n        // have to rely on the timeout in these cases.\n        if (e && e.srcElement !== el[0]) return;\n\n        // Mark element has not being in transition\n        el.data(\"trend\", false);\n\n        // Callback\n        fired = true;\n        if (handleObj.handler) handleObj.handler();\n      };\n\n      el.one(transitionEndEvents, cb);\n      el.data(\"trend-timeout\", window.setTimeout(cb, time));\n    },\n\n    remove: function(handleObj) {\n      var el = $(this);\n      el.off(transitionEndEvents);\n      window.clearTimeout(el.data(\"trend-timeout\"));\n    }\n  };\n\n})(jQuery);\n","/*!\n * Revealer 2.0.1\n *\n * Copyright 2015, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n(function($){\n  // check for trend event (make sure jquery.trend is included)\n  if (typeof $.event.special.trend !== \"object\") {\n    console.warn(\"Please make sure jquery.trend is included! Otherwise revealer won't work.\");\n  }\n\n  // Simple requestAnimationFrame polyfill\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function(fn) { window.setTimeout(fn, 1000/60); }\n\n\n  // Public API\n  var methods = {\n    isVisible: function(el) {\n      return !!el.data(\"revealer-visible\");\n    },\n\n    show: function(el, force) {\n      // Check state\n      if (methods.isVisible(el)) {\n        el.removeClass(\"animating animating-in\");\n        el.off(\"revealer-animating revealer-show\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", true);\n      el.off(\"trend\");\n\n      if (force) {\n        el.addClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-show\");\n        });\n        return;\n      }\n\n      raf(function(){\n        // Start animation state transition\n        el.addClass(\"animating animating-in\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.addClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in\");\n            el.trigger(\"revealer-show\");\n          });\n        });\n      });\n    },\n\n    hide: function(el, force) {\n      // Check state\n      if (!methods.isVisible(el)) {\n        el.removeClass(\"animating animating-out visible\");\n        el.off(\"revealer-animating revealer-hide\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", false);\n      el.off(\"trend\");\n\n      if (force) {\n        el.removeClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-hide\");\n        });\n        return;\n      }\n\n      raf(function(){\n        el.addClass(\"animating animating-out\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.removeClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in animating-out\");\n            el.trigger(\"revealer-hide\");\n          });\n        });\n      });\n    },\n\n    toggle: function(el, force) {\n      if (methods.isVisible(el)) {\n        methods.hide(el, force);\n      } else {\n        methods.show(el, force);\n      }\n    }\n  };\n\n  // jQuery plugin\n  $.fn.revealer = function(method, force) {\n    // Get action\n    var action = methods[method || \"toggle\"];\n    if (!action) return this;\n\n    // Run action\n    if (method === \"isVisible\") {\n      return action(this);\n    }\n\n    return this.each(function(){\n      action($(this), force);\n    });\n  };\n})(jQuery);\n","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","// Flickity.Cell\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'get-size/get-size'\n    ], function( getSize ) {\n      return factory( window, getSize );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Cell = factory(\n      window,\n      window.getSize\n    );\n  }\n\n}( window, function factory( window, getSize ) {\n\n'use strict';\n\nfunction Cell( elem, parent ) {\n  this.element = elem;\n  this.parent = parent;\n\n  this.create();\n}\n\nvar proto = Cell.prototype;\n\nproto.create = function() {\n  this.element.style.position = 'absolute';\n  this.element.setAttribute( 'aria-selected', 'false' );\n  this.x = 0;\n  this.shift = 0;\n};\n\nproto.destroy = function() {\n  // reset style\n  this.element.style.position = '';\n  var side = this.parent.originSide;\n  this.element.removeAttribute('aria-selected');\n  this.element.style[ side ] = '';\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\nproto.setPosition = function( x ) {\n  this.x = x;\n  this.updateTarget();\n  this.renderPosition( x );\n};\n\n// setDefaultTarget v1 method, backwards compatibility, remove in v3\nproto.updateTarget = proto.setDefaultTarget = function() {\n  var marginProperty = this.parent.originSide == 'left' ? 'marginLeft' : 'marginRight';\n  this.target = this.x + this.size[ marginProperty ] +\n    this.size.width * this.parent.cellAlign;\n};\n\nproto.renderPosition = function( x ) {\n  // render position of cell with in slider\n  var side = this.parent.originSide;\n  this.element.style[ side ] = this.parent.getPositionValue( x );\n};\n\n/**\n * @param {Integer} factor - 0, 1, or -1\n**/\nproto.wrapShift = function( shift ) {\n  this.shift = shift;\n  this.renderPosition( this.x + this.parent.slideableWidth * shift );\n};\n\nproto.remove = function() {\n  this.element.parentNode.removeChild( this.element );\n};\n\nreturn Cell;\n\n}));\n","// slide\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( window, function factory() {\n'use strict';\n\nfunction Slide( parent ) {\n  this.parent = parent;\n  this.isOriginLeft = parent.originSide == 'left';\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nvar proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length == 1 ) {\n    this.x = cell.x; // x comes from first cell\n    var beginMargin = this.isOriginLeft ? 'marginLeft' : 'marginRight';\n    this.firstMargin = cell.size[ beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  var endMargin = this.isOriginLeft ? 'marginRight' : 'marginLeft';\n  var lastCell = this.getLastCell();\n  var lastMargin = lastCell ? lastCell.size[ endMargin ] : 0;\n  var slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.changeSelected( true );\n};\n\nproto.unselect = function() {\n  this.changeSelected( false );\n};\n\nproto.changeSelected = function( isSelected ) {\n  var classMethod = isSelected ? 'add' : 'remove';\n  this.cells.forEach( function( cell ) {\n    cell.element.classList[ classMethod ]('is-selected');\n    cell.element.setAttribute( 'aria-selected', isSelected.toString() );\n  });\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  });\n};\n\nreturn Slide;\n\n}));\n","// animate\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'fizzy-ui-utils/utils'\n    ], function( utils ) {\n      return factory( window, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(\n      window,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, utils ) {\n\n'use strict';\n\n// -------------------------- animate -------------------------- //\n\nvar proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) {\n    return;\n  }\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  var previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) {\n    var _this = this;\n    requestAnimationFrame( function animateFrame() {\n      _this.animate();\n    });\n  }\n};\n\nproto.positionSlider = function() {\n  var x = this.x;\n  // wrap position around\n  if ( this.options.wrapAround && this.cells.length > 1 ) {\n    x = utils.modulo( x, this.slideableWidth );\n    x = x - this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  x = x + this.cursorPosition;\n  // reverse if right-to-left and using transform\n  x = this.options.rightToLeft ? -x : x;\n  var value = this.getPositionValue( x );\n  // use 3D tranforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = this.isAnimating ?\n    'translate3d(' + value + ',0,0)' : 'translateX(' + value + ')';\n\n  // scroll event\n  var firstSlide = this.slides[0];\n  if ( firstSlide ) {\n    var positionX = -this.x - firstSlide.target;\n    var progress = positionX / this.slidesWidth;\n    this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n  }\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) {\n    return;\n  }\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 )+ '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  if ( !this.isPointerDown && Math.round( this.x * 100 ) == Math.round( previousX * 100 ) ) {\n    this.restingFrames++;\n  }\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  var beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  var afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  for ( var i=0; i < cells.length; i++ ) {\n    var cell = cells[i];\n    var cellShift = gap > 0 ? shift : 0;\n    cell.wrapShift( cellShift );\n    gap -= cell.size.outerWidth;\n  }\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  for ( var i=0; i < cells.length; i++ ) {\n    cells[i].wrapShift( 0 );\n  }\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) {\n    return;\n  }\n  // change the position to drag position by applying force\n  var dragVelocity = this.dragX - this.x;\n  var dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  var dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) {\n    return;\n  }\n  var distance = this.selectedSlide.target * -1 - this.x;\n  var force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n}));\n","// Flickity main\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'get-size/get-size',\n      'fizzy-ui-utils/utils',\n      './cell',\n      './slide',\n      './animate'\n    ], function( EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n      return factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./cell'),\n      require('./slide'),\n      require('./animate')\n    );\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      _Flickity.Cell,\n      _Flickity.Slide,\n      _Flickity.animatePrototype\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize,\n  utils, Cell, Slide, animatePrototype ) {\n\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    var instance = instances[ this.element.flickityGUID ];\n    instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\nvar proto = Flickity.prototype;\n// inherit EventEmitter\nutils.extend( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( var eventName in this.options.on ) {\n    var listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  Flickity.createMethods.forEach( function( method ) {\n    this[ method ]();\n  }, this );\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n\n  var index;\n  var initialIndex = this.options.initialIndex;\n  if ( this.isInitActivated ) {\n    index = this.selectedIndex;\n  } else if ( initialIndex !== undefined ) {\n    index = this.cells[ initialIndex ] ? initialIndex : 0;\n  } else {\n    index = 0;\n  }\n  // select instantly\n  this.select( index, false, true );\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = cellElems.map( function( cellElem ) {\n    return new Cell( cellElem, this );\n  }, this );\n\n  return cells;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var len = this.cells.length;\n  for ( var i=index; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( function( cell ) {\n    cell.getSize();\n  });\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) {\n    return;\n  }\n\n  var slide = new Slide( this );\n  this.slides.push( slide );\n  var isOriginLeft = this.originSide == 'left';\n  var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n  var canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( function( cell, i ) {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    var slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ nextMargin ] );\n\n    if ( canCellFit.call( this, i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( this );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  }, this );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  var groupCells = this.options.groupCells;\n  if ( !groupCells ) {\n    return function() {\n      return false;\n    };\n  } else if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    var number = parseInt( groupCells, 10 );\n    return function( i ) {\n      return ( i % number ) !== 0;\n    };\n  }\n  // default, group by width of slide\n  // parse '75%\n  var percentMatch = typeof groupCells == 'string' &&\n    groupCells.match(/^(\\d+)%$/);\n  var percent = percentMatch ? parseInt( percentMatch[1], 10 ) / 100 : 1;\n  return function( i, slideWidth ) {\n    return slideWidth <= ( this.size.innerWidth + 1 ) * percent;\n  };\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5\n  },\n  left: {\n    left: 0,\n    right: 1\n  },\n  right: {\n    right: 0,\n    left: 1\n  }\n};\n\nproto.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    var height = this.options.adaptiveHeight && this.selectedSlide ?\n      this.selectedSlide.height : this.maxCellHeight;\n    this.viewport.style.height = height + 'px';\n  }\n};\n\nproto._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var isRightToLeft = this.options.rightToLeft;\n  var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n  var contentWidth = this.slideableWidth - this.getLastCell().size[ endMargin ];\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // bounds\n  var beginBound = this.cursorPosition + this.cells[0].size[ beginMargin ];\n  var endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // contain each cell target\n  this.slides.forEach( function( slide ) {\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      slide.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    }\n  }, this );\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    var $event = type;\n    if ( event ) {\n      // create jQuery event\n      var jQEvent = jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) {\n    return;\n  }\n  var prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index != prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n  // old v1 event name, remove in v3\n  this.dispatchEvent('cellSelect');\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  var len = this.slides.length;\n  var isWrapping = this.options.wrapAround && len > 1;\n  if ( !isWrapping ) {\n    return index;\n  }\n  var wrapIndex = utils.modulo( index, len );\n  // go to shortest\n  var delta = Math.abs( wrapIndex - this.selectedIndex );\n  var backWrapDelta = Math.abs( ( wrapIndex + len ) - this.selectedIndex );\n  var forewardWrapDelta = Math.abs( ( wrapIndex - len ) - this.selectedIndex );\n  if ( !this.isDragSelect && backWrapDelta < delta ) {\n    index += len;\n  } else if ( !this.isDragSelect && forewardWrapDelta < delta ) {\n    index -= len;\n  }\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= this.slideableWidth;\n  } else if ( index >= len ) {\n    this.x += this.slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  var slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) {\n    return;\n  }\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  // Remove in v3?\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) {\n    this.selectedSlide.unselect();\n  }\n};\n\n/**\n * select slide from number or cell element\n * @param {Element or Number} elem\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  var cell = this.queryCell( value );\n  if ( !cell ) {\n    return;\n  }\n\n  var index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slides that has cell\n  for ( var i=0; i < this.slides.length; i++ ) {\n    var slide = this.slides[i];\n    var index = slide.cells.indexOf( cell );\n    if ( index != -1 ) {\n      return i;\n    }\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem\n * @returns {Flickity.Cell} item\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i=0; i < this.cells.length; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {Element, Array, NodeList} elems\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  elems.forEach( function( elem ) {\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }, this );\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  });\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem\n * @returns {Flickit.Cell} cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return this.selectedSlide.getCellElements();\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount ; i++ ) {\n    var slideIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {Element, Selector String, or Number} selector\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  if ( typeof selector == 'string' ) {\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\nproto.childUIPointerDown = function( event ) {\n  this.emitEvent( 'childUIPointerDown', [ event ] );\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  var selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  // only work if element is in focus\n  var isNotFocused = document.activeElement && document.activeElement != this.element;\n  if ( !this.options.accessibility ||isNotFocused ) {\n    return;\n  }\n\n  var handler = Flickity.keyboardHandlers[ event.keyCode ];\n  if ( handler ) {\n    handler.call( this );\n  }\n};\n\nFlickity.keyboardHandlers = {\n  // left arrow\n  37: function() {\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  },\n  // right arrow\n  39: function() {\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  var prevScrollY = window.pageYOffset;\n  this.element.focus();\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( function( cell ) {\n    cell.destroy();\n  });\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {Element} elem\n * @returns {Flickity}\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\n\nreturn Flickity;\n\n}));\n","/*!\n * Unipointer v2.3.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*global define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.Unipointer = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n}( window, function factory( window, EvEmitter ) {\n\n'use strict';\n\nfunction noop() {}\n\nfunction Unipointer() {}\n\n// inherit EvEmitter\nvar proto = Unipointer.prototype = Object.create( EvEmitter.prototype );\n\nproto.bindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, true );\n};\n\nproto.unbindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd - remove if falsey\n */\nproto._bindStartEvent = function( elem, isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n\n  // default to mouse events\n  var startEvent = 'mousedown';\n  if ( window.PointerEvent ) {\n    // Pointer Events\n    startEvent = 'pointerdown';\n  } else if ( 'ontouchstart' in window ) {\n    // Touch Events. iOS Safari\n    startEvent = 'touchstart';\n  }\n  elem[ bindMethod ]( startEvent, this );\n};\n\n// trigger handler methods for events\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// returns the touch that we're keeping track of\nproto.getTouch = function( touches ) {\n  for ( var i=0; i < touches.length; i++ ) {\n    var touch = touches[i];\n    if ( touch.identifier == this.pointerIdentifier ) {\n      return touch;\n    }\n  }\n};\n\n// ----- start event ----- //\n\nproto.onmousedown = function( event ) {\n  // dismiss clicks from right or middle buttons\n  var button = event.button;\n  if ( button && ( button !== 0 && button !== 1 ) ) {\n    return;\n  }\n  this._pointerDown( event, event );\n};\n\nproto.ontouchstart = function( event ) {\n  this._pointerDown( event, event.changedTouches[0] );\n};\n\nproto.onpointerdown = function( event ) {\n  this._pointerDown( event, event );\n};\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto._pointerDown = function( event, pointer ) {\n  // dismiss right click and other pointers\n  // button = 0 is okay, 1-4 not\n  if ( event.button || this.isPointerDown ) {\n    return;\n  }\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n\n  this.pointerDown( event, pointer );\n};\n\nproto.pointerDown = function( event, pointer ) {\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// hash of events to be bound after start event\nvar postStartEvents = {\n  mousedown: [ 'mousemove', 'mouseup' ],\n  touchstart: [ 'touchmove', 'touchend', 'touchcancel' ],\n  pointerdown: [ 'pointermove', 'pointerup', 'pointercancel' ],\n};\n\nproto._bindPostStartEvents = function( event ) {\n  if ( !event ) {\n    return;\n  }\n  // get proper events to match start event\n  var events = postStartEvents[ event.type ];\n  // bind events to node\n  events.forEach( function( eventName ) {\n    window.addEventListener( eventName, this );\n  }, this );\n  // save these arguments\n  this._boundPointerEvents = events;\n};\n\nproto._unbindPostStartEvents = function() {\n  // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\n  if ( !this._boundPointerEvents ) {\n    return;\n  }\n  this._boundPointerEvents.forEach( function( eventName ) {\n    window.removeEventListener( eventName, this );\n  }, this );\n\n  delete this._boundPointerEvents;\n};\n\n// ----- move event ----- //\n\nproto.onmousemove = function( event ) {\n  this._pointerMove( event, event );\n};\n\nproto.onpointermove = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerMove( event, event );\n  }\n};\n\nproto.ontouchmove = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerMove( event, touch );\n  }\n};\n\n/**\n * pointer move\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerMove = function( event, pointer ) {\n  this.pointerMove( event, pointer );\n};\n\n// public\nproto.pointerMove = function( event, pointer ) {\n  this.emitEvent( 'pointerMove', [ event, pointer ] );\n};\n\n// ----- end event ----- //\n\n\nproto.onmouseup = function( event ) {\n  this._pointerUp( event, event );\n};\n\nproto.onpointerup = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerUp( event, event );\n  }\n};\n\nproto.ontouchend = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerUp( event, touch );\n  }\n};\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerUp = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerUp( event, pointer );\n};\n\n// public\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n};\n\n// ----- pointer done ----- //\n\n// triggered on pointer up & pointer cancel\nproto._pointerDone = function() {\n  this._pointerReset();\n  this._unbindPostStartEvents();\n  this.pointerDone();\n};\n\nproto._pointerReset = function() {\n  // reset properties\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n};\n\nproto.pointerDone = noop;\n\n// ----- pointer cancel ----- //\n\nproto.onpointercancel = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerCancel( event, event );\n  }\n};\n\nproto.ontouchcancel = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerCancel( event, touch );\n  }\n};\n\n/**\n * pointer cancel\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerCancel = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerCancel( event, pointer );\n};\n\n// public\nproto.pointerCancel = function( event, pointer ) {\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// -----  ----- //\n\n// utility function for getting x/y coords from event\nUnipointer.getPointerPoint = function( pointer ) {\n  return {\n    x: pointer.pageX,\n    y: pointer.pageY\n  };\n};\n\n// -----  ----- //\n\nreturn Unipointer;\n\n}));\n","/*!\n * Unidragger v2.3.0\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'unipointer/unipointer'\n    ], function( Unipointer ) {\n      return factory( window, Unipointer );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n      window,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// -------------------------- Unidragger -------------------------- //\n\nfunction Unidragger() {}\n\n// inherit Unipointer & EvEmitter\nvar proto = Unidragger.prototype = Object.create( Unipointer.prototype );\n\n// ----- bind start ----- //\n\nproto.bindHandles = function() {\n  this._bindHandles( true );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd\n */\nproto._bindHandles = function( isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  // bind each handle\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n  var touchAction = isAdd ? this._touchActionValue : '';\n  for ( var i=0; i < this.handles.length; i++ ) {\n    var handle = this.handles[i];\n    this._bindStartEvent( handle, isAdd );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) {\n      handle.style.touchAction = touchAction;\n    }\n  }\n};\n\n// prototype so it can be overwriteable by Flickity\nproto._touchActionValue = 'none';\n\n// ----- start event ----- //\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n  // track start event position\n  this.pointerDownPointer = pointer;\n\n  event.preventDefault();\n  this.pointerDownBlur();\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// nodes that have text fields\nvar cursorNodes = {\n  TEXTAREA: true,\n  INPUT: true,\n  SELECT: true,\n  OPTION: true,\n};\n\n// input types that do not have text fields\nvar clickTypes = {\n  radio: true,\n  checkbox: true,\n  button: true,\n  submit: true,\n  image: true,\n  file: true,\n};\n\n// dismiss inputs with text fields. flickity#403, flickity#404\nproto.okayPointerDown = function( event ) {\n  var isCursorNode = cursorNodes[ event.target.nodeName ];\n  var isClickType = clickTypes[ event.target.type ];\n  var isOkay = !isCursorNode || isClickType;\n  if ( !isOkay ) {\n    this._pointerReset();\n  }\n  return isOkay;\n};\n\n// kludge to blur previously focused input\nproto.pointerDownBlur = function() {\n  var focused = document.activeElement;\n  // do not blur body for IE10, metafizzy/flickity#117\n  var canBlur = focused && focused.blur && focused != document.body;\n  if ( canBlur ) {\n    focused.blur();\n  }\n};\n\n// ----- move event ----- //\n\n/**\n * drag move\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\n// base pointer move logic\nproto._dragPointerMove = function( event, pointer ) {\n  var moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY\n  };\n  // start drag if pointer has moved far enough to start drag\n  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {\n    this._dragStart( event, pointer );\n  }\n  return moveVector;\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- end event ----- //\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto._dragPointerUp = function( event, pointer ) {\n  if ( this.isDragging ) {\n    this._dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this._staticClick( event, pointer );\n  }\n};\n\n// -------------------------- drag -------------------------- //\n\n// dragStart\nproto._dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  // prevent clicks\n  this.isPreventingClicks = true;\n  this.dragStart( event, pointer );\n};\n\nproto.dragStart = function( event, pointer ) {\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\n// dragMove\nproto._dragMove = function( event, pointer, moveVector ) {\n  // do not drag if not dragging yet\n  if ( !this.isDragging ) {\n    return;\n  }\n\n  this.dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  event.preventDefault();\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// dragEnd\nproto._dragEnd = function( event, pointer ) {\n  // set flags\n  this.isDragging = false;\n  // re-enable clicking async\n  setTimeout( function() {\n    delete this.isPreventingClicks;\n  }.bind( this ) );\n\n  this.dragEnd( event, pointer );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// ----- onclick ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) {\n    event.preventDefault();\n  }\n};\n\n// ----- staticClick ----- //\n\n// triggered after pointer down & up with no/tiny movement\nproto._staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  this.staticClick( event, pointer );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete this.isIgnoringMouseUp;\n    }.bind( this ), 400 );\n  }\n};\n\nproto.staticClick = function( event, pointer ) {\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n};\n\n// ----- utils ----- //\n\nUnidragger.getPointerPoint = Unipointer.getPointerPoint;\n\n// -----  ----- //\n\nreturn Unidragger;\n\n}));\n","// drag\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'unidragger/unidragger',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, Unidragger, utils ) {\n      return factory( window, Flickity, Unidragger, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('unidragger'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n      window,\n      window.Flickity,\n      window.Unidragger,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, Unidragger, utils ) {\n\n'use strict';\n\n// ----- defaults ----- //\n\nutils.extend( Flickity.defaults, {\n  draggable: '>1',\n  dragThreshold: 3,\n});\n\n// ----- create ----- //\n\nFlickity.createMethods.push('_createDrag');\n\n// -------------------------- drag prototype -------------------------- //\n\nvar proto = Flickity.prototype;\nutils.extend( proto, Unidragger.prototype );\nproto._touchActionValue = 'pan-y';\n\n// --------------------------  -------------------------- //\n\nvar isTouch = 'createTouch' in document;\nvar isTouchmoveScrollCanceled = false;\n\nproto._createDrag = function() {\n  this.on( 'activate', this.onActivateDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'childUIPointerDown', this._childUIPointerDownDrag );\n  this.on( 'deactivate', this.unbindDrag );\n  this.on( 'cellChange', this.updateDraggable );\n  // TODO updateDraggable on resize? if groupCells & slides change\n  // HACK - add seemingly innocuous handler to fix iOS 10 scroll behavior\n  // #457, RubaXa/Sortable#973\n  if ( isTouch && !isTouchmoveScrollCanceled ) {\n    window.addEventListener( 'touchmove', function() {});\n    isTouchmoveScrollCanceled = true;\n  }\n};\n\nproto.onActivateDrag = function() {\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.updateDraggable();\n};\n\nproto.onDeactivateDrag = function() {\n  this.unbindHandles();\n  this.element.classList.remove('is-draggable');\n};\n\nproto.updateDraggable = function() {\n  // disable dragging if less than 2 slides. #278\n  if ( this.options.draggable == '>1' ) {\n    this.isDraggable = this.slides.length > 1;\n  } else {\n    this.isDraggable = this.options.draggable;\n  }\n  if ( this.isDraggable ) {\n    this.element.classList.add('is-draggable');\n  } else {\n    this.element.classList.remove('is-draggable');\n  }\n};\n\n// backwards compatibility\nproto.bindDrag = function() {\n  this.options.draggable = true;\n  this.updateDraggable();\n};\n\nproto.unbindDrag = function() {\n  this.options.draggable = false;\n  this.updateDraggable();\n};\n\nproto._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\nproto._childUIPointerDownDrag = function( event ) {\n  // allow focus & preventDefault even when not draggable\n  // so child UI elements keep focus on carousel. #721\n  event.preventDefault();\n  this.pointerDownFocus( event );\n};\n\n// -------------------------- pointer events -------------------------- //\n\nproto.pointerDown = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    this._pointerDownDefault( event, pointer );\n    return;\n  }\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n\n  this._pointerDownPreventDefault( event );\n  this.pointerDownFocus( event );\n  // blur\n  if ( document.activeElement != this.element ) {\n    // do not blur if already focused\n    this.pointerDownBlur();\n  }\n\n  // stop if it was moving\n  this.dragX = this.x;\n  this.viewport.classList.add('is-pointer-down');\n  // track scrolling\n  this.pointerDownScroll = getScrollPosition();\n  window.addEventListener( 'scroll', this );\n\n  this._pointerDownDefault( event, pointer );\n};\n\n// default pointerDown logic, used for staticClick\nproto._pointerDownDefault = function( event, pointer ) {\n  // track start event position\n  this.pointerDownPointer = pointer;\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.dispatchEvent( 'pointerDown', event, [ pointer ] );\n};\n\nvar focusNodes = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true,\n};\n\nproto.pointerDownFocus = function( event ) {\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isFocusNode ) {\n    this.focus();\n  }\n};\n\nproto._pointerDownPreventDefault = function( event ) {\n  var isTouchStart = event.type == 'touchstart';\n  var isTouchPointer = event.pointerType == 'touch';\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isTouchStart && !isTouchPointer && !isFocusNode ) {\n    event.preventDefault();\n  }\n};\n\n// ----- move ----- //\n\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > this.options.dragThreshold;\n};\n\n// ----- up ----- //\n\nproto.pointerUp = function( event, pointer ) {\n  delete this.isTouchScrolling;\n  this.viewport.classList.remove('is-pointer-down');\n  this.dispatchEvent( 'pointerUp', event, [ pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto.pointerDone = function() {\n  window.removeEventListener( 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nproto.dragStart = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  window.removeEventListener( 'scroll', this );\n  this.dispatchEvent( 'dragStart', event, [ pointer ] );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.dispatchEvent( 'pointerMove', event, [ pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  event.preventDefault();\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  var direction = this.options.rightToLeft ? -1 : 1;\n  if ( this.options.wrapAround ) {\n    // wrap around move. #589\n    moveVector.x = moveVector.x % this.slideableWidth;\n  }\n  var dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.options.wrapAround && this.slides.length ) {\n    // slow drag\n    var originBound = Math.max( -this.slides[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    var endBound = Math.min( -this.getLastSlide().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n\n  this.dragMoveTime = new Date();\n  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  if ( this.options.freeScroll ) {\n    this.isFreeScrolling = true;\n  }\n  // set selectedIndex based on where flick will end up\n  var index = this.dragEndRestingSelect();\n\n  if ( this.options.freeScroll && !this.options.wrapAround ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding slides\n    // so bounding slides can attract slider, and keep it in bounds\n    var restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.slides[0].target &&\n      -restingX < this.getLastSlide().target;\n  } else if ( !this.options.freeScroll && index == this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // TODO refactor this, selecting here feels weird\n  // HACK, set flag so dragging stays in correct direction\n  this.isDragSelect = this.options.wrapAround;\n  this.select( index );\n  delete this.isDragSelect;\n  this.dispatchEvent( 'dragEnd', event, [ pointer ] );\n};\n\nproto.dragEndRestingSelect = function() {\n  var restingX = this.getRestingPosition();\n  // how far away from selected slide\n  var distance = Math.abs( this.getSlideDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  var positiveResting = this._getClosestResting( restingX, distance, 1 );\n  var negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  var index = positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n  return index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nproto._getClosestResting = function( restingX, distance, increment ) {\n  var index = this.selectedIndex;\n  var minDistance = Infinity;\n  var condition = this.options.contain && !this.options.wrapAround ?\n    // if contain, keep going if distance is equal to minDistance\n    function( d, md ) { return d <= md; } : function( d, md ) { return d < md; };\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getSlideDistance( -restingX, index );\n    if ( distance === null ) {\n      break;\n    }\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment\n  };\n};\n\n/**\n * measure distance between x and a slide target\n * @param {Number} x\n * @param {Integer} index - slide index\n */\nproto.getSlideDistance = function( x, index ) {\n  var len = this.slides.length;\n  // wrap around if at least 2 slides\n  var isWrapAround = this.options.wrapAround && len > 1;\n  var slideIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  var slide = this.slides[ slideIndex ];\n  if ( !slide ) {\n    return null;\n  }\n  // add distance for wrap-around slides\n  var wrap = isWrapAround ? this.slideableWidth * Math.floor( index / len ) : 0;\n  return x - ( slide.target + wrap );\n};\n\nproto.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  var distance = this.getSlideDistance( -this.dragX, this.selectedIndex );\n  var delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- staticClick ----- //\n\nproto.staticClick = function( event, pointer ) {\n  // get clickedCell, if cell was clicked\n  var clickedCell = this.getParentCell( event.target );\n  var cellElem = clickedCell && clickedCell.element;\n  var cellIndex = clickedCell && this.cells.indexOf( clickedCell );\n  this.dispatchEvent( 'staticClick', event, [ pointer, cellElem, cellIndex ] );\n};\n\n// ----- scroll ----- //\n\nproto.onscroll = function() {\n  var scroll = getScrollPosition();\n  var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  var scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this._pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nfunction getScrollPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  };\n}\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n","/*!\n * Tap listener v2.0.0\n * listens to taps\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false*/ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'unipointer/unipointer'\n    ], function( Unipointer ) {\n      return factory( window, Unipointer );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.TapListener = factory(\n      window,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// --------------------------  TapListener -------------------------- //\n\nfunction TapListener( elem ) {\n  this.bindTap( elem );\n}\n\n// inherit Unipointer & EventEmitter\nvar proto = TapListener.prototype = Object.create( Unipointer.prototype );\n\n/**\n * bind tap event to element\n * @param {Element} elem\n */\nproto.bindTap = function( elem ) {\n  if ( !elem ) {\n    return;\n  }\n  this.unbindTap();\n  this.tapElement = elem;\n  this._bindStartEvent( elem, true );\n};\n\nproto.unbindTap = function() {\n  if ( !this.tapElement ) {\n    return;\n  }\n  this._bindStartEvent( this.tapElement, true );\n  delete this.tapElement;\n};\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerUp = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  var pointerPoint = Unipointer.getPointerPoint( pointer );\n  var boundingRect = this.tapElement.getBoundingClientRect();\n  var scrollX = window.pageXOffset;\n  var scrollY = window.pageYOffset;\n  // calculate if pointer is inside tapElement\n  var isInside = pointerPoint.x >= boundingRect.left + scrollX &&\n    pointerPoint.x <= boundingRect.right + scrollX &&\n    pointerPoint.y >= boundingRect.top + scrollY &&\n    pointerPoint.y <= boundingRect.bottom + scrollY;\n  // trigger callback if pointer is inside element\n  if ( isInside ) {\n    this.emitEvent( 'tap', [ event, pointer ] );\n  }\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    var _this = this;\n    setTimeout( function() {\n      delete _this.isIgnoringMouseUp;\n    }, 400 );\n  }\n};\n\nproto.destroy = function() {\n  this.pointerDone();\n  this.unbindTap();\n};\n\n// -----  ----- //\n\nreturn TapListener;\n\n}));\n","// prev/next buttons\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'tap-listener/tap-listener',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, TapListener, utils ) {\n      return factory( window, Flickity, TapListener, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('tap-listener'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.Flickity,\n      window.TapListener,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, TapListener, utils ) {\n'use strict';\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\n// -------------------------- PrevNextButton -------------------------- //\n\nfunction PrevNextButton( direction, parent ) {\n  this.direction = direction;\n  this.parent = parent;\n  this._create();\n}\n\nPrevNextButton.prototype = Object.create( TapListener.prototype );\n\nPrevNextButton.prototype._create = function() {\n  // properties\n  this.isEnabled = true;\n  this.isPrevious = this.direction == -1;\n  var leftDirection = this.parent.options.rightToLeft ? 1 : -1;\n  this.isLeft = this.direction == leftDirection;\n\n  var element = this.element = document.createElement('button');\n  element.className = 'flickity-button flickity-prev-next-button';\n  element.className += this.isPrevious ? ' previous' : ' next';\n  // prevent button from submitting form http://stackoverflow.com/a/10836076/182183\n  element.setAttribute( 'type', 'button' );\n  // init as disabled\n  this.disable();\n\n  element.setAttribute( 'aria-label', this.isPrevious ? 'Previous' : 'Next' );\n\n  // create arrow\n  var svg = this.createSVG();\n  element.appendChild( svg );\n  // events\n  this.on( 'tap', this.onTap );\n  this.parent.on( 'select', this.update.bind( this ) );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPrevNextButton.prototype.activate = function() {\n  this.bindTap( this.element );\n  // click events from keyboard\n  this.element.addEventListener( 'click', this );\n  // add to DOM\n  this.parent.element.appendChild( this.element );\n};\n\nPrevNextButton.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.element );\n  // do regular TapListener destroy\n  TapListener.prototype.destroy.call( this );\n  // click events from keyboard\n  this.element.removeEventListener( 'click', this );\n};\n\nPrevNextButton.prototype.createSVG = function() {\n  var svg = document.createElementNS( svgURI, 'svg');\n  svg.setAttribute( 'class', 'flickity-button-icon' );\n  svg.setAttribute( 'viewBox', '0 0 100 100' );\n  var path = document.createElementNS( svgURI, 'path');\n  var pathMovements = getArrowMovements( this.parent.options.arrowShape );\n  path.setAttribute( 'd', pathMovements );\n  path.setAttribute( 'class', 'arrow' );\n  // rotate arrow\n  if ( !this.isLeft ) {\n    path.setAttribute( 'transform', 'translate(100, 100) rotate(180) ' );\n  }\n  svg.appendChild( path );\n  return svg;\n};\n\n// get SVG path movmement\nfunction getArrowMovements( shape ) {\n  // use shape as movement if string\n  if ( typeof shape == 'string' ) {\n    return shape;\n  }\n  // create movement string\n  return 'M ' + shape.x0 + ',50' +\n    ' L ' + shape.x1 + ',' + ( shape.y1 + 50 ) +\n    ' L ' + shape.x2 + ',' + ( shape.y2 + 50 ) +\n    ' L ' + shape.x3 + ',50 ' +\n    ' L ' + shape.x2 + ',' + ( 50 - shape.y2 ) +\n    ' L ' + shape.x1 + ',' + ( 50 - shape.y1 ) +\n    ' Z';\n}\n\nPrevNextButton.prototype.onTap = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.parent.uiChange();\n  var method = this.isPrevious ? 'previous' : 'next';\n  this.parent[ method ]();\n};\n\nPrevNextButton.prototype.handleEvent = utils.handleEvent;\n\nPrevNextButton.prototype.onclick = function( event ) {\n  // only allow clicks from keyboard\n  var focused = document.activeElement;\n  if ( focused && focused == this.element ) {\n    this.onTap( event, event );\n  }\n};\n\n// -----  ----- //\n\nPrevNextButton.prototype.enable = function() {\n  if ( this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = false;\n  this.isEnabled = true;\n};\n\nPrevNextButton.prototype.disable = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = true;\n  this.isEnabled = false;\n};\n\nPrevNextButton.prototype.update = function() {\n  // index of first or last slide, if previous or next\n  var slides = this.parent.slides;\n  // enable is wrapAround and at least 2 slides\n  if ( this.parent.options.wrapAround && slides.length > 1 ) {\n    this.enable();\n    return;\n  }\n  var lastIndex = slides.length ? slides.length - 1 : 0;\n  var boundIndex = this.isPrevious ? 0 : lastIndex;\n  var method = this.parent.selectedIndex == boundIndex ? 'disable' : 'enable';\n  this[ method ]();\n};\n\nPrevNextButton.prototype.destroy = function() {\n  this.deactivate();\n};\n\n// -------------------------- Flickity prototype -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  prevNextButtons: true,\n  arrowShape: {\n    x0: 10,\n    x1: 60, y1: 50,\n    x2: 70, y2: 40,\n    x3: 30\n  }\n});\n\nFlickity.createMethods.push('_createPrevNextButtons');\nvar proto = Flickity.prototype;\n\nproto._createPrevNextButtons = function() {\n  if ( !this.options.prevNextButtons ) {\n    return;\n  }\n\n  this.prevButton = new PrevNextButton( -1, this );\n  this.nextButton = new PrevNextButton( 1, this );\n\n  this.on( 'activate', this.activatePrevNextButtons );\n};\n\nproto.activatePrevNextButtons = function() {\n  this.prevButton.activate();\n  this.nextButton.activate();\n  this.on( 'deactivate', this.deactivatePrevNextButtons );\n};\n\nproto.deactivatePrevNextButtons = function() {\n  this.prevButton.deactivate();\n  this.nextButton.deactivate();\n  this.off( 'deactivate', this.deactivatePrevNextButtons );\n};\n\n// --------------------------  -------------------------- //\n\nFlickity.PrevNextButton = PrevNextButton;\n\nreturn Flickity;\n\n}));\n","// page dots\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'tap-listener/tap-listener',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, TapListener, utils ) {\n      return factory( window, Flickity, TapListener, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('tap-listener'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.Flickity,\n      window.TapListener,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, TapListener, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\n'use strict';\n\nfunction PageDots( parent ) {\n  this.parent = parent;\n  this._create();\n}\n\nPageDots.prototype = new TapListener();\n\nPageDots.prototype._create = function() {\n  // create holder element\n  this.holder = document.createElement('ol');\n  this.holder.className = 'flickity-page-dots';\n  // create dots, array of elements\n  this.dots = [];\n  // events\n  this.on( 'tap', this.onTap );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPageDots.prototype.activate = function() {\n  this.setDots();\n  this.bindTap( this.holder );\n  // add to DOM\n  this.parent.element.appendChild( this.holder );\n};\n\nPageDots.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.holder );\n  TapListener.prototype.destroy.call( this );\n};\n\nPageDots.prototype.setDots = function() {\n  // get difference between number of slides and number of dots\n  var delta = this.parent.slides.length - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  var fragment = document.createDocumentFragment();\n  var newDots = [];\n  var length = this.dots.length;\n  var max = length + count;\n\n  for ( var i = length; i < max; i++ ) {\n    var dot = document.createElement('li');\n    dot.className = 'dot';\n    dot.setAttribute( 'aria-label', 'Page dot ' + ( i + 1 ) );\n    fragment.appendChild( dot );\n    newDots.push( dot );\n  }\n\n  this.holder.appendChild( fragment );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  var removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  removeDots.forEach( function( dot ) {\n    this.holder.removeChild( dot );\n  }, this );\n};\n\nPageDots.prototype.updateSelected = function() {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.className = 'dot';\n    this.selectedDot.removeAttribute('aria-current');\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) {\n    return;\n  }\n  this.selectedDot = this.dots[ this.parent.selectedIndex ];\n  this.selectedDot.className = 'dot is-selected';\n  this.selectedDot.setAttribute( 'aria-current', 'step' );\n};\n\nPageDots.prototype.onTap = function( event ) {\n  var target = event.target;\n  // only care about dot clicks\n  if ( target.nodeName != 'LI' ) {\n    return;\n  }\n\n  this.parent.uiChange();\n  var index = this.dots.indexOf( target );\n  this.parent.select( index );\n};\n\nPageDots.prototype.destroy = function() {\n  this.deactivate();\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pageDots: true\n});\n\nFlickity.createMethods.push('_createPageDots');\n\nvar proto = Flickity.prototype;\n\nproto._createPageDots = function() {\n  if ( !this.options.pageDots ) {\n    return;\n  }\n  this.pageDots = new PageDots( this );\n  // events\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'select', this.updateSelectedPageDots );\n  this.on( 'cellChange', this.updatePageDots );\n  this.on( 'resize', this.updatePageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nproto.activatePageDots = function() {\n  this.pageDots.activate();\n};\n\nproto.updateSelectedPageDots = function() {\n  this.pageDots.updateSelected();\n};\n\nproto.updatePageDots = function() {\n  this.pageDots.setDots();\n};\n\nproto.deactivatePageDots = function() {\n  this.pageDots.deactivate();\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n}));\n","// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'fizzy-ui-utils/utils',\n      './flickity'\n    ], function( EvEmitter, utils, Flickity ) {\n      return factory( EvEmitter, utils, Flickity );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('ev-emitter'),\n      require('fizzy-ui-utils'),\n      require('./flickity')\n    );\n  } else {\n    // browser global\n    factory(\n      window.EvEmitter,\n      window.fizzyUIUtils,\n      window.Flickity\n    );\n  }\n\n}( window, function factory( EvEmitter, utils, Flickity ) {\n\n'use strict';\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( parent ) {\n  this.parent = parent;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\nPlayer.prototype = Object.create( EvEmitter.prototype );\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state == 'playing' ) {\n    return;\n  }\n  // do not play if page is hidden, start playing when page is visible\n  var isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state != 'playing' ) {\n    return;\n  }\n\n  var time = this.parent.options.autoPlay;\n  // default to 3 seconds\n  time = typeof time == 'number' ? time : 3000;\n  var _this = this;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( function() {\n    _this.parent.next( true );\n    _this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state == 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state == 'paused' ) {\n    this.play();\n  }\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  var isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pauseAutoPlayOnHover: true\n});\n\nFlickity.createMethods.push('_createPlayer');\nvar proto = Flickity.prototype;\n\nproto._createPlayer = function() {\n  this.player = new Player( this );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) {\n    return;\n  }\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) {\n    return;\n  }\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n}));\n","// add, remove cell\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.Flickity,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, utils ) {\n\n'use strict';\n\n// append cells to a document fragment\nfunction getCellsFragment( cells ) {\n  var fragment = document.createDocumentFragment();\n  cells.forEach( function( cell ) {\n    fragment.appendChild( cell.element );\n  });\n  return fragment;\n}\n\n// -------------------------- add/remove cell prototype -------------------------- //\n\nvar proto = Flickity.prototype;\n\n/**\n * Insert, prepend, or append cells\n * @param {Element, Array, NodeList} elems\n * @param {Integer} index\n */\nproto.insert = function( elems, index ) {\n  var cells = this._makeCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  var len = this.cells.length;\n  // default to append\n  index = index === undefined ? len : index;\n  // add cells with document fragment\n  var fragment = getCellsFragment( cells );\n  // append to slider\n  var isAppend = index == len;\n  if ( isAppend ) {\n    this.slider.appendChild( fragment );\n  } else {\n    var insertCellElement = this.cells[ index ].element;\n    this.slider.insertBefore( fragment, insertCellElement );\n  }\n  // add to this.cells\n  if ( index === 0 ) {\n    // prepend, add to start\n    this.cells = cells.concat( this.cells );\n  } else if ( isAppend ) {\n    // append, add to end\n    this.cells = this.cells.concat( cells );\n  } else {\n    // insert in this.cells\n    var endCells = this.cells.splice( index, len - index );\n    this.cells = this.cells.concat( cells ).concat( endCells );\n  }\n\n  this._sizeCells( cells );\n  this.cellChange( index, true );\n};\n\nproto.append = function( elems ) {\n  this.insert( elems, this.cells.length );\n};\n\nproto.prepend = function( elems ) {\n  this.insert( elems, 0 );\n};\n\n/**\n * Remove cells\n * @param {Element, Array, NodeList} elems\n */\nproto.remove = function( elems ) {\n  var cells = this.getCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n\n  var minCellIndex = this.cells.length - 1;\n  // remove cells from collection & DOM\n  cells.forEach( function( cell ) {\n    cell.remove();\n    var index = this.cells.indexOf( cell );\n    minCellIndex = Math.min( index, minCellIndex );\n    utils.removeFrom( this.cells, cell );\n  }, this );\n\n  this.cellChange( minCellIndex, true );\n};\n\n/**\n * logic to be run after a cell's size changes\n * @param {Element} elem - cell's element\n */\nproto.cellSizeChange = function( elem ) {\n  var cell = this.getCell( elem );\n  if ( !cell ) {\n    return;\n  }\n  cell.getSize();\n\n  var index = this.cells.indexOf( cell );\n  this.cellChange( index );\n};\n\n/**\n * logic any time a cell is changed: added, removed, or size changed\n * @param {Integer} changedCellIndex - index of the changed cell, optional\n */\nproto.cellChange = function( changedCellIndex, isPositioningSlider ) {\n  var prevSelectedElem = this.selectedElement;\n  this._positionCells( changedCellIndex );\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  // update selectedIndex\n  // try to maintain position & select previous selected element\n  var cell = this.getCell( prevSelectedElem );\n  if ( cell ) {\n    this.selectedIndex = this.getCellSlideIndex( cell );\n  }\n  this.selectedIndex = Math.min( this.slides.length - 1, this.selectedIndex );\n\n  this.emitEvent( 'cellChange', [ changedCellIndex ] );\n  // position slider\n  this.select( this.selectedIndex );\n  // do not position slider after lazy load\n  if ( isPositioningSlider ) {\n    this.positionSliderAtSelected();\n  }\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n","// lazyload\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.Flickity,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, utils ) {\n'use strict';\n\nFlickity.createMethods.push('_createLazyload');\nvar proto = Flickity.prototype;\n\nproto._createLazyload = function() {\n  this.on( 'select', this.lazyLoad );\n};\n\nproto.lazyLoad = function() {\n  var lazyLoad = this.options.lazyLoad;\n  if ( !lazyLoad ) {\n    return;\n  }\n  // get adjacent cells, use lazyLoad option for adjacent count\n  var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  var cellElems = this.getAdjacentCellElements( adjCount );\n  // get lazy images in those cells\n  var lazyImages = [];\n  cellElems.forEach( function( cellElem ) {\n    var lazyCellImages = getCellLazyImages( cellElem );\n    lazyImages = lazyImages.concat( lazyCellImages );\n  });\n  // load lazy images\n  lazyImages.forEach( function( img ) {\n    new LazyLoader( img, this );\n  }, this );\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.nodeName == 'IMG' ) {\n    var lazyloadAttr = cellElem.getAttribute('data-flickity-lazyload');\n    var srcAttr = cellElem.getAttribute('data-flickity-lazyload-src');\n    var srcsetAttr = cellElem.getAttribute('data-flickity-lazyload-srcset');\n    if ( lazyloadAttr || srcAttr || srcsetAttr ) {\n      return [ cellElem ];\n    }\n  }\n  // select lazy images in cell\n  var lazySelector = 'img[data-flickity-lazyload], ' +\n    'img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]';\n  var imgs = cellElem.querySelectorAll( lazySelector );\n  return utils.makeArray( imgs );\n}\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n */\nfunction LazyLoader( img, flickity ) {\n  this.img = img;\n  this.flickity = flickity;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  // get src & srcset\n  var src = this.img.getAttribute('data-flickity-lazyload') ||\n    this.img.getAttribute('data-flickity-lazyload-src');\n  var srcset = this.img.getAttribute('data-flickity-lazyload-srcset');\n  // set src & serset\n  this.img.src = src;\n  if ( srcset ) {\n    this.img.setAttribute( 'srcset', srcset );\n  }\n  // remove attr\n  this.img.removeAttribute('data-flickity-lazyload');\n  this.img.removeAttribute('data-flickity-lazyload-src');\n  this.img.removeAttribute('data-flickity-lazyload-srcset');\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n\n  var cell = this.flickity.getParentCell( this.img );\n  var cellElem = cell && cell.element;\n  this.flickity.cellSizeChange( cellElem );\n\n  this.img.classList.add( className );\n  this.flickity.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n}));\n","/*!\n * Flickity v2.1.1\n * Touch, responsive, flickable carousels\n *\n * Licensed GPLv3 for open source use\n * or Flickity Commercial License for commercial use\n *\n * https://flickity.metafizzy.co\n * Copyright 2015-2018 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      './drag',\n      './prev-next-button',\n      './page-dots',\n      './player',\n      './add-remove-cell',\n      './lazyload'\n    ], factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('./flickity'),\n      require('./drag'),\n      require('./prev-next-button'),\n      require('./page-dots'),\n      require('./player'),\n      require('./add-remove-cell'),\n      require('./lazyload')\n    );\n  }\n\n})( window, function factory( Flickity ) {\n  /*jshint strict: false*/\n  return Flickity;\n});\n","import $ from 'jquery';\nimport Flickity from 'flickity';\n\n// This is required to fix an iOS10 bug for Flickity.\n// It is our own implementation of the Flickity 2.0 fix found here: http://bit.ly/2kU4mKW\n$(window).on('dragStart', (event) => {\n  const $target = $(event.target);\n  const $flickityEnabledEl = $target.closest('.flickity-enabled');\n\n  if ($flickityEnabledEl.length) {\n    const flickity = Flickity.data($flickityEnabledEl[0]);\n\n    window.removeEventListener('scroll', flickity);\n  }\n});\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observering a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    this.intersectionRatio = intersectionArea / targetArea;\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibilty state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its executiong, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child elemnt (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","/*!\n * rimg v2.1.2\n * (c) 2018 Pixel Union\n */\n/**\n * The default template render function. Turns a template string into an image\n * URL.\n *\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\nfunction defaultTemplateRender(template, size) {\n  return template.replace('{size}', size.width + 'x' + size.height);\n}\n\n/**\n * @type Settings\n */\nvar defaults = {\n  scale: 1,\n  template: false,\n  templateRender: defaultTemplateRender,\n  max: { width: Infinity, height: Infinity },\n  round: 32,\n  placeholder: false\n};\n\n/**\n * Get a data attribute value from an element, with a default fallback and\n * sanitization step.\n *\n * @param {Element} el\n *\n * @param {String} name\n *        The data attribute name.\n *\n * @param {Object} options\n *        An object holding fallback values if the data attribute does not\n *        exist. If this object doesn't have the property, we further fallback\n *        to our defaults.\n *\n * @param {Function} [sanitize]\n *        A function to sanitize the data attribute value with.\n *\n * @returns {String|*}\n */\nfunction getData(el, name, options, sanitize) {\n  var attr = 'data-rimg-' + name;\n  if (!el.hasAttribute(attr)) return options[name] || defaults[name];\n\n  var value = el.getAttribute(attr);\n\n  return sanitize ? sanitize(value) : value;\n}\n\n/**\n * Sanitize data attributes that represent a size (in the form of `10x10`).\n *\n * @param {String} value\n * @returns {Object} An object with `width` and `height` properties.\n */\nfunction parseSize(value) {\n  value = value.split('x');\n  return { width: parseInt(value[0], 10), height: parseInt(value[1], 10) };\n}\n\n/**\n * Loads information about an element.\n *\n * Options can be set on the element itself using data attributes, or through\n * the `options` parameter. Data attributes take priority.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n * @returns {Item}\n */\nfunction parseItem(el) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var isImage = el.hasAttribute('data-rimg-template');\n\n  /**\n   * @typedef {Settings} Item\n   */\n  return {\n    el: el,\n\n    // Type of element\n    isImage: isImage,\n    isBackgroundImage: isImage && el.tagName !== 'IMG',\n\n    // Image scale\n    scale: getData(el, 'scale', options),\n\n    // Device density\n    density: window.devicePixelRatio || 1,\n\n    // Image template URL\n    template: getData(el, 'template', options),\n    templateRender: options.templateRender || defaults.templateRender,\n\n    // Maximum image dimensions\n    max: getData(el, 'max', options, parseSize),\n\n    // Round image dimensions to the nearest multiple\n    round: getData(el, 'round', options),\n\n    // Placeholder image dimensions\n    placeholder: getData(el, 'placeholder', options, parseSize)\n  };\n}\n\n/**\n * Round to the nearest multiple.\n *\n * This is so we don't tax the image server too much.\n *\n * @param {Number} size The size, in pixels.\n * @param {Number} multiple The multiple to round to the nearest.\n * @returns {Number}\n */\nfunction roundSize(size, multiple) {\n  return Math.ceil(size / multiple) * multiple;\n}\n\n/**\n * Get the size of an element.\n *\n * If it is too small, it's parent element is checked, and so on. This helps\n * avoid the situation where an element doesn't have a size yet or is positioned\n * out of the layout.\n *\n * @param {HTMLElement} el\n * @return {Object} size\n * @return {Number} size.width The width, in pixels.\n * @return {Number} size.height The height, in pixels.\n */\nfunction getElementSize(el) {\n  var size = { width: 0, height: 0 };\n\n  while (el) {\n    size.width = el.offsetWidth;\n    size.height = el.offsetHeight;\n    if (size.width > 20 && size.height > 20) break;\n    el = el.parentNode;\n  }\n\n  return size;\n}\n\n/**\n * Trigger a custom event.\n *\n * Note: this approach is deprecated, but still required to support older\n * browsers such as IE 10.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n *\n * @param {HTMLElement} el\n *        The element to trigger the event on.\n *\n * @param {String} name\n *        The event name.\n *\n * @returns {Boolean}\n *          True if the event was canceled.\n */\nfunction trigger(el, name) {\n  var event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  return !el.dispatchEvent(event);\n}\n\n/**\n * Return the maximum supported density of the image, given the container.\n *\n * @param {Item} item\n * @param {Size} size\n */\nfunction supportedDensity(item, size) {\n  return Math.min(Math.min(Math.max(item.max.width / size.width, 1), item.density), Math.min(Math.max(item.max.height / size.height, 1), item.density)).toFixed(2);\n}\n\n/**\n * Set the image URL on the element. Supports background images and `srcset`.\n *\n * @param {Item} item\n * @param {Size} size\n * @param {Boolean} isPlaceholder\n */\nfunction setImage(item, size, isPlaceholder, onLoad) {\n  var render = item.templateRender;\n  var density = isPlaceholder ? 1 : supportedDensity(item, size);\n  var round = isPlaceholder ? 1 : item.round;\n\n  // Calculate the final display size, taking into account the image's\n  // maximum dimensions.\n  var width = roundSize(size.width * density, round);\n  var height = roundSize(size.height * density, round);\n  var ratio = Math.min(1, item.max.width / width, item.max.height / height);\n  var displaySize = {\n    width: Math.round(ratio * width),\n    height: Math.round(ratio * height)\n  };\n\n  var url = render(item.template, displaySize);\n\n  // On load callback\n  var image = new Image();\n  image.onload = onLoad;\n  image.src = url;\n\n  // Set image\n  if (item.isBackgroundImage) {\n    item.el.style.backgroundImage = 'url(\\'' + url + '\\')';\n  } else {\n    item.el.setAttribute('srcset', url + ' ' + density + 'x');\n  }\n}\n\n/**\n * Load the image, set loaded status, and trigger the load event.\n *\n * @fires rimg:load\n * @fires rimg:error\n * @param {Item} item\n * @param {Size} size\n */\nfunction loadFullImage(item, size) {\n  var el = item.el;\n\n  setImage(item, size, false, function (event) {\n    if (event.type === 'load') {\n      el.setAttribute('data-rimg', 'loaded');\n    } else {\n      el.setAttribute('data-rimg', 'error');\n      trigger(el, 'rimg:error');\n    }\n\n    trigger(el, 'rimg:load');\n  });\n}\n\n/**\n * Load in a responsive image.\n *\n * Sets the image's `srcset` attribute to the final image URLs, calculated based\n * on the actual size the image is being shown at.\n *\n * @fires rimg:loading\n *        The image URLs have been set and we are waiting for them to load.\n *\n * @fires rimg:loaded\n *        The final image has loaded.\n *\n * @fires rimg:error\n *        The final image failed loading.\n *\n * @param {Item} item\n */\nfunction loadImage(item) {\n  var el = item.el;\n\n  // Already loaded?\n  var status = el.getAttribute('data-rimg');\n  if (status === 'loading' || status === 'loaded') return;\n\n  // Is the SVG loaded?\n  if (!el.complete && !item.isBackgroundImage) {\n    // Wait for the load event, then call load image\n    el.addEventListener('load', function cb() {\n      el.removeEventListener('load', cb);\n      loadImage(item);\n    });\n\n    return;\n  }\n\n  // Trigger loading event, and stop if cancelled\n  if (trigger(el, 'rimg:loading')) return;\n\n  // Mark as loading\n  el.setAttribute('data-rimg', 'loading');\n\n  // Get element size. This is used as the ideal display size.\n  var size = getElementSize(item.el);\n\n  size.width *= item.scale;\n  size.height *= item.scale;\n\n  if (item.placeholder) {\n    // Load a placeholder image first, followed by the full image. Force the\n    // element to keep its dimensions while it loads. If the image is smaller\n    // than the element size, use the image's size. Density is taken into account\n    // for HiDPI devices to avoid blurry images.\n    if (!item.isBackgroundImage) {\n      el.setAttribute('width', Math.min(Math.floor(item.max.width / item.density), size.width));\n      el.setAttribute('height', Math.min(Math.floor(item.max.height / item.density), size.height));\n    }\n\n    setImage(item, item.placeholder, true, function () {\n      return loadFullImage(item, size);\n    });\n  } else {\n    loadFullImage(item, size);\n  }\n}\n\n/**\n * Prepare an element to be displayed on the screen.\n *\n * Images have special logic applied to them to swap out the different sources.\n *\n * @fires rimg:enter\n *        The element is entering the viewport.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction load(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:enter');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg-template-svg', el.getAttribute('srcset'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Reset an element's state so that its image can be recalculated.\n *\n * @fires rimg:update\n *        The element is being updated.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction update(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:update');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg', 'lazy');\n      el.setAttribute('srcset', el.getAttribute('data-rimg-template-svg'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Returns true if the element is within the viewport.\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nfunction inViewport(el) {\n  var root = document.documentElement;\n  var width = Math.min(root.clientWidth, window.innerWidth);\n  var height = Math.min(root.clientHeight, window.innerHeight);\n  var rect = el.getBoundingClientRect();\n\n  return rect.bottom >= 0 && rect.right >= 0 && rect.top <= height && rect.left <= width;\n}\n\n/**\n * @typedef {Object} Size\n * @property {Number} width\n * @property {Number} height\n */\n\n/**\n * A function to turn a template string into a URL.\n *\n * @callback TemplateRenderer\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\n\n/**\n * @typedef {Object} Settings\n *\n * @property {String} [template]\n *           A template string used to generate URLs for an image. This allows us to\n *           dynamically load images with sizes to match the container's size.\n *\n * @property {TemplateRenderer} [templateRender]\n *           A function to turn a template string into a URL.\n *\n * @property {Size} [max]\n *           The maximum available size for the image. This ensures we don't\n *           try to load an image larger than is possible.\n *\n * @property {Number} [round]\n *           Round image dimensions to the nearest multiple. This is intended to\n *           tax the image server less by lowering the number of possible image\n *           sizes requested.\n *\n * @property {Size} [placeholder]\n *           The size of the lo-fi image to load before the full image.\n */\n\n/**\n * Initialize the responsive image handler.\n *\n * @param {String|HTMLElement|NodeList} selector\n *        The CSS selector, element, or elements to track for lazy-loading.\n *\n * @param {Settings} options\n *\n * @returns {PublicApi}\n */\nfunction rimg() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Intersections\n  var io = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        io.unobserve(entry.target);\n        load(entry.target, options);\n      }\n    });\n  }, {\n    // Watch the viewport, with 20% vertical margins\n    rootMargin: '20% 0px'\n  });\n\n  /**\n   * @typedef {Object} PublicApi\n   */\n  var api = {\n    /**\n     * Track a new selector, element, or nodelist for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    track: function track() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n\n      var els = querySelector(selector);\n\n      for (var i = 0; i < els.length; i++) {\n        // If an element is already in the viewport, load it right away. This\n        // fixes a race-condition with dynamically added elements.\n        if (inViewport(els[i])) {\n          load(els[i], options);\n        } else {\n          io.observe(els[i]);\n        }\n      }\n    },\n\n\n    /**\n     * Update element(s) that have already been loaded to force their images\n     * to be recalculated.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    update: function update$$1() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"loaded\"]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        update(els[i], options);\n      }\n    },\n\n\n    /**\n     * Stop tracking element(s) for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    untrack: function untrack() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        io.unobserve(els[i]);\n      }\n    },\n\n\n    /**\n     * Unload all event handlers and observers.\n     * @type Function\n     */\n    unload: function unload() {\n      io.disconnect();\n    }\n  };\n\n  // Add initial elements\n  api.track(selector);\n\n  return api;\n}\n\n/**\n * Finds a group of elements on the page.\n *\n * @param {String|HTMLElement|NodeList} selector\n * @returns {Object} An array-like object.\n */\nfunction querySelector(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelectorAll(selector);\n  }\n\n  if (selector instanceof HTMLElement) {\n    return [selector];\n  }\n\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n\n  return [];\n}\n\nexport default rimg;\n","/*!\n * rimg-shopify v2.2.2\n * (c) 2018 Pixel Union\n */\nimport rimg from 'rimg';\n\n/**\n * Polyfill for Element.matches().\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {}\n    return i > -1;\n  };\n}\n\nvar state = {\n  init: init,\n  watch: watch,\n  unwatch: unwatch\n};\n\nfunction init() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  state.selector = selector;\n  state.instance = rimg(selector, options);\n  state.loadedWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Listen for Shopify theme editor events\n  document.addEventListener('shopify:section:load', function (event) {\n    return watch(event.target);\n  });\n\n  window.addEventListener('resize', function () {\n    return _update();\n  });\n\n  document.addEventListener('shopify:section:unload', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Listen for custom events to allow themes to hook into rimg\n  document.addEventListener('theme:rimg:watch', function (event) {\n    return watch(event.target);\n  });\n\n  document.addEventListener('theme:rimg:unwatch', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Support custom events triggered through jQuery\n  // See: https://github.com/jquery/jquery/issues/3347\n  if (window.jQuery) {\n    jQuery(document).on({\n      'theme:rimg:watch': function themeRimgWatch(event) {\n        return watch(event.target);\n      },\n      'theme:rimg:unwatch': function themeRimgUnwatch(event) {\n        return unwatch(event.target);\n      }\n    });\n  }\n}\n\n/**\n * Track an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction watch(el) {\n  // Track element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.track(el);\n  }\n\n  // Track element's children\n  state.instance.track(el.querySelectorAll(state.selector));\n}\n\n/**\n * Untrack an element, and its children\n *\n * @param {HTMLElement} el\n * @private\n */\nfunction unwatch(el) {\n  // Untrack element's children\n  state.instance.untrack(el.querySelectorAll(state.selector));\n\n  // Untrack element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.untrack(el);\n  }\n}\n\n/**\n * Update an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction _update() {\n  var currentWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Return if we're not 2x smaller, or larger than the existing loading size\n  if (currentWidth / state.loadedWidth > 0.5 && currentWidth / state.loadedWidth < 2) {\n    return;\n  }\n\n  state.loadedWidth = currentWidth;\n  state.instance.update();\n}\n\nexport default state;\n","export default class Quantity {\n  constructor(el) {\n    this.$el = $(el);\n    this.$inputParent = this.$el.find('.form-field--qty-input');\n    this.$input = this.$el.find('[data-quantity-input]');\n    this.$selectParent = this.$el.find('.form-field--qty-select');\n    this.$select = this.$el.find('[data-quantity-select]');\n\n    this._watchSelect = this._watchSelect.bind(this);\n    this._watchInput = this._watchInput.bind(this);\n\n    this.$select.on('change.quantity', this._watchSelect);\n    this.$input.on('change.quantity', this._watchInput);\n  }\n\n  unload() {\n    this.$el.off('.quantity');\n  }\n\n  _validateValue(event) {\n    const baseValue = parseInt(event.currentTarget.value, 10);\n\n    return isNaN(baseValue) ? 1 : baseValue;\n  }\n\n  _watchSelect(event) {\n    const value = this._validateValue(event);\n\n    // Update input to match select\n    this.$input.val(value).trigger('change');\n\n    // Switch to quantity input when 10 or more\n    if (value >= 10) {\n      this.$inputParent\n        .removeClass('hidden')\n        .addClass('visible');\n\n      this.$input\n        .focus()\n        .removeAttr('tabindex')\n        .select();\n\n      this.$selectParent\n        .removeClass('visible')\n        .addClass('hidden');\n\n      this.$select.attr('tabindex', '-1');\n    }\n  }\n\n  _watchInput(event) {\n    this.$input.val(this._validateValue(event));\n  }\n}\n","import $ from 'jquery';\nimport Quantity from './helpers/Quantity';\n\nexport default class Forms {\n  constructor($el, selector = '.form-field-input') {\n    this.$el = $el;\n    this.filledClass = 'form-field-filled';\n    this.fieldSelector = selector;\n\n    this.quantityItems = [];\n    this.$quantityWrapper = this.$el.find('[data-quantity-wrapper]');\n\n    this._toggleFilled = this._toggleFilled.bind(this);\n    this.$el.on('focus.forms', this.fieldSelector, this._toggleFilled);\n    this.$el.on('blur.forms', this.fieldSelector, this._toggleFilled);\n\n    this._checkFilled();\n\n    if (this.$quantityWrapper.length) {\n      this.$quantityWrapper.each((i, el) => {\n        this.quantityItems.push(\n          new Quantity(el)\n        );\n      });\n    }\n  }\n\n  unload() {\n    this.$el.off('.forms');\n\n    this.quantityItems.forEach((quantityItem) => {\n      quantityItem.unload();\n    });\n  }\n\n  _checkFilled() {\n    this.$el.find(this.fieldSelector).each((i, el) => {\n      if ($(el).hasClass(this.filledClass)) return;\n\n      this._toggleFilled(null, el);\n    });\n  }\n\n  _toggleFilled(event = null, el = false) {\n    const $el = event ? $(event.currentTarget) : $(el);\n    const value = $el.val();\n\n    const isFilled = value && value.length > 0 ? true : false;\n\n    $el.toggleClass(this.filledClass, isFilled);\n  }\n}\n","import $ from 'jquery';\n\nimport Forms from '../Forms';\n\nexport default class Account {\n  constructor() {\n    this.$accountContents = $('[data-template-account]');\n    this.$loginContent = $('[data-template-account-login]');\n    this.$addressesContent = $('[data-template-account-addresses]');\n    this.$addressButtonFocus = null;\n\n    this._loginToggle = this._loginToggle.bind(this);\n\n    if (this.$loginContent.length) {\n      this._initLoginPage();\n    }\n\n    if (this.$addressesContent.length) {\n      this._initAddressPage();\n    }\n\n    if (this.$accountContents.length) {\n      this._init();\n    }\n  }\n\n  _init() {\n    new Forms(this.$accountContents);\n  }\n\n  _initLoginPage() {\n    this.$loginToggle = this.$loginContent.find('[data-login-toggle]');\n    this.$login = this.$loginContent.find('[data-account-login-main]');\n    this.$recovery = this.$loginContent.find('[data-account-login-recovery]');\n    this.$recoveryHasMessage = this.$recovery.find('[data-recovery-has-message]');\n\n    this.$loginToggle.on('click', this._loginToggle);\n\n    if (this.$recoveryHasMessage.length) {\n      this._loginToggle();\n    }\n  }\n\n  _loginToggle(event = null) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.$login.toggleClass('visible');\n    this.$recovery.toggleClass('visible');\n  }\n\n  _initAddressPage() {\n    const $customerAddresses = this.$addressesContent.find('[data-address-id]');\n\n    this.$addressesContent.on('click', '[data-edit-address]', (event) => {\n      const $target = $(event.currentTarget);\n      const itemId = $target.attr('data-edit-address');\n\n      $customerAddresses.removeClass('visible');\n      this.$addressButtonFocus = $target;\n\n      $(`[data-address-id=\"${itemId}\"]`)\n        .addClass('visible')\n        .find('.form-field-input')\n        .eq(0)\n        .focus();\n    });\n\n    this.$addressesContent.on('click', '[data-edit-address-cancel]', () => {\n      $customerAddresses.removeClass('visible');\n      $('[data-address-id=\"new\"]').addClass('visible');\n\n      // Return focus to last used button\n      this.$addressButtonFocus.focus();\n      this.$addressButtonFocus = null;\n    });\n\n    this.$addressesContent.on('click', '[data-delete-address]', (event) => {\n      const itemId = $(event.target).attr('data-delete-address');\n      Shopify.CustomerAddress.destroy(itemId, '');\n    });\n\n    $customerAddresses.each((i, el) => {\n      const id = $(el).attr('data-address-id');\n\n      const countryEl = `customer_addr_${id}_country`;\n      const provinceEl = `customer_addr_${id}_province`;\n      const options = { hideElement: `address_province_container_${id}` };\n\n      // Initiate provinces for address forms\n      new Shopify.CountryProvinceSelector(countryEl, provinceEl, options);\n    });\n  }\n}\n","import $ from 'jquery';\n\nimport Forms from '../Forms';\n\nexport default class Contact {\n  constructor() {\n    this.$contactContents = $('[data-template-contact]');\n\n    if (this.$contactContents.length) {\n      new Forms(this.$contactContents);\n    }\n  }\n}\n","\n'use strict'\n\nvar selectors = [\n\t'iframe[src*=\"player.vimeo.com\"]',\n\t'iframe[src*=\"youtube.com\"]',\n\t'iframe[src*=\"youtube-nocookie.com\"]',\n\t'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n\t'object'\n]\n\nvar css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}'\n\nmodule.exports = function (parentSelector, opts) {\n\tparentSelector = parentSelector || 'body'\n\topts = opts || {}\n\n\tif (isObject(parentSelector)) {\n\t\topts = parentSelector\n\t\tparentSelector = 'body'\n\t}\n\n\topts.ignore = opts.ignore || ''\n\topts.players = opts.players || ''\n\n\tvar containers = queryAll(parentSelector)\n\tif (!hasLength(containers)) return\n\n\tif (!document.getElementById('fit-vids-style')) {\n\t\tvar head = document.head || document.getElementsByTagName('head')[0]\n\t\thead.appendChild(styles())\n\t}\n\n\tvar custom = toSelectorArray(opts.players) || []\n\tvar ignored = toSelectorArray(opts.ignore) || []\n\tvar selector = selectors\n\t\t.filter(notIgnored(ignored))\n\t\t.concat(custom)\n\t\t.join()\n\n\tif (!hasLength(selector)) return\n\n\tcontainers.forEach(function (container) {\n\t\tvar videos = queryAll(container, selector)\n\t\tvideos.forEach(function (video) {\n\t\t\twrap(video)\n\t\t})\n\t})\n}\n\nfunction queryAll (el, selector) {\n\tif (typeof el === 'string') {\n\t\tselector = el\n\t\tel = document\n\t}\n\treturn Array.prototype.slice.call(el.querySelectorAll(selector))\n}\n\nfunction toSelectorArray (input) {\n\tif (typeof input === 'string') {\n\t\treturn input.split(',').map(trim).filter(hasLength)\n\t} else if (isArray(input)) {\n\t\treturn flatten(input.map(toSelectorArray).filter(hasLength))\n\t}\n\treturn input || []\n}\n\nfunction wrap (el) {\n\tif (/fluid-width-video-wrapper/.test(el.parentNode.className)) return\n\n\tvar widthAttr = parseInt(el.getAttribute('width'), 10)\n\tvar heightAttr = parseInt(el.getAttribute('height'), 10)\n\n\tvar width = !isNaN(widthAttr) ? widthAttr : el.clientWidth\n\tvar height = !isNaN(heightAttr) ? heightAttr : el.clientHeight\n\tvar aspect = height / width\n\n\tel.removeAttribute('width')\n\tel.removeAttribute('height')\n\n\tvar wrapper = document.createElement('div')\n\tel.parentNode.insertBefore(wrapper, el)\n\twrapper.className = 'fluid-width-video-wrapper'\n\twrapper.style.paddingTop = (aspect * 100) + '%'\n\twrapper.appendChild(el)\n}\n\nfunction styles () {\n\tvar div = document.createElement('div')\n\tdiv.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>'\n\treturn div.childNodes[1]\n}\n\nfunction notIgnored (ignored) {\n\tif (ignored.length < 1) {\n\t\treturn function () {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn function (selector) {\n\t\treturn ignored.indexOf(selector) === -1\n\t}\n}\n\nfunction hasLength (input) {\n\treturn input.length > 0\n}\n\nfunction trim (str) {\n\treturn str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction flatten (input) {\n\treturn [].concat.apply([], input)\n}\n\nfunction isObject (input) {\n\treturn Object.prototype.toString.call(input) === '[object Object]'\n}\n\nfunction isArray (input) {\n\treturn Object.prototype.toString.call(input) === '[object Array]'\n}\n","'use strict';\n\n// forEach method, could be shipped as part of an Object Literal/Module\nfunction forEach(array, callback, scope) {\n  var index = 0;\n\n  for (index = 0; index < array.length; index += 1) {\n    callback.call(scope, array[index], index); // passes back stuff we need\n  }\n}\n\nfunction hasClass(el, className) {\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  return el.className.match(regex);\n}\n\nfunction addClass(el, className) {\n  // Return if it already has the className\n  if (hasClass(el, className)) return;\n\n  el.className += ' ' + className;\n}\n\nfunction removeClass(el, className) {\n  // Return if it doesn't already have the className\n  if (!hasClass(el, className)) return;\n\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  el.className = el.className.replace(regex, '');\n}\n\nfunction toggleClass(el, className) {\n  if (hasClass(el, className)) {\n    removeClass(el, className);\n  } else {\n    addClass(el, className);\n  }\n}\n\nfunction findPairingFromPairingTrigger(pairings, pairingTrigger) {\n  var foundPairing = null;\n\n  forEach(pairings, function (pairing) {\n    if (pairing.trigger === pairingTrigger) {\n      foundPairing = pairing;\n    }\n  });\n\n  return foundPairing;\n}\n\n/**\n * See {@link https://stackoverflow.com/revisions/2117523/11 Stack Overflow}\n * An RFC4122 v4 compliant uuid solution\n */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nfunction init(groupedContent) {\n  var triggers = groupedContent.triggers;\n  var pairings = groupedContent.pairings;\n\n  triggers.setAttribute('role', 'tablist');\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'tab');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n    pairing.content.setAttribute('role', 'tabpanel');\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.trigger.removeAttribute('aria-selected');\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y = {\n  init: init,\n  update: update\n};\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/** A class for creating, managing, and destroying groupable content as tabs. */\n\nvar TabsLayout = function () {\n  function TabsLayout(groupedContent) {\n    classCallCheck(this, TabsLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init();\n    a11y.init(this.groupedContent);\n  }\n\n  createClass(TabsLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      var existingActive = false;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n\n        if (hasClass(trigger, 'active')) {\n          existingActive = true;\n        }\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      if (!existingActive) {\n        addClass(this.pairings[0].trigger, 'active');\n        addClass(this.pairings[0].content, 'active');\n      }\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n      var pairingIndex = this.pairings.indexOf(pairing);\n      var prevIndex = pairingIndex - 1 < 0 ? this.pairings.length - 1 : pairingIndex - 1;\n      var nextIndex = pairingIndex + 1 >= this.pairings.length ? 0 : pairingIndex + 1;\n\n      var nextPairing = null;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          nextPairing = this.pairings[prevIndex];\n          break;\n        case 'ArrowRight':\n          nextPairing = this.pairings[nextIndex];\n          break;\n        default:\n          nextPairing = null;\n          break;\n      }\n\n      // Fast exit if we can't find the tab or tabs\n      if (nextPairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(nextPairing.trigger, 'active');\n      addClass(nextPairing.content, 'active');\n\n      nextPairing.trigger.focus();\n\n      a11y.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the tab or tabs\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(pairing.trigger, 'active');\n      addClass(pairing.content, 'active');\n\n      a11y.update(this.groupedContent);\n    }\n  }]);\n  return TabsLayout;\n}();\n\nfunction init$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'button');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n    pairing.trigger.setAttribute('tabIndex', '0');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y$1 = {\n  init: init$1,\n  update: update$1\n};\n\n/** A class for creating, managing, and destroying groupable content as an accordion. */\n\nvar AccordionLayout = function () {\n  function AccordionLayout(groupedContent) {\n    classCallCheck(this, AccordionLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init(this.pairings);\n    a11y$1.init(this.groupedContent);\n  }\n\n  createClass(AccordionLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n        var content = pairing.content;\n\n        trigger.parentNode.insertBefore(content, trigger.nextSibling);\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      this.groupedContent.contents.remove();\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if enter isn't pressed or we can't find the group\n      if (event.key !== 'Enter' || pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the group\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }]);\n  return AccordionLayout;\n}();\n\n/**\n * Returns an array of nodes related to the heading node.\n * @param {node} heading - The heading node to search for content from.\n * @returns {node[]}\n */\nfunction getHeadingContent(heading) {\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(heading.tagName);\n  var content = [];\n\n  var sibling = heading.nextElementSibling;\n\n  while (sibling !== null && (headingTagNames.indexOf(sibling.tagName) === -1 || headingTagNames.indexOf(sibling.tagName) > tagNameIndex)) {\n    content.push(sibling);\n\n    sibling = sibling.nextElementSibling;\n  }\n\n  return content;\n}\n\n/**\n * Returns an object array representing the heading tree from a given node.\n * Root nodes are evaluated differently, and requires the evaluatingRoot flag\n * to be true.\n * @param {node} el - The node being evaluated.\n * @param {node[]} children - The children of the evaluated node.\n * @param {boolean} [evaluatingRoot] - Whether to evaluate as root node.\n * @returns {Object[]}\n */\nfunction getHeadingTree(el, children) {\n  var evaluatingRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(el.tagName);\n  var headings = [];\n\n  var currentLowestTagNameIndex = 5;\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var childTagNameIndex = headingTagNames.indexOf(child.tagName);\n\n    if (childTagNameIndex !== -1 && childTagNameIndex < currentLowestTagNameIndex) {\n      currentLowestTagNameIndex = childTagNameIndex;\n    }\n\n    if (evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex <= currentLowestTagNameIndex || !evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex === tagNameIndex + 1) {\n      var siblings = getHeadingContent(child);\n\n      var childNode = {\n        el: child,\n        content: siblings,\n        children: getHeadingTree(child, siblings)\n      };\n\n      headings.push(childNode);\n    }\n  }\n\n  return headings;\n}\n\n/**\n * Returns groupings of headings that meet the minimum sequence value\n * and don't contain any invalid headings.\n * @param {Object[]} headings - An array of heading objects.\n * @param {int[]} invalidHeadings - An array of invalid heading integers,\n *                                  representing indexes of headings.\n * @param {*} minInSequence - Minimum headings in sequence before being considered\n *                            as a grouping.\n * @returns {Object[][]}\n */\nfunction getHeadingGroupsInSequence(headings, invalidHeadings, minInSequence) {\n  var headingGroupsInSequence = [];\n  var currentHeadingGroupInSequence = [];\n  var currentSequence = 0;\n\n  for (var i = 0; i < headings.length; i += 1) {\n    if (invalidHeadings.indexOf(i) === -1) {\n      currentHeadingGroupInSequence.push(headings[i]);\n      currentSequence += 1;\n\n      if (i !== headings.length - 1 && headings[i].el.tagName !== headings[i + 1].el.tagName && invalidHeadings.indexOf(i + 1)) {\n        currentHeadingGroupInSequence = [];\n        currentSequence = 0;\n      } else if (i !== 0 && headings[i].el.tagName !== headings[i - 1].el.tagName) {\n        currentHeadingGroupInSequence.pop();\n        currentSequence -= 1;\n\n        if (currentSequence >= minInSequence) {\n          headingGroupsInSequence.push(currentHeadingGroupInSequence);\n        }\n\n        currentHeadingGroupInSequence = [headings[i]];\n        currentSequence = 1;\n      }\n    }\n  }\n\n  if (currentSequence >= minInSequence) {\n    headingGroupsInSequence.push(currentHeadingGroupInSequence);\n  }\n\n  return headingGroupsInSequence;\n}\n\n/**\n * Generates necessary DOM elements to group related content.\n * Returns a object array representing the grouped content.\n * @param {Object[]} children - An array of objects.\n * @returns {Object[]}\n */\nfunction createGroupedContent(children) {\n  var pairings = [];\n\n  var firstChild = children[0].el;\n  var triggers = document.createElement('div');\n  var contents = document.createElement('div');\n\n  contents = firstChild.parentNode.insertBefore(contents, firstChild.nextSibling);\n  triggers = firstChild.parentNode.insertBefore(triggers, firstChild.nextSibling);\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var trigger = child.el;\n    var content = document.createElement('div');\n\n    trigger = triggers.appendChild(trigger);\n    content = contents.appendChild(content);\n\n    for (var j = 0; j < child.content.length; j += 1) {\n      content.appendChild(child.content[j]);\n    }\n\n    pairings.push({\n      trigger: trigger,\n      content: content\n    });\n  }\n\n  return {\n    triggers: triggers,\n    contents: contents,\n    pairings: pairings\n  };\n}\n\n/**\n * Returns all groupable content within the supplied node.\n * @param {node} node - A node to traverse for groupable content.\n * @returns {Object[][]}\n */\n/*\n * Recursive function:\n *  Returns all groups of headings that\n *  are elegible to become grouped content.\n */\nfunction getGroupedContentSet(node) {\n  var children = node.children;\n  var childrenWithGroupableContent = [];\n  var groupedContentSet = [];\n\n  if (children.length === 0) {\n    return [];\n  }\n\n  for (var i = 0; i < children.length; i += 1) {\n    var childGroupableContent = getGroupedContentSet(children[i]);\n\n    if (childGroupableContent.length > 0) {\n      childrenWithGroupableContent.push(i);\n      groupedContentSet = groupedContentSet.concat(childGroupableContent);\n    }\n  }\n\n  var headingGroupsInSequence = getHeadingGroupsInSequence(children, childrenWithGroupableContent, 3);\n\n  for (var _i = 0; _i < headingGroupsInSequence.length; _i += 1) {\n    groupedContentSet.push(createGroupedContent(headingGroupsInSequence[_i]));\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * When static parsing isn't enough, there's intelliparse™!\n * Searches through dom content to find heading groupings that\n * are elegible to become tab groups.\n * Assumes that content is in a flattened hierarchy in the dom\n * and interprets increasing heading values as a deeper level of nesting.\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction intelliParse(el) {\n  var children = el.children;\n  var heading = el.querySelector('h1, h2, h3, h4, h5, h6');\n\n  // Fast return if there's no headings\n  if (children.length === 0) return [];\n\n  var rootNode = {\n    el: el,\n    content: null,\n    children: getHeadingTree(heading, children, true)\n  };\n\n  return getGroupedContentSet(rootNode);\n}\n\n/**\n * Parses content from a given node based on a static structure.\n * The structure is as follows:\n * <ul class=\"tabs\">\n *   <li class=\"active\">Tab 1</li>\n *   <li>Tab 2</li>\n *   <li>Tab 3</li>\n * </ul>\n *\n * <ul class=\"tabs-content\">\n *   <li class=\"active\">\n *     <p>Tab 1 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 2 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 3 content goes here.</p>\n *   </li>\n * </ul>\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction staticParse(el) {\n  var groupedContentSet = [];\n\n  var tabs = el.querySelectorAll('.tabs');\n\n  for (var i = 0; i < tabs.length; i += 1) {\n    var triggers = tabs[i].children;\n    var contents = tabs[i].nextElementSibling.children;\n\n    // Only add a tab group if equal triggers to contents\n    if (triggers.length === contents.length) {\n      var length = groupedContentSet.push({\n        triggers: tabs[i],\n        contents: tabs[i].nextElementSibling,\n        pairings: []\n      });\n      var index = length - 1;\n\n      for (var j = 0; j < triggers.length; j += 1) {\n        var trigger = triggers[j];\n        var content = contents[j];\n\n        var pairing = {\n          trigger: trigger,\n          content: content\n        };\n\n        groupedContentSet[index].pairings.push(pairing);\n      }\n    }\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * Returns all groupable content as an array of object arrays.\n * @param {node} content - The node to parse for groupable content.\n * @param {boolean} intelliparse - Whether to use intelligent parsing.\n * @returns {Object[][]}\n */\nfunction parse(content) {\n  var intelliparse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var groupedContentSet = intelliparse ? intelliParse(content) : staticParse(content);\n\n  return groupedContentSet;\n}\n\n/** A class for creating, managing, and destroying groupable content. */\n\nvar GroupedContent = function () {\n  /**\n   * Create grouped content\n   * @param {node} el - The element to search for groupable content in.\n   * @param {Object}  [options] - Additional options\n   * @param {string}  [options.layout] - The layout to display groupable content in.\n   * @param {boolean} [options.intelliparse] - The parsing algorithm used to find content with.\n   */\n  function GroupedContent(el) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, GroupedContent);\n\n    this.namespace = 'grouped-content';\n    this.el = el;\n    this.groupedContentInstances = [];\n\n    var layout = options.layout || 'tabs';\n    var intelliparse = !!options.intelliparse;\n\n    forEach(parse(el, intelliparse), function (groupedContent) {\n      var id = uuidv4();\n      var instance = null;\n      var groupedContentWrapper = document.createElement('div');\n\n      groupedContentWrapper = groupedContent.triggers.parentNode.insertBefore(groupedContentWrapper, groupedContent.triggers.nextSibling);\n\n      addClass(groupedContentWrapper, _this.namespace);\n      addClass(groupedContentWrapper, _this.namespace + '-layout-' + layout);\n\n      groupedContentWrapper.appendChild(groupedContent.triggers);\n      groupedContentWrapper.appendChild(groupedContent.contents);\n\n      groupedContent.namespace = _this.namespace;\n      groupedContent.id = id;\n      groupedContent.triggers.id = _this.namespace + '-' + id + '-triggers';\n      groupedContent.contents.id = _this.namespace + '-' + id + '-contents';\n\n      addClass(groupedContent.triggers, _this.namespace + '-triggers');\n      addClass(groupedContent.contents, _this.namespace + '-contents');\n\n      forEach(groupedContent.pairings, function (pairing) {\n        addClass(pairing.trigger, _this.namespace + '-trigger');\n        addClass(pairing.content, _this.namespace + '-content');\n      });\n\n      switch (layout) {\n        case 'accordion':\n          instance = new AccordionLayout(groupedContent);\n          break;\n        case 'tabs':\n        default:\n          instance = new TabsLayout(groupedContent);\n          break;\n      }\n\n      _this.groupedContentInstances.push({\n        groupedContent: groupedContent,\n        instance: instance\n      });\n    });\n  }\n\n  /** Unload all grouped content instances */\n\n\n  createClass(GroupedContent, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.groupedContentInstances, function (groupedContentInstance) {\n        groupedContentInstance.instance.unload();\n      });\n    }\n  }]);\n  return GroupedContent;\n}();\n\nmodule.exports = GroupedContent;\n","import fitvids from 'fitvids';\nimport GroupedContent from 'grouped-content';\n\nexport default class RichText {\n  constructor($el) {\n    this.$el = $el;\n    this._initExternalLinks();\n    this.groupedContent = null;\n\n    if (this.$el.length) {\n      this.groupedContent = new GroupedContent($el.get(0), {\n        layout: 'tabs',\n        intelliparse: false,\n      });\n      fitvids();\n    }\n  }\n\n  unload() {\n    if (this.groupedContent) {\n      this.groupedContent.unload();\n    }\n  }\n\n  /**\n   * Open links within an RTE field in a new window if they point to external domains\n   *\n   * @private\n   */\n  _initExternalLinks(){\n    const anchors = this.$el.find('a[href^=\"http\"]').filter((i, el) => {\n      return el.href.indexOf(location.hostname) === -1;\n    });\n\n    anchors.attr('target', '_blank');\n  }\n}\n","import $ from 'jquery';\nimport RichText from '../components/RichText';\n\nexport default class Page {\n  constructor() {\n    this.$pageContent = $('[data-template-page]');\n\n    if (this.$pageContent.length) {\n      new RichText(this.$pageContent);\n    }\n  }\n}\n","export default class Sections {\n  constructor() {\n    this.handlers = {};\n    this.instances = {};\n    this._onSectionEvent = this._onSectionEvent.bind(this);\n\n    document.addEventListener('shopify:section:load', this._onSectionEvent);\n    document.addEventListener('shopify:section:unload', this._onSectionEvent);\n    document.addEventListener('shopify:section:select', this._onSectionEvent);\n    document.addEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.addEventListener('shopify:block:select', this._onSectionEvent);\n    document.addEventListener('shopify:block:deselect', this._onSectionEvent);\n  }\n\n  /**\n   * Stop listening for section events, and unbind all handlers.\n   */\n  unbind() {\n    document.removeEventListener('shopify:section:load', this._onSectionEvent);\n    document.removeEventListener('shopify:section:unload', this._onSectionEvent);\n    document.removeEventListener('shopify:section:select', this._onSectionEvent);\n    document.removeEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.removeEventListener('shopify:block:select', this._onSectionEvent);\n    document.removeEventListener('shopify:block:deselect', this._onSectionEvent);\n\n    // Unload all instances\n    for (let i = 0; i < this.instances.length; i++) {\n      this._triggerInstanceEvent(this.instances[i], 'onSectionUnload');\n    }\n\n    this.handlers = {};\n    this.instances = {};\n  }\n\n  /**\n   * Register a section handler.\n   *\n   * @param {string} type\n   *        The section type to handle. The handler will be called for all\n   *        sections with this type.\n   *\n   * @param {function} handler\n   *        The handler function is passed information about a specific section\n   *        instance. The handler is expected to return an object that will be\n   *        associated with the section instance.\n   *\n   *        Section handlers are passed an object with the following parameters:\n   *          {string} id\n   *          An ID that maps to a specific section instance. Typically the\n   *          section's filename for static sections, or a generated ID for\n   *          dynamic sections.\n   *\n   *          {string} type\n   *          The section type, as supplied when registered.\n   *\n   *          {Element} el\n   *          The root DOM element for the section instance.\n   *\n   *          {Object} data\n   *          Data loaded from the section script element. Defaults to an\n   *          empty object.\n   *\n   *          {Function} postMessage\n   *          A function that can be called to pass messages between sections.\n   *          The function should be called with a message \"name\", and\n   *          optionally some data.\n   */\n  register(type, handler) {\n    if (this.handlers[type]) {\n      console.warn(`Sections: section handler already exists of type '${type}'.`);\n    }\n\n    // Store the section handler\n    this.handlers[type] = handler;\n\n    // Init sections for this type\n    this._initSections(type);\n  }\n\n  /**\n   * Initialize sections already on the page.\n   */\n  _initSections(type) {\n    // Fetch all existing sections of our type on the page\n    const dataEls = document.querySelectorAll(`[data-section-type=\"${type}\"]`);\n    if (!dataEls) return;\n\n    // Create an instance for each section\n    for (let i = 0; i < dataEls.length; i++) {\n      const dataEl = dataEls[i];\n      const el = dataEl.parentNode;\n\n      // Get instance ID\n      const idEl = el.querySelector('[data-section-id]');\n\n      if (!idEl) {\n        console.warn(`Sections: unable to find section id for '${type}'.`, el);\n        continue;\n      }\n\n      const sectionId = idEl.getAttribute('data-section-id');\n      if (!sectionId) {\n        console.warn(`Sections: unable to find section id for '${type}'.`, el);\n        continue;\n      }\n\n      this._createInstance(sectionId, el);\n    }\n  }\n\n  _onSectionEvent(event) {\n    const el = event.target;\n    const sectionId = event.detail.sectionId;\n    const blockId = event.detail.blockId;\n    const instance = this.instances[sectionId];\n\n    switch (event.type) {\n      case 'shopify:section:load':\n        this._createInstance(sectionId, el);\n        break;\n\n      case 'shopify:section:unload':\n        this._triggerInstanceEvent(instance, 'onSectionUnload', { el, id: sectionId });\n        delete this.instances[sectionId];\n        break;\n\n      case 'shopify:section:select':\n        this._triggerInstanceEvent(instance, 'onSectionSelect', { el, id: sectionId });\n        break;\n\n      case 'shopify:section:deselect':\n        this._triggerInstanceEvent(instance, 'onSectionDeselect', { el, id: sectionId });\n        break;\n\n      case 'shopify:block:select':\n        this._triggerInstanceEvent(instance, 'onSectionBlockSelect', { el, id: blockId });\n        break;\n\n      case 'shopify:block:deselect':\n        this._triggerInstanceEvent(instance, 'onSectionBlockDeselect', { el, id: blockId });\n        break;\n    }\n  }\n\n  _triggerInstanceEvent(instance, eventName, ...args) {\n    if (instance && instance[eventName]) {\n      instance[eventName](...args);\n    }\n  }\n\n  _postMessage(name, data) {\n    Object.keys(this.instances).forEach((id) => {\n      this._triggerInstanceEvent(this.instances[id], 'onSectionMessage', name, data);\n    });\n  }\n\n  _createInstance(id, el) {\n    const typeEl = el.querySelector('[data-section-type]');\n    if (!typeEl) return;\n\n    const type = typeEl.getAttribute('data-section-type');\n    if (!type) return;\n\n    const handler = this.handlers[type];\n    if (!handler) return console.warn(`Sections: unable to find section handler for type '${type}'.`);\n\n    const data = this._loadData(el);\n    const postMessage = this._postMessage.bind(this);\n\n    this.instances[id] = handler({id, type, el, data, postMessage});\n  }\n\n  _loadData(el) {\n    const dataEl = el.querySelector('[data-section-data]');\n    if (!dataEl) return {};\n\n    // Load data from attribute, or innerHTML\n    const data = dataEl.getAttribute('data-section-data') || dataEl.innerHTML;\n\n    try {\n      return JSON.parse(data);\n    } catch(error) {\n      console.warn(`Sections: invalid section data found. ${error.message}`);\n      return {};\n    }\n  }\n}\n","'use strict';\n\nvar moneyFormats = {\n  USD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} USD'\n  },\n  EUR: {\n    'money_format': '&euro;{{amount}}',\n    'money_with_currency_format': '&euro;{{amount}} EUR'\n  },\n  GBP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} GBP'\n  },\n  CAD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} CAD'\n  },\n  ALL: {\n    'money_format': 'Lek {{amount}}',\n    'money_with_currency_format': 'Lek {{amount}} ALL'\n  },\n  DZD: {\n    'money_format': 'DA {{amount}}',\n    'money_with_currency_format': 'DA {{amount}} DZD'\n  },\n  AOA: {\n    'money_format': 'Kz{{amount}}',\n    'money_with_currency_format': 'Kz{{amount}} AOA'\n  },\n  ARS: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} ARS'\n  },\n  AMD: {\n    'money_format': '{{amount}} AMD',\n    'money_with_currency_format': '{{amount}} AMD'\n  },\n  AWG: {\n    'money_format': 'Afl{{amount}}',\n    'money_with_currency_format': 'Afl{{amount}} AWG'\n  },\n  AUD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} AUD'\n  },\n  BBD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} Bds'\n  },\n  AZN: {\n    'money_format': 'm.{{amount}}',\n    'money_with_currency_format': 'm.{{amount}} AZN'\n  },\n  BDT: {\n    'money_format': 'Tk {{amount}}',\n    'money_with_currency_format': 'Tk {{amount}} BDT'\n  },\n  BSD: {\n    'money_format': 'BS${{amount}}',\n    'money_with_currency_format': 'BS${{amount}} BSD'\n  },\n  BHD: {\n    'money_format': '{{amount}}0 BD',\n    'money_with_currency_format': '{{amount}}0 BHD'\n  },\n  BYR: {\n    'money_format': 'Br {{amount}}',\n    'money_with_currency_format': 'Br {{amount}} BYR'\n  },\n  BZD: {\n    'money_format': 'BZ${{amount}}',\n    'money_with_currency_format': 'BZ${{amount}} BZD'\n  },\n  BTN: {\n    'money_format': 'Nu {{amount}}',\n    'money_with_currency_format': 'Nu {{amount}} BTN'\n  },\n  BAM: {\n    'money_format': 'KM {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'KM {{amount_with_comma_separator}} BAM'\n  },\n  BRL: {\n    'money_format': 'R$ {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'R$ {{amount_with_comma_separator}} BRL'\n  },\n  BOB: {\n    'money_format': 'Bs{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs{{amount_with_comma_separator}} BOB'\n  },\n  BWP: {\n    'money_format': 'P{{amount}}',\n    'money_with_currency_format': 'P{{amount}} BWP'\n  },\n  BND: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} BND'\n  },\n  BGN: {\n    'money_format': '{{amount}} лв',\n    'money_with_currency_format': '{{amount}} лв BGN'\n  },\n  MMK: {\n    'money_format': 'K{{amount}}',\n    'money_with_currency_format': 'K{{amount}} MMK'\n  },\n  KHR: {\n    'money_format': 'KHR{{amount}}',\n    'money_with_currency_format': 'KHR{{amount}}'\n  },\n  KYD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} KYD'\n  },\n  XAF: {\n    'money_format': 'FCFA{{amount}}',\n    'money_with_currency_format': 'FCFA{{amount}} XAF'\n  },\n  CLP: {\n    'money_format': '${{amount_no_decimals}}',\n    'money_with_currency_format': '${{amount_no_decimals}} CLP'\n  },\n  CNY: {\n    'money_format': '&#165;{{amount}}',\n    'money_with_currency_format': '&#165;{{amount}} CNY'\n  },\n  COP: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} COP'\n  },\n  CRC: {\n    'money_format': '&#8353; {{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#8353; {{amount_with_comma_separator}} CRC'\n  },\n  HRK: {\n    'money_format': '{{amount_with_comma_separator}} kn',\n    'money_with_currency_format': '{{amount_with_comma_separator}} kn HRK'\n  },\n  CZK: {\n    'money_format': '{{amount_with_comma_separator}} K&#269;',\n    'money_with_currency_format': '{{amount_with_comma_separator}} K&#269;'\n  },\n  DKK: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr.{{amount_with_comma_separator}}'\n  },\n  DOP: {\n    'money_format': 'RD$ {{amount}}',\n    'money_with_currency_format': 'RD$ {{amount}}'\n  },\n  XCD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'EC${{amount}}'\n  },\n  EGP: {\n    'money_format': 'LE {{amount}}',\n    'money_with_currency_format': 'LE {{amount}} EGP'\n  },\n  ETB: {\n    'money_format': 'Br{{amount}}',\n    'money_with_currency_format': 'Br{{amount}} ETB'\n  },\n  XPF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}} XPF',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} XPF'\n  },\n  FJD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'FJ${{amount}}'\n  },\n  GMD: {\n    'money_format': 'D {{amount}}',\n    'money_with_currency_format': 'D {{amount}} GMD'\n  },\n  GHS: {\n    'money_format': 'GH&#8373;{{amount}}',\n    'money_with_currency_format': 'GH&#8373;{{amount}}'\n  },\n  GTQ: {\n    'money_format': 'Q{{amount}}',\n    'money_with_currency_format': '{{amount}} GTQ'\n  },\n  GYD: {\n    'money_format': 'G${{amount}}',\n    'money_with_currency_format': '${{amount}} GYD'\n  },\n  GEL: {\n    'money_format': '{{amount}} GEL',\n    'money_with_currency_format': '{{amount}} GEL'\n  },\n  HNL: {\n    'money_format': 'L {{amount}}',\n    'money_with_currency_format': 'L {{amount}} HNL'\n  },\n  HKD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'HK${{amount}}'\n  },\n  HUF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} Ft'\n  },\n  ISK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr ISK'\n  },\n  INR: {\n    'money_format': 'Rs. {{amount}}',\n    'money_with_currency_format': 'Rs. {{amount}}'\n  },\n  IDR: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Rp {{amount_with_comma_separator}}'\n  },\n  ILS: {\n    'money_format': '{{amount}} NIS',\n    'money_with_currency_format': '{{amount}} NIS'\n  },\n  JMD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} JMD'\n  },\n  JPY: {\n    'money_format': '&#165;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#165;{{amount_no_decimals}} JPY'\n  },\n  JEP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} JEP'\n  },\n  JOD: {\n    'money_format': '{{amount}}0 JD',\n    'money_with_currency_format': '{{amount}}0 JOD'\n  },\n  KZT: {\n    'money_format': '{{amount}} KZT',\n    'money_with_currency_format': '{{amount}} KZT'\n  },\n  KES: {\n    'money_format': 'KSh{{amount}}',\n    'money_with_currency_format': 'KSh{{amount}}'\n  },\n  KWD: {\n    'money_format': '{{amount}}0 KD',\n    'money_with_currency_format': '{{amount}}0 KWD'\n  },\n  KGS: {\n    'money_format': 'лв{{amount}}',\n    'money_with_currency_format': 'лв{{amount}}'\n  },\n  LVL: {\n    'money_format': 'Ls {{amount}}',\n    'money_with_currency_format': 'Ls {{amount}} LVL'\n  },\n  LBP: {\n    'money_format': 'L&pound;{{amount}}',\n    'money_with_currency_format': 'L&pound;{{amount}} LBP'\n  },\n  LTL: {\n    'money_format': '{{amount}} Lt',\n    'money_with_currency_format': '{{amount}} Lt'\n  },\n  MGA: {\n    'money_format': 'Ar {{amount}}',\n    'money_with_currency_format': 'Ar {{amount}} MGA'\n  },\n  MKD: {\n    'money_format': 'ден {{amount}}',\n    'money_with_currency_format': 'ден {{amount}} MKD'\n  },\n  MOP: {\n    'money_format': 'MOP${{amount}}',\n    'money_with_currency_format': 'MOP${{amount}}'\n  },\n  MVR: {\n    'money_format': 'Rf{{amount}}',\n    'money_with_currency_format': 'Rf{{amount}} MRf'\n  },\n  MXN: {\n    'money_format': '$ {{amount}}',\n    'money_with_currency_format': '$ {{amount}} MXN'\n  },\n  MYR: {\n    'money_format': 'RM{{amount}} MYR',\n    'money_with_currency_format': 'RM{{amount}} MYR'\n  },\n  MUR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} MUR'\n  },\n  MDL: {\n    'money_format': '{{amount}} MDL',\n    'money_with_currency_format': '{{amount}} MDL'\n  },\n  MAD: {\n    'money_format': '{{amount}} dh',\n    'money_with_currency_format': 'Dh {{amount}} MAD'\n  },\n  MNT: {\n    'money_format': '{{amount_no_decimals}} &#8366',\n    'money_with_currency_format': '{{amount_no_decimals}} MNT'\n  },\n  MZN: {\n    'money_format': '{{amount}} Mt',\n    'money_with_currency_format': 'Mt {{amount}} MZN'\n  },\n  NAD: {\n    'money_format': 'N${{amount}}',\n    'money_with_currency_format': 'N${{amount}} NAD'\n  },\n  NPR: {\n    'money_format': 'Rs{{amount}}',\n    'money_with_currency_format': 'Rs{{amount}} NPR'\n  },\n  ANG: {\n    'money_format': '&fnof;{{amount}}',\n    'money_with_currency_format': '{{amount}} NA&fnof;'\n  },\n  NZD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} NZD'\n  },\n  NIO: {\n    'money_format': 'C${{amount}}',\n    'money_with_currency_format': 'C${{amount}} NIO'\n  },\n  NGN: {\n    'money_format': '&#8358;{{amount}}',\n    'money_with_currency_format': '&#8358;{{amount}} NGN'\n  },\n  NOK: {\n    'money_format': 'kr {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr {{amount_with_comma_separator}} NOK'\n  },\n  OMR: {\n    'money_format': '{{amount_with_comma_separator}} OMR',\n    'money_with_currency_format': '{{amount_with_comma_separator}} OMR'\n  },\n  PKR: {\n    'money_format': 'Rs.{{amount}}',\n    'money_with_currency_format': 'Rs.{{amount}} PKR'\n  },\n  PGK: {\n    'money_format': 'K {{amount}}',\n    'money_with_currency_format': 'K {{amount}} PGK'\n  },\n  PYG: {\n    'money_format': 'Gs. {{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'Gs. {{amount_no_decimals_with_comma_separator}} PYG'\n  },\n  PEN: {\n    'money_format': 'S/. {{amount}}',\n    'money_with_currency_format': 'S/. {{amount}} PEN'\n  },\n  PHP: {\n    'money_format': '&#8369;{{amount}}',\n    'money_with_currency_format': '&#8369;{{amount}} PHP'\n  },\n  PLN: {\n    'money_format': '{{amount_with_comma_separator}} zl',\n    'money_with_currency_format': '{{amount_with_comma_separator}} zl PLN'\n  },\n  QAR: {\n    'money_format': 'QAR {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'QAR {{amount_with_comma_separator}}'\n  },\n  RON: {\n    'money_format': '{{amount_with_comma_separator}} lei',\n    'money_with_currency_format': '{{amount_with_comma_separator}} lei RON'\n  },\n  RUB: {\n    'money_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}} RUB'\n  },\n  RWF: {\n    'money_format': '{{amount_no_decimals}} RF',\n    'money_with_currency_format': '{{amount_no_decimals}} RWF'\n  },\n  WST: {\n    'money_format': 'WS$ {{amount}}',\n    'money_with_currency_format': 'WS$ {{amount}} WST'\n  },\n  SAR: {\n    'money_format': '{{amount}} SR',\n    'money_with_currency_format': '{{amount}} SAR'\n  },\n  STD: {\n    'money_format': 'Db {{amount}}',\n    'money_with_currency_format': 'Db {{amount}} STD'\n  },\n  RSD: {\n    'money_format': '{{amount}} RSD',\n    'money_with_currency_format': '{{amount}} RSD'\n  },\n  SCR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} SCR'\n  },\n  SGD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} SGD'\n  },\n  SYP: {\n    'money_format': 'S&pound;{{amount}}',\n    'money_with_currency_format': 'S&pound;{{amount}} SYP'\n  },\n  ZAR: {\n    'money_format': 'R {{amount}}',\n    'money_with_currency_format': 'R {{amount}} ZAR'\n  },\n  KRW: {\n    'money_format': '&#8361;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#8361;{{amount_no_decimals}} KRW'\n  },\n  LKR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} LKR'\n  },\n  SEK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr SEK'\n  },\n  CHF: {\n    'money_format': 'SFr. {{amount}}',\n    'money_with_currency_format': 'SFr. {{amount}} CHF'\n  },\n  TWD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TWD'\n  },\n  THB: {\n    'money_format': '{{amount}} &#xe3f;',\n    'money_with_currency_format': '{{amount}} &#xe3f; THB'\n  },\n  TZS: {\n    'money_format': '{{amount}} TZS',\n    'money_with_currency_format': '{{amount}} TZS'\n  },\n  TTD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TTD'\n  },\n  TND: {\n    'money_format': '{{amount}}',\n    'money_with_currency_format': '{{amount}} DT'\n  },\n  TRY: {\n    'money_format': '{{amount}}TL',\n    'money_with_currency_format': '{{amount}}TL'\n  },\n  UGX: {\n    'money_format': 'Ush {{amount_no_decimals}}',\n    'money_with_currency_format': 'Ush {{amount_no_decimals}} UGX'\n  },\n  UAH: {\n    'money_format': '₴{{amount}}',\n    'money_with_currency_format': '₴{{amount}} UAH'\n  },\n  AED: {\n    'money_format': 'Dhs. {{amount}}',\n    'money_with_currency_format': 'Dhs. {{amount}} AED'\n  },\n  UYU: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} UYU'\n  },\n  VUV: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}}VT'\n  },\n  VEF: {\n    'money_format': 'Bs. {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs. {{amount_with_comma_separator}} VEF'\n  },\n  VND: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}&#8363;',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} VND'\n  },\n  XBT: {\n    'money_format': '{{amount_no_decimals}} BTC',\n    'money_with_currency_format': '{{amount_no_decimals}} BTC'\n  },\n  XOF: {\n    'money_format': 'CFA{{amount}}',\n    'money_with_currency_format': 'CFA{{amount}} XOF'\n  },\n  ZMW: {\n    'money_format': 'K{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'ZMW{{amount_no_decimals_with_comma_separator}}'\n  }\n};\n\n/**\n * Format a number to a specific format\n *\n * @param number {Number}\n * @param precision {Number}\n * @param thousands {String}\n * @param decimal {String}\n * @returns {String}\n */\nfunction formatWithDelimiters(number) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n  if (isNaN(number) || !number) {\n    return 0;\n  }\n\n  var preciseNumber = (number / 100.0).toFixed(precision);\n\n  var parts = preciseNumber.split(thousands);\n  var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n  var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n  return dollarsAmount + centsAmount;\n}\n\n/**\n * Convert a money value in cents to a formatted currency string\n *\n * @param cents {Number|String}\n * @param format {String}\n * @returns {String}\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n\n  switch (format.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2, ',', '.');\n      break;\n    case 'amount_with_space_separator':\n      value = formatWithDelimiters(cents, 2, ' ', '.');\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_with_apostrophe_separator':\n      value = formatWithDelimiters(cents, 2, '\\'', '.');\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n    case 'amount_no_decimals_with_space_separator':\n      value = formatWithDelimiters(cents, 0, ' ', '.');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n  }\n\n  return format.replace(placeholderRegex, value);\n}\n\n/**\n * Return the value of money in cents value\n *\n * @param moneyAmount {Number}\n * @param format {String}\n * @param currency {String}\n * @returns {Number}\n * @private\n */\nfunction getCentsValue(moneyAmount, format, currency) {\n  var cents = 0;\n  // Convert prices from float values to integers if needed, then convert\n  if (format.indexOf('amount_no_decimals') !== -1) {\n    cents = moneyAmount * 100;\n  } else if (currency === 'JOD' || currency === 'KWD' || currency === 'BHD') {\n    cents = moneyAmount / 10;\n  } else {\n    cents = moneyAmount;\n  }\n\n  return cents;\n}\n\n/**\n * Converts formatted money to a number\n *\n * @param priceEl {HTMLElement}\n * @returns {Number|String}\n */\nfunction getMoneyValue(priceEl) {\n  var price = priceEl.textContent;\n  var value = parseInt(price.replace(/[^0-9]/g, ''), 10);\n\n  return !isNaN(value) ? value : '';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar CurrencyConverter = function () {\n  function CurrencyConverter() {\n    classCallCheck(this, CurrencyConverter);\n\n    /**\n     * @property {object} defaults                       - The default configuration for CurrencyConverter\n     * @property {string} defaults.switcherSelector      - CSS Selector for dropdown which controls currency conversion\n     * @property {string} defaults.priceSelector         - CSS Selector for elements containing prices\n     * @property {string} defaults.shopCurrency          - Shop's currency (Currency which prices are printed as)\n     * @property {string} defaults.defaultCurrency       - Theme's currency setting, or initial currency to show on the page\n     * @property {string} defaults.displayFormat         - `money_with_currency_format` or `money_format`\n     * @property {string} defaults.moneyFormat           - Shop's currency formatted using the display format\n     * @property {string} defaults.moneyFormatNoCurrency - Shop's currency formatted without showing currency\n     * @property {string} defaults.moneyFormatCurrency   - Shop's currency formatted showing currency\n     */\n    this.defaults = {\n      switcherSelector: '[data-currency-converter]',\n      priceSelector: '.money',\n      shopCurrency: '',\n      defaultCurrency: '',\n      displayFormat: '',\n      moneyFormat: '',\n      moneyFormatNoCurrency: '',\n      moneyFormatCurrency: ''\n    };\n\n    this.options = {};\n    this.moneyFormats = moneyFormats;\n    this.storage = 'currency';\n    this.currentCurrency = null;\n    this.isInitialised = false;\n  }\n\n  createClass(CurrencyConverter, [{\n    key: 'init',\n    value: function init(settings) {\n      var _this = this;\n\n      if (!window.Currency || this.isInitialised) return;\n\n      Object.keys(this.defaults).forEach(function (key) {\n        _this.options[key] = settings[key] || _this.defaults[key];\n      });\n\n      this.currentCurrency = this._getStoredCurrency() || this.options.defaultCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_with_currency_format = this.options.moneyFormatCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_format = this.options.moneyFormatNoCurrency;\n\n      this.isInitialised = true;\n      this._current();\n    }\n\n    /**\n     * Change the currency to a new currency using an ISO currency code\n     *\n     * @param newCurrency\n     */\n\n  }, {\n    key: 'setCurrency',\n    value: function setCurrency(newCurrency) {\n      if (!this.isInitialised) return;\n\n      this._convertAll(this.currentCurrency, newCurrency);\n    }\n\n    /**\n     * Updates a price on the page to use the active Currency, and formatting\n     *\n     * @param priceEl {HTMLElement}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(priceEl) {\n      if (!this.isInitialised) return;\n\n      var attributes = priceEl.attributes;\n      for (var attr = 0; attr < attributes.length; attr++) {\n        var attribute = attributes[attr];\n\n        if (attribute.name.indexOf('data-currency') === 0) {\n          priceEl.setAttribute(attribute.name, '');\n        }\n      }\n\n      var moneyValue = getMoneyValue(priceEl);\n      var centsValue = getCentsValue(moneyValue, this.options.moneyFormat, this.options.shopCurrency);\n\n      // Cents value is empty, but not 0. 0$ is a valid price, while empty is not\n      if (centsValue === '') return;\n\n      var priceFormatted = formatMoney(centsValue, this.options.moneyFormat);\n\n      priceEl.innerHTML = priceFormatted;\n      priceEl.removeAttribute('data-currency');\n      priceEl.setAttribute('data-currency-' + this.options.shopCurrency, priceFormatted);\n      priceEl.setAttribute('data-currency', this.options.shopCurrency);\n\n      this._convertEl(priceEl, this.options.shopCurrency, this.currentCurrency);\n    }\n  }, {\n    key: '_getStoredCurrency',\n    value: function _getStoredCurrency() {\n      try {\n        return localStorage.getItem(this.storage);\n      } catch (error) {\n        console.warn(error);\n        return this.options.defaultCurrency;\n      }\n    }\n  }, {\n    key: '_setStoredCurrency',\n    value: function _setStoredCurrency(currency) {\n      try {\n        localStorage.setItem(this.storage, currency);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n\n    /**\n     * Update the currency switcher to the current currency\n     * @private\n     */\n\n  }, {\n    key: '_current',\n    value: function _current() {\n      var switchers = document.querySelectorAll(this.options.switcherSelector);\n      for (var i = 0; i < switchers.length; i++) {\n        var switcher = switchers[i];\n\n        var childrenEls = switcher.querySelectorAll('option');\n\n        for (var _i = 0; _i < childrenEls.length; _i++) {\n          var optionEl = childrenEls[_i];\n\n          if (optionEl.selected && optionEl.value !== this.currentCurrency) {\n            optionEl.selected = false;\n          }\n\n          if (optionEl.value === this.currentCurrency) {\n            optionEl.selected = true;\n          }\n        }\n      }\n\n      this._convertAll(this.options.shopCurrency, this.currentCurrency);\n    }\n\n    /**\n     * Converts an individual price to the new format\n     *\n     * @param priceEl\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertEl',\n    value: function _convertEl(priceEl, oldCurrency, newCurrency) {\n\n      // If the amount has already been converted, we leave it alone.\n      if (priceEl.getAttribute('data-currency') === newCurrency) {\n        return;\n      }\n\n      // If we are converting to a currency that we have saved, we will use the saved amount.\n      if (priceEl.getAttribute('data-currency-' + newCurrency)) {\n        priceEl.innerHTML = priceEl.getAttribute('data-currency-' + newCurrency);\n      } else {\n        var oldFormat = this.moneyFormats[oldCurrency][this.options.displayFormat];\n        var newFormat = this.moneyFormats[newCurrency][this.options.displayFormat];\n\n        var moneyValue = getMoneyValue(priceEl);\n        var centsValue = getCentsValue(moneyValue, oldFormat, oldCurrency);\n\n        // Cents value is empty, but not 0. 0$ is a valid price, while empty is not\n        if (centsValue === '') return;\n\n        var cents = window.Currency.convert(centsValue, oldCurrency, newCurrency);\n        var priceFormatted = formatMoney(cents, newFormat);\n\n        priceEl.setAttribute('data-currency-' + newCurrency, priceFormatted);\n        priceEl.innerHTML = priceFormatted;\n      }\n\n      priceEl.setAttribute('data-currency', newCurrency);\n    }\n\n    /**\n     * Convert all prices on the page to the new currency\n     *\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertAll',\n    value: function _convertAll(oldCurrency, newCurrency) {\n      var priceEls = document.querySelectorAll(this.options.priceSelector);\n      if (!priceEls) return;\n\n      this.currentCurrency = newCurrency;\n      this._setStoredCurrency(newCurrency);\n\n      for (var i = 0; i < priceEls.length; i++) {\n        this._convertEl(priceEls[i], oldCurrency, newCurrency);\n      }\n    }\n  }]);\n  return CurrencyConverter;\n}();\n\nvar CurrencyConverter$1 = new CurrencyConverter();\n\nmodule.exports = CurrencyConverter$1;\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n","import $ from 'jquery';\n\nconst eventHandlers = [];\nlet previousBreakpoint = null;\n\n$(window).on('resize', (event) => {\n  const currentBreakpoint = getBreakpoint();\n\n  if (previousBreakpoint !== currentBreakpoint) {\n    eventHandlers.forEach((eventHandler) => {\n      eventHandler(event, {\n        previous: previousBreakpoint,\n        current: currentBreakpoint,\n      });\n    });\n  }\n\n  previousBreakpoint = currentBreakpoint;\n});\n\nfunction getBreakpoint() {\n  return window\n    .getComputedStyle(document.documentElement, ':after')\n    .getPropertyValue('content')\n    .replace(/\"/g, '');\n}\n\nfunction isBreakpoint(breakpoint) {\n  return getBreakpoint() === breakpoint;\n}\n\nfunction onBreakpointChange(eventHandler) {\n  if (eventHandlers.indexOf(eventHandler) === -1) {\n    eventHandlers.push(eventHandler);\n  }\n}\n\nfunction offBreakpointChange(eventHandler) {\n  const index = eventHandlers.indexOf(eventHandler);\n\n  if (index !== -1) {\n    eventHandlers.splice(index, 1);\n  }\n}\n\nexport default {\n  isBreakpoint,\n  onBreakpointChange,\n  offBreakpointChange,\n};\n","import $ from 'jquery';\n\nconst ignoredEls = [\n  'data-mobile-nav',\n  'data-site-navigation',\n];\n\nfunction isIgnored(element) {\n  // Disallow if element is a <script>\n  if (element.tagName === 'SCRIPT') {\n    return true;\n  }\n\n  // Allow if element has no attributes\n  if (element.attributes.length === 0) {\n    return false;\n  }\n\n  // Check if any attributes match to the ignore list\n  return [].slice.call(element.attributes).some((attr) => {\n    return ignoredEls.indexOf(attr.name) !== -1;\n  });\n}\n\n/**\n * Get the offset of the header\n *\n * @param {HTMLElement} header\n * @param {Boolean} withAnnouncementBar\n * @returns {number}\n */\nexport default function getHeaderOffset(header, withAnnouncementBar = false) {\n  const headerEls = header.childNodes;\n  const isSticky = header.querySelector('[data-site-header-sticky]');\n  const { pageYOffset } = window;\n  let offset = 0;\n\n  if (isSticky) {\n    for (let i = 0; i < headerEls.length; i++) {\n      if (headerEls[i] instanceof HTMLElement && !isIgnored(headerEls[i])) {\n        offset += headerEls[i].getBoundingClientRect().height;\n      }\n    }\n\n    if ($(header).hasClass('site-header-sticky--open') || pageYOffset === 0) {\n      offset += header.querySelector('[data-site-navigation]').getBoundingClientRect().height;\n    }\n  } else {\n    // If is not sticky header, then DOM can be trusted to return values\n    const { bottom } = header.getBoundingClientRect();\n\n    offset = bottom > 0 ? bottom : 0;\n  }\n\n  if (withAnnouncementBar) {\n    offset += parseInt(header.style.top, 10) || 0;\n  }\n\n  return offset;\n}\n","import $ from 'jquery';\nimport layout from '../Layout';\nimport getHeaderOffset from '../helpers/getHeaderOffset';\n\nexport default class StickyHeader {\n  constructor(options, settings) {\n    this.postMessage = options.postMessage;\n    this.$body = $(document.body);\n    this.$window = $(window);\n    this.$siteMain = $('.site-main');\n\n    this.$el = options.$el;\n    this.$toggle = options.$toggle;\n    this.settings = settings;\n\n    this.stickyClass = 'site-header-sticky';\n    this.scrolledClass = 'site-header-sticky--scrolled';\n    this.navOpenClass = 'site-header-sticky--open';\n\n    this.$announcementBar = this.$el.find('.announcement-bar');\n    this.header = this.$el[0];\n\n    if (!this.settings.sticky_header) {\n      return this._stickyReset();\n    }\n\n    // Revert navigation to original state on breakpoint change\n    this.navVisibility = this.navVisibility.bind(this);\n    layout.onBreakpointChange(this.navVisibility);\n\n    this._stickyOffset = this._stickyOffset.bind(this);\n    layout.onBreakpointChange(this._stickyOffset);\n\n    this._toggleStickyHeader = this._toggleStickyHeader.bind(this);\n    this._headerChecker = this._headerChecker.bind(this);\n\n    this.slideToggle = this._slideToggle.bind(this);\n\n    this._init();\n  }\n\n  closeNavigation() {\n    if (!this.settings.sticky_header) return;\n\n    this.$el.removeClass(this.navOpenClass).one('trend', () => {\n      this.$body.trigger('position-banners');\n    });\n    this.postMessage('nav:close-all');\n  }\n\n  openNavigation() {\n    this.$el.addClass(this.navOpenClass).one('trend', () => {\n      this.$body.trigger('position-banners');\n    });\n  }\n\n  navVisibility(event, breakpoints) {\n    if (breakpoints.previous === 'L') this.closeNavigation();\n  }\n\n  unload() {\n    if (!this.settings.sticky_header) return;\n\n    this.$body.removeClass(this.stickyClass).removeClass(this.scrolledClass);\n\n    this.$toggle.off('.sticky-header');\n    this.$window.off('.sticky-header');\n\n    layout.offBreakpointChange(this.navVisibility);\n    layout.offBreakpointChange(this._stickyOffset);\n\n    if (this.requestAnimationFrameId) {\n      window.cancelAnimationFrame(this.requestAnimationFrameId);\n    }\n  }\n\n  _init() {\n    this._stickyOffset(true);\n    this._bindEvents();\n\n    if (window.requestAnimationFrame) {\n      this._headerChecker();\n    }\n  }\n\n  _bindEvents() {\n    this.$toggle.on('click.sticky-header', (event) => {\n      event.preventDefault();\n\n      if (layout.isBreakpoint('L')) this._slideToggle();\n    });\n\n    this.$window.on('scroll.sticky-header', this._toggleStickyHeader);\n  }\n\n  _stickyReset() {\n    this.$siteMain.css('paddingTop', '');\n  }\n\n  /**\n   * Determine the offset when breakpoints change\n   *  - Offset is used to determine scroll threshold\n   *  - Offset is used to set a body offset on browsers that don't support Sticky\n   *\n   * @param isInit\n   * @private\n   */\n  _stickyOffset(isInit) {\n    if (!this.$body.hasClass(this.stickyClass)) {\n      this.$body.addClass(this.stickyClass);\n    }\n\n    const offset = getHeaderOffset(this.header);\n\n    this.$siteMain.css('paddingTop', offset);\n\n    if (isInit) {\n      this._toggleStickyHeader();\n    }\n  }\n\n  /**\n   * Open or close the navigation\n   *\n   * @param open\n   * @private\n   */\n  _slideToggle(open = false) {\n    if (this.$el.hasClass(this.navOpenClass) && !open) {\n      this.closeNavigation();\n      this.$toggle.removeClass('active');\n    } else {\n      this.openNavigation();\n      this.$toggle.addClass('active');\n    }\n  }\n\n  /**\n   *\n   *\n   * @param hide\n   * @private\n   */\n  _toggleAnnouncementBar(hide = false) {\n    if (!this.$announcementBar.length) {\n      return;\n    }\n\n    let top = 0;\n\n    if (hide) {\n      const mobileOnly = this.$announcementBar.hasClass('only-mobile');\n\n      if ((layout.isBreakpoint('XS') && mobileOnly) || !mobileOnly) {\n        top = this.$announcementBar.outerHeight() * -1;\n      }\n    }\n\n    this.$el.css('top', top).one('trend', () => {\n      this.$body.trigger('position-banners');\n    });\n  }\n\n  /**\n   * Sticky header only shows as sticky after scroll\n   *\n   * @private\n   */\n  _toggleStickyHeader() {\n    if (this.$body.hasClass('scroll-lock')) {\n      return;\n    }\n\n    const scrollThreshold = getHeaderOffset(this.header) + 20; // Extend threshold 20px past header\n    const shouldShrink = window.pageYOffset > scrollThreshold;\n\n    // Sticky header is scrolled, is and is visible -- nothing more to do!\n    if (shouldShrink && this.$body.hasClass(this.scrolledClass)) {\n      return;\n    }\n\n    if (shouldShrink) {\n      this._shrink();\n      this._toggleAnnouncementBar(true);\n    } else {\n      this._expand();\n      this._toggleAnnouncementBar(false);\n    }\n  }\n\n  _shrink() {\n    this.closeNavigation();\n    this.$toggle.removeClass('active');\n\n    this.$el\n      .revealer('show')\n      .one('revealer-animating.sticky-header', () => {\n        this.$body.addClass(this.scrolledClass).one('trend', () => {\n          this.$body.trigger('position-banners');\n        });\n      });\n  }\n\n  _expand() {\n    this.openNavigation();\n\n    this.$el\n      .revealer('hide')\n      .one('revealer-animating.sticky-header', () => {\n        this.$body.removeClass(this.scrolledClass).one('trend', () => {\n          this.$body.trigger('position-banners');\n        });\n      })\n      .one('revealer-hide.sticky-header', () => {\n        this.$toggle.removeClass('active');\n      });\n  }\n\n  _headerChecker() {\n    // Periodically check to make sure header is offset correctly\n    this.requestAnimationFrameId = window.requestAnimationFrame(this._headerChecker);\n\n    if (!this.$body.hasClass(this.scrolledClass)) {\n      this._stickyOffset();\n    }\n  }\n}\n","import $ from 'jquery';\n\nexport default class Accordion {\n  constructor($el, options = {}) {\n    this.$el = $el;\n\n    this.options = $.extend({}, {\n      activeClass: 'accordion--active',\n      autoCollapse: false,\n      content: '[data-accordion-content]',\n      eligibleClass: 'has-accordion',\n    }, options);\n  }\n\n  toggle($block, open = false) {\n    if (open || !$block.hasClass(this.options.activeClass)) {\n      if (this.options.autoCollapse) this.closeOpen();\n      this._open($block);\n    } else {\n      this._close($block);\n    }\n  }\n\n  closeOpen() {\n    $(this.$el.find(`.${this.options.activeClass}`)).each((i, block) => {\n      const $block = $(block);\n      if ($block.hasClass(this.options.activeClass)) {\n        this._close($block);\n      }\n    });\n  }\n\n  openAll() {\n    $(this.$el.find(`.${this.options.eligibleClass}`)).each((i, block) => {\n      this._open($(block), 0);\n    });\n  }\n\n  _open($block) {\n    $block.addClass(this.options.activeClass);\n  }\n\n  _close($block) {\n    $block.removeClass(this.options.activeClass);\n  }\n}\n","import $ from 'jquery';\n\nimport Accordion from '../Accordion';\n\nexport default class NavMobileSubMenus {\n  constructor($el) {\n    this.$el = $el;\n\n    this.Accordion = new Accordion(this.$el, {\n      activeClass: 'visible',\n      content: '[data-accordion-content]',\n    });\n\n    // Sub menu selectors\n    this.activeMenuClass = 'navmenu-link-parent-active';\n    this.activeMenu = `.${this.activeMenuClass}`;\n    this.navTrigger = '[data-navmenu-trigger]';\n    this.subMenu = '[data-navmenu-submenu]';\n\n    this._bindEvents();\n  }\n\n  unload() {\n    this.$el.off('.mobile-nav');\n\n    delete this.Accordion;\n  }\n\n  closeSubMenus($current) {\n    $current.find(this.activeMenu).each((index, el) => {\n      this._closeSubmenu($(el));\n    });\n  }\n\n  closeAllSubmenus() {\n    this.Accordion.closeOpen();\n  }\n\n  _bindEvents() {\n    // Prevent focus state from applying on mouse click\n    this.$el.on('mousedown.mobile-nav', '.navmenu-link', (event) => {\n      event.preventDefault();\n    });\n\n    this.$el.on('click.mobile-nav', `${this.navTrigger} > .navmenu-link-parent`, (event) => {\n      event.preventDefault();\n      this._toggleSubmenu(event);\n    });\n  }\n\n  _selectSubMenu($target) {\n    return $target.next(this.subMenu);\n  }\n\n  _toggleSubmenu(event) {\n    const $target = $(event.currentTarget);\n\n    if ($target.hasClass(this.activeMenuClass)) {\n      this._closeSubmenu($target);\n    } else {\n      this._openSubmenu($target);\n    }\n  }\n\n  _openSubmenu($target) {\n    const $menu = this._selectSubMenu($target);\n\n    $target\n      .addClass(this.activeMenuClass)\n      .attr('aria-expanded', true);\n    this.Accordion.toggle($menu);\n  }\n\n  _closeSubmenu($target) {\n    const $menu = this._selectSubMenu($target);\n\n    $target\n      .removeClass(this.activeMenuClass)\n      .attr('aria-expanded', false);\n    this.Accordion.toggle($menu);\n    this.closeSubMenus($menu);\n  }\n}\n","import $ from 'jquery';\n\nimport layout from '../Layout';\nimport NavMobileSubMenus from './NavMobileSubMenus';\n\nexport default class NavMobile {\n  constructor(elements) {\n    this.$body = $(document.body);\n    this.$window = $(window);\n    this.$el = elements.$el;\n    this.$toggleOpen = elements.$toggleOpen;\n    this.isOpen = false;\n    this.subMenus = null;\n\n    this.$mobileNav = this.$el.find('[data-mobile-nav]');\n    this.$panel = this.$el.find('[data-mobile-nav-panel]');\n    this.$overlay = this.$el.find('[data-mobile-nav-overlay]');\n    this.$toggleClose = this.$el.find('[data-mobile-nav-close]');\n\n    // Revert navigation to original state on breakpoint change\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    this._bindEvents();\n  }\n\n  unload() {\n    this._close();\n    this.$window.off('resize.mobile-nav');\n    layout.offBreakpointChange(this.layoutHandler);\n  }\n\n  onBreakpointChange() {\n    if (layout.isBreakpoint('L') && this.isOpen) {\n      this._close();\n    }\n  }\n\n  _bindEvents() {\n    this.$toggleOpen.on('click.mobile-nav', (event) => {\n      event.preventDefault();\n\n      if (!layout.isBreakpoint('L')) this._open();\n    });\n\n    this.$window.on('resize.mobile-nav', () => {\n      this.$el.find('[data-menu-toggle]').removeClass('active');\n\n      if (this.isOpen) {\n        this._setPanelHeight();\n      }\n    });\n  }\n\n  _setPanelHeight() {\n    this.$panel.height(window.innerHeight);\n  }\n\n  _open() {\n    this.$body.addClass('scroll-lock');\n    this.isOpen = true;\n\n    // Activate Submenu handler\n    this.subMenus = new NavMobileSubMenus(this.$panel);\n    this._setPanelHeight();\n\n    // Animate in elements\n    this.$mobileNav\n      .addClass('animating animating-in')\n      .one('trend', () => {\n        this.$mobileNav\n          .removeClass('animating animating-in')\n          .addClass('visible')\n          .off('trend');\n      });\n\n    // Event handlers\n    this.events = [\n      // Close menu when clicking on the overlay\n      this.$overlay.on('click.mobile-nav', event => this._close(event)),\n      this.$toggleClose.on('click.mobile-nav', event => this._close(event)),\n\n      // Disable scrolling on overlay and contactbar\n      this.$overlay.on('touchmove.mobile-nav', event => event.preventDefault()),\n    ];\n  }\n\n  _close(event = false) {\n    if (event) event.preventDefault();\n\n    this.$mobileNav\n      .addClass('animating animating-out')\n      .one('trend', () => {\n        this.$mobileNav\n          .removeClass('animating animating-out')\n          .removeClass('visible')\n          .off('trend');\n      });\n\n    this.$body.removeClass('scroll-lock');\n    this.isOpen = false;\n\n    // Close any open drop down menus\n    if (this.subMenus) {\n      this.subMenus.closeSubMenus(this.$el);\n      this.subMenus.closeAllSubmenus();\n\n      // Unbind Mobile sub menus\n      this.subMenus.unload();\n    }\n\n    // Unbind events\n    if (this.events) {\n      this.events.forEach($el => $el.off('.mobile-nav'));\n      this.events = [];\n    }\n  }\n}\n","import $ from 'jquery';\n\nexport default function scrollLeft($el) {\n  const $container = $el.parent();\n\n  $container.animate({\n    scrollLeft: $el.offset().left - ($el.width() / 2) - ($container.width() / 2)\n  });\n}\n","import $ from 'jquery';\nimport scrollLeft from '../helpers/scrollLeft';\n\nexport default class MegaNavScroller {\n  constructor($el, block = null) {\n    this.$el = $el;\n    this.$menuList = this.$el.find('.navmenu-meganav-items');\n\n    this._bindEvents();\n    this._addScrollClasses();\n\n    if (block) {\n      scrollLeft($(block.el));\n    }\n  }\n  \n  unload() {\n    this.$menuList.off('.meganav');\n  }\n\n  _bindEvents() {\n    this.$menuList.on('scroll.meganav', () => this._addScrollClasses());\n  }\n\n  _addScrollClasses() {\n    const scrollLeft = this.$menuList.scrollLeft();\n    const scrollWidth = this.$menuList[0].scrollWidth;\n    const width = this.$menuList.width();\n\n    this.$el.toggleClass('meganav--overflows-left', scrollLeft > 0);\n    this.$el.toggleClass('meganav--overflows-right', scrollLeft < scrollWidth - width);\n  }\n}\n","import $ from 'jquery';\n\nimport MegaNavScroller from './MegaNavScroller';\nimport scrollLeft from '../helpers/scrollLeft';\n\nexport default class NavDesktop {\n  constructor(options) {\n    this.$el = $(options.$el);\n    this.postMessage = options.postMessage;\n\n    this.activeMenu = 'navmenu-active';\n    this.activeItem = 'navmenu-item-active';\n    this.navTrigger = '[data-navmenu-trigger]';\n    this.subMenu = '[data-navmenu-submenu]';\n\n    this.inlineChildren = 'navmenu-submenu-inline-children';\n\n    this.events = [\n      // Navmenu mouse events\n      this.$el.on('mousedown.navmenu', '.navmenu-link', event => {\n        event.preventDefault();\n\n        // Add a class to actively clicked item to prevent focus styling\n        const $target = $(event.currentTarget);\n\n        this.$el.find(`.${this.activeItem}`).removeClass(this.activeItem);\n\n        $target.addClass(this.activeItem).attr('aria-expanded', true);\n      }),\n\n      this.$el.on('mouseup.navemenu, click.navmenu', `${this.navTrigger} > .navmenu-link-parent`, event => {\n        // Mouseup and click fire after mousedown\n        return event.preventDefault();\n      }),\n\n      this.$el.on('mousedown.navmenu', `${this.navTrigger} > .navmenu-link-parent`, event => {\n        event.preventDefault();\n\n        const $target = $(event.currentTarget);\n\n        if ($target.is(':focus')) {\n          $target.data('clicked', true);\n        }\n\n        this.toggleItem(event.currentTarget.parentNode);\n      }),\n\n      // Toggle item on touch, and click\n      this.$el.on('touchend.navmenu', `${this.navTrigger} > .navmenu-link-parent`, event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toggleItem(event.currentTarget.parentNode);\n      }),\n\n      // Keyboard navigation -- toggle submenus\n      this.$el.on('focus.navmenu', `${this.navTrigger} > .navmenu-link-parent`, event => {\n        event.stopPropagation();\n\n        const $target = $(event.currentTarget);\n        const clicked = $target.data('clicked');\n\n        // Prevent focus by click to fire a subsequent toggle\n        if (clicked) {\n          $target.removeData('clicked');\n        } else {\n          this.toggleItem(event.currentTarget.parentNode);\n        }\n      }),\n\n      // Keyboard navigation -- close submenus when moving to a new nav item\n      this.$el.on('focus.navmenu', '.navmenu-depth-1 > .navmenu-item .navmenu-link', event => {\n        this.closeAll(event.currentTarget);\n      }),\n\n      // Close items when clicking outside\n      $(document).on('touchstart.navmenu, click.navmenu', event => {\n        this._handleDocumentClick(event.target);\n      }),\n    ];\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.navmenu'));\n\n    if (this.megaNav) {\n      delete this.megaNav;\n    }\n  }\n\n  /**\n   * Open the MegaNav\n   * @param $menu\n   * @param block\n   */\n  openMegaNav($menu, block) {\n    this.megaNav = new MegaNavScroller($menu, block);\n  }\n\n  /**\n   * Open a dropdown menu, or scroll to a meganav item\n   *\n   * @param el - Parent LI containing sub menu\n   * @param block - Meganav menu block\n   */\n  openItem(el, block = null) {\n    const $el = $(el);\n\n    // Check if menu is already open\n    const $menu = $el.children(this.subMenu);\n    if ($menu.is(':visible')) {\n      // If its not a meganav, do nothing\n      if ($menu.attr('data-meganav-menu') === undefined) return;\n\n      // If its a meganav, scroll horizontally to the item\n      scrollLeft($(block.el));\n      return;\n    }\n\n    // Close previously opened items\n    this.closeAll(el);\n\n    $el.data('transitioning', true);\n    const $parent = $menu.parent(this.navTrigger);\n\n    // Add an active class to the menu's parent\n    $parent\n      .find('.navmenu-link-parent:first')\n      .addClass(this.activeMenu);\n\n    // Show menu\n    $menu\n      .addClass('animating animating-in')\n      .one('trend', () => {\n        $menu\n          .removeClass('animating animating-in')\n          .addClass('visible')\n          .off('trend');\n\n        this._inlineMenu($menu);\n\n        $el.data('transitioning', false);\n        $parent.find('> .navmenu-link').attr('aria-expanded', true);\n\n        // Load MegaNavScroller if is a mega nav\n        if ($menu.attr('data-meganav-menu') !== undefined) {\n          this.openMegaNav($menu, block);\n        }\n      });\n  }\n\n  closeAll(target) {\n    this.$el.find(`${this.subMenu}.visible, ${this.subMenu}.animating-in`).parent(this.navTrigger).each((i, el) => {\n      if (target && $.contains(el, target)) return;\n\n      // Close any submenus in this tree\n      $(el)\n        .find(this.navTrigger)\n        .each((i, submenu) => this.closeItem(submenu));\n\n      // Close root-level menu item\n      this.closeItem(el);\n    });\n  }\n\n  closeItem(el) {\n    const $el = $(el);\n    const $menu = $el.children(`${this.subMenu}.visible, ${this.subMenu}.animating-in`);\n    const $parent = $menu.parent(this.navTrigger);\n    if (!$menu.length) return;\n\n    // Menu is in the progress of being animated, try in 300ms\n    if($el.data('transitioning')) {\n      setTimeout(() => {\n        return this.closeItem(el);\n      }, 300);\n    }\n\n    // Add an active class to the menu's parent\n    $parent\n      .find('.navmenu-link-parent:first')\n      .removeClass(this.activeMenu);\n\n    // Ensure $menu is scrolled to top\n    if ($menu.hasClass(this.inlineChildren)) {\n      $menu.scrollTop(0);\n    }\n\n    // Hide menu\n    $menu\n      .addClass('animating animating-out')\n      .removeClass('animating-in')\n      .one('trend', () => {\n        $menu\n          .removeClass('animating animating-out visible')\n          .off('trend');\n\n        $parent.find('> .navmenu-link').attr('aria-expanded', false);\n\n        // Unload MegaNavScroller if is a mega-nav\n        if ($menu.data('meganav-menu') !== undefined && this.megaNav) {\n          this.megaNav.unload();\n          this.megaNav = null;\n        }\n      });\n  }\n\n  toggleItem(el) {\n    const $el = $(el);\n    const $menu = $el.children(this.subMenu);\n\n    if ($menu.is(':visible')) {\n      this.closeItem(el);\n    } else {\n      this.openItem(el);\n    }\n  }\n\n  _handleDocumentClick(target) {\n    const $parent = $(target).parents(this.navTrigger);\n    if ($parent.length) return;\n\n    this.closeAll();\n  }\n\n  _menuLimits($menu) {\n    const windowHeight = window.innerHeight;\n    const windowWidth = window.innerWidth;\n    const menuRect = $menu[0].getBoundingClientRect();\n    const hasChildren = $menu.find(this.subMenu).length > 0;\n    const stickyHeaderOffset = $('.site-header-sticky--scrolled').length ? 20 : 0; // Padding difference\n    const edges = {\n      bottomEdge: menuRect.bottom + stickyHeaderOffset,\n      rightEdge: menuRect.right + menuRect.width,\n    };\n\n    // Store bottom offset for subsequent openings\n    if (!$menu.data('bottom-edge') || $menu.data('bottom-edge') !== edges.bottomEdge) {\n      $menu.data('bottom-edge', edges.bottomEdge);\n    }\n\n    // Store child menu right edge\n    if (!$menu.data('right-edge') || $menu.data('right-edge') !== edges.rightEdge) {\n      $menu.data('right-edge', edges.rightEdge);\n    }\n\n    const bottomEdge = parseInt($menu.data('bottom-edge'), 10);\n    const rightEdge = parseInt($menu.data('right-edge'), 10);\n\n    return {\n      childrenExceedHorizontal: rightEdge >= windowWidth && hasChildren,\n      exceedsVertical: bottomEdge >= windowHeight,\n      maxHeight: windowHeight - menuRect.top,\n    };\n  }\n\n  /**\n   * Set a menu to be\n   */\n  _inlineMenu($menu) {\n    const { childrenExceedHorizontal, exceedsVertical, maxHeight } = this._menuLimits($menu);\n\n    // Unset inline style if height allows, and children menu don't exceed window bounds\n    if (!exceedsVertical && !childrenExceedHorizontal) {\n      return this._unsetInlineMenu($menu);\n    }\n\n    return $menu.css({ maxHeight }).addClass(this.inlineChildren);\n  }\n\n  _unsetInlineMenu($menu) {\n    $menu\n      .removeAttr('data-bottom-edge')\n      .removeAttr('data-right-edge')\n      .removeClass(this.inlineChildren)\n      .css('max-height', '');\n  }\n}\n","module.exports = debounce\n\nfunction debounce (fn, delay, at_start, guarantee) {\n  var timeout\n  var args\n  var self\n\n  return function debounced () {\n    self = this\n    args = Array.prototype.slice.call(arguments)\n\n    if (timeout && (at_start || guarantee)) {\n      return\n    } else if (!at_start) {\n      clear()\n\n      timeout = setTimeout(run, delay)\n      return timeout\n    }\n\n    timeout = setTimeout(clear, delay)\n    fn.apply(self, args)\n\n    function run () {\n      clear()\n      fn.apply(self, args)\n    }\n\n    function clear () {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }\n}\n","/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._events.maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this.newListener = conf.newListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._events.maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. %d listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: %s.';\r\n      console.error(errorMsg, count, eventName);\r\n    } else {\r\n      console.error(errorMsg, count);\r\n    }\r\n\r\n    if (console.trace){\r\n      console.trace();\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this.newListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._events.maxListeners > 0 &&\r\n            tree._listeners.length > this._events.maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._events || init.call(this);\r\n      this._events.maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    this.many(event, 1, fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this.on(event, listener);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    if (typeof type === 'function') {\r\n      this.onAny(type);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just append.\r\n      this._events[type].push(listener);\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._events.maxListeners > 0 &&\r\n        this._events[type].length > this._events.maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    this._all.push(fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++)\r\n        this.emit(\"removeListenerAny\", fns[i]);\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (arguments.length === 0) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n","import EventEmitter from 'eventemitter2';\n\n/**\n * Search API Class\n */\nexport default class Search extends EventEmitter {\n  /**\n   * Create a new Search instance, and override defaults\n   *\n   * @param options\n   * @property {string} options.type - Search restriction. Use 'article', 'page', 'product', or ''\n   * @property {string} options.view - Search template suffix. Specify different templates as needed\n   */\n  constructor(options = {}) {\n    super();\n    \n    this.searchType = options.type || '';\n    this.view = options.view || 'json';\n\n    this.inProgress = false;\n    \n    this.xhr = window.XMLHttpRequest\n      ? new XMLHttpRequest()\n      : new ActiveXObject('Microsoft.XMLHTTP');\n\n    this._xhrLoad = this._xhrLoad.bind(this);\n    this._xhrError = this._xhrError.bind(this);\n    this._xhrAbort = this._xhrAbort.bind(this);\n\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this.xhr.addEventListener('load', this._xhrLoad);\n    this.xhr.addEventListener('error', this._xhrError);\n    this.xhr.addEventListener('abort', this._xhrAbort);\n  }\n\n  /**\n   * XHR was successfull\n   *\n   * @description XHR completed successfully\n   * @param {object} event\n   * @fires Search#complete\n   * @private\n   */\n  _xhrLoad(event) {\n    let response = {};\n    const readyState = event.target.readyState;\n    const status = event.target.status;\n\n    try {\n      if (readyState > 3 && status == 200) {\n        response = JSON.parse(event.target.responseText);\n        this.emit('complete', response);\n      } else {\n        const message = `Invalid readyState: ${readyState}, or status: ${status}.`;\n        return this._xhrError(event, message);\n      }\n    } catch (error) {\n      return this._xhrError(event, 'Invalid JSON', error);\n    }\n\n    this.inProgress = false;\n  }\n\n  /**\n   * XHR contains an error\n   *\n   * @description XHR has contained an error, and was unable to complete\n   * @param {object} event\n   * @param {object|string} message\n   * @param {object} error\n   * @fires Search#error\n   * @private\n   */\n  _xhrError(event, message = null, error = null) {\n    this.inProgress = false;\n    this.emit('error', {event, message, error});\n  }\n\n  /**\n   * XHR has been aborted\n   *\n   * @description This event only fires if there is an active XHR request that has been terminated\n   * @fires Search#aborted\n   * @private\n   */\n  _xhrAbort() {\n    this.emit('aborted');\n  }\n\n  /**\n   * Perform the search\n   *\n   * @param {string} term - Search term(s)\n   * @fires Search#initialized\n   * @fires Search#cancelled\n   */\n  execute(term) {\n    this.emit('initialized', {term});\n\n    if (this.inProgress) {\n      this.emit('cancelled');\n      this.xhr.abort();\n    }\n\n    this.inProgress = true;\n\n    const url = '/search';\n    const params = {\n      q: term,\n      type: this.searchType,\n      view: this.view,\n    };\n\n    const searchParams = Object.keys(params).map((key) => {\n      const value = params[key];\n      return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    }).join('&');\n\n    this.xhr.open('get', `${url}?${searchParams}`);\n    this.xhr.setRequestHeader('Accept', 'application/json');\n    this.xhr.send();\n  }\n}\n\n/**\n * @description XHR initialized\n * @event Search#initialized\n * @type {object}\n */\n\n/**\n * @description XHR completed\n * @event Search#complete\n * @property {object} response - JSON response from end point\n */\n\n/**\n * @description XHR had an error\n * @event Search#error\n */\n\n/**\n * @description XHR cancelled due to user interaction. If an XHR is being processed, this does not terminate it\n * @event Search#cancelled\n */\n\n/**\n * @description XHR aborted due to user interaction, terminating previously executed XHR.\n * @event Search#aborted\n */\n","import $ from 'jquery';\n\nexport default class SearchForm {\n  constructor($container) {\n    this.$body = $('body');\n    this.$container = $container;\n    this.$form = this.$container.find('[data-live-search-form]');\n\n    this.submitHandler = this.submitHandler.bind(this);\n\n    this.events = [\n      this.$form.on('submit.search-form', this.submitHandler),\n    ];\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.search-form'));\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    const $form = $(event.currentTarget).clone();\n    const $terms = $form.find('[name=q]');\n\n    $form.css({\n      position: 'absolute',\n      left: -1000,\n      bottom: -1000,\n      visibility: 'hidden',\n    });\n\n    let terms = $terms.val();\n\n    // Adds `*` after each word in search terms, doesn't add to last word\n    if (terms.indexOf(' ') > 0) {\n      terms = terms.split(' ').join('* ').trim();\n    }\n\n    // Adds `*` at the end of the search terms\n    terms = `${terms}*`;\n\n    // Update value\n    $terms.val(terms);\n\n    // Forms must be in the browser context in order to submit\n    this.$body.append($form);\n    $form.submit();\n  }\n}\n","/**\n * Shows a list item component when result is an article, or a page\n *\n * @param contentItem\n * @returns {string}\n * @constructor\n */\nfunction ContentItem(contentItem) {\n  return `\n  <li class=\"search-flydown--content-item\">\n    <a href=\"${contentItem.url}\">${contentItem.title}</a>\n  </li>\n  `;\n}\n\n/**\n * Shows a header for the article and page results\n *\n * @param context\n * @returns {string}\n * @constructor\n */\nfunction ContentResultsHeader(context) {\n  return `\n    <h5 class=\"search-flydown--content-title\">\n      ${context.content_results.title}\n    </h5>  \n  `;\n}\n\n/**\n * Shows a list of results from articles, or pages\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\nfunction ContentResults(props) {\n  const { content, context } = props;\n  const $title = ContentResultsHeader(context);\n  const contentItems = content.map(contentItem => ContentItem(contentItem));\n\n  return $(`\n    <div class=\"search-flydown--content-items\">\n      ${$title}\n      \n      <ul class=\"search-flydown--content-items-list\">\n        ${contentItems.join('')}\n      </ul>\n    </div>\n  `);\n}\n\n/**\n * Shows a message when there are no article or page results\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\nfunction ContentNoResults(props) {\n  const { context } = props;\n  const $title = ContentResultsHeader(context);\n\n  return $(`\n    <div class=\"search-flydown--content-items\">\n      ${$title}\n      \n      <p class=\"search-flydown--content-items-none\">\n        ${context.content_results.no_results}\n      </p>\n    </div>\n  `);\n}\n\n/**\n * Shows the product's compare_at_price, with connection for CurrencyConverter\n *\n * @param price\n * @returns {string}\n * @constructor\n */\nfunction ProductPriceCompareAt(price) {\n  return `\n  <span class=\"search-flydown--product-price--compare-at\">\n    <span class=\"money\">${price.compare_at_price}</span>\n  </span>\n  `;\n}\n\n/**\n * Shows the product's price, with connection for CurrencyConverter\n *\n * @param price\n * @returns {string}\n * @constructor\n */\nfunction ProductPriceMain(price) {\n  return `\n  <span class=\"search-flydown--product-price--main\">\n    <span class=\"money\">${price.price}</span>\n  </span>\n  `;\n}\n\n/**\n * Shows the product's prices\n *\n * @param props\n * @returns {string}\n * @constructor\n */\nfunction ProductPrice(props) {\n  const { price, onSale, consistentSaved } = props;\n  const $compareAt = onSale && consistentSaved ? ProductPriceCompareAt(price) : '';\n  const $price = ProductPriceMain(price);\n\n  return `\n    <span class=\"search-flydown--product-price ${onSale ? 'search-flydown--product-price-has-sale' : ''}\">\n      ${$price}\n      ${$compareAt}\n    </span>\n  `;\n}\n\n/**\n * Shows a product's main content\n *\n * @param product\n * @returns {string}\n * @constructor\n */\nfunction ProductContent(product) {\n  const $price = ProductPrice({\n    price: product.price,\n    onSale: product.on_sale,\n    consistentSaved: product.consistent_saved,\n  });\n\n  return `\n    <div class=\"search-flydown--product-text\">\n      <span class=\"search-flydown--product-title\">\n        ${product.title}\n      </span>\n      ${$price}\n    </div>\n  `;\n}\n\n/**\n * Shows a product's image\n *\n * @param image\n * @returns {string}\n * @constructor\n */\nfunction ProductImage(image) {\n  return `\n    <div class=\"search-flydown--product-image\">\n      ${image}\n    </div>\n  `;\n}\n\n/**\n * Shows a product list item component when result is a product\n *\n * @param product\n * @param enableImages\n * @returns {string}\n * @constructor\n */\nfunction ProductItem(product, enableImages) {\n  const $image = enableImages ? ProductImage(product.image) : '';\n  const $content = ProductContent(product);\n\n  return `\n    <a class=\"search-flydown--product search-flydown--product\" href=\"${product.url}\">\n      ${$image}\n      ${$content}\n    </a>\n  `;\n}\n\n/**\n * Shows a list of product results\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\nfunction ProductResults(props) {\n  const { products, enableImages } = props;\n  const productItems = products.map(product => ProductItem(product, enableImages));\n\n  return $(`\n    <div class=\"search-flydown--product-items\">\n      ${productItems.join('')}\n    </div>\n  `);\n}\n\n/**\n * Show a message when no product results are found\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\nfunction ProductNoResults(props) {\n  const { context, terms } = props;\n\n  return $(`\n    <div class=\"search-flydown--product-items--none\" data-live-search-no-products>\n      <h5>\n        ${context.no_results_products.title.replace('*terms*', terms)}\n      </h5>\n      <p>\n        ${context.no_results_products.message}\n      </p>\n      <p>\n        <a class=\"search-flydown--continue\" href=\"/collections/all\">\n          ${context.view_all_products}\n        </a>\n      </p>\n    </div>\n  `);\n}\n\n/**\n * Show's the Results footer, directing customers to all products\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\nfunction ResultsFooter(props) {\n  const { context, terms, type } = props;\n\n  return $(`\n    <div class=\"search-flydown--footer\">\n      <a class=\"search-flydown--continue\" href=\"/search?q=${terms}&type=${type}\">\n        ${context.view_all_results}\n      </a>\n    </div>\n  `);\n}\n\nexport {\n  ContentResults,\n  ContentNoResults,\n  ProductResults,\n  ProductNoResults,\n  ResultsFooter,\n};\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport Search from '../../Search';\nimport layout from '../../Layout';\nimport SearchForm from './SearchForm';\n\nimport {\n  ContentResults,\n  ContentNoResults,\n  ProductResults,\n  ProductNoResults,\n  ResultsFooter,\n} from './LiveSearchTemplates';\n\nexport default class LiveSearch {\n  constructor($els, settings) {\n    this.$el = $els.$el;\n    this.$body = $('body');\n    this.$header = $els.$header;\n    this.$document = $(document);\n\n    this.settings = settings;\n    this.enableContent = this.settings.enable_content;\n    this.enableImages = this.settings.enable_images;\n    this.flyDownActive = false;\n    this.takeOverActive = false;\n    this.showFlyDown = false;\n    this.searchType = this.enableContent ? 'article,page,product' : 'product';\n\n    this.$form = this.$el.find('[data-live-search-form]');\n    this.$input = this.$form.find('[data-live-search-input]');\n    this.$button = this.$form.find('[data-live-search-submit]');\n    this.$takeOverButton = this.$form.find('[data-live-search-takeover-cancel]');\n\n    this.$flyDown = this.$el.find('[data-live-search-flydown]');\n    this.$searchResults = this.$flyDown.find('[data-live-search-results]');\n    this.$searchPlaceholder = this.$flyDown.find('[data-live-search-placeholder]');\n    this.$quickLinks = this.$flyDown.find('[data-live-search-quick-links]');\n\n    this.staticSearch = new SearchForm(this.$el);\n\n    this.search = new Search({\n      view: 'header',\n      type: this.searchType,\n    });\n\n    this._search = this._search.bind(this);\n    this._toggleTakeOver = this._toggleTakeOver.bind(this);\n    this._searchFocused = this._searchFocused.bind(this);\n    this._documentFocus = this._documentFocus.bind(this);\n\n    this._searchCancelled = this._searchCancelled.bind(this);\n    this._searchComplete = this._searchComplete.bind(this);\n    this._searchError = this._searchError.bind(this);\n\n    this.closeEvents = [];\n\n    this.search.on('cancelled', this._searchCancelled);\n    this.search.on('complete', this._searchComplete);\n    this.search.on('error', this._searchError);\n\n    this.events = [\n      this.$button.on('click.live-search', (event) => {\n        event.preventDefault();\n        this._search(event);\n      }),\n      this.$input.on('keyup.live-search', debounce(this._search, 250)),\n      this.$input.on('focus.live-search', this._searchFocused),\n      this.$takeOverButton.on('click.live-search', this._toggleTakeOver),\n    ];\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.live-search'));\n\n    this.search.off('cancelled', this._searchCancelled);\n    this.search.off('complete', this._searchComplete);\n    this.search.off('error', this._searchError);\n\n    this.staticSearch.unload();\n  }\n\n  /**\n   * If is searching, only show placeholder\n   *\n   * @private\n   */\n  _flyDownSearching() {\n    this.$searchResults.removeClass('visible');\n    this.$quickLinks.removeClass('visible');\n\n    this.$searchPlaceholder.addClass('visible');\n  }\n\n  /**\n   * Search field has been focused, or has been cleared of contents\n   *   - If previous search contents, show\n   *   - If no previous search contents, show quicklinks if exists\n   *\n   * @param hasTerms\n   * @private\n   */\n  _flyDownInitial(hasTerms) {\n    this.showFlyDown = false;\n\n    const hasNoResults = this.$searchResults.find('[data-live-search-no-products]').length === 0;\n    const hasPreviousResults = this.$searchResults.children().length > 0;\n\n    if (hasTerms && hasNoResults && hasPreviousResults) {\n      this.$searchResults.addClass('visible');\n      this.$quickLinks.removeClass('visible');\n      this.showFlyDown = true;\n    } else if (this.$quickLinks.length) {\n      this.$searchResults.removeClass('visible');\n      this.$quickLinks.addClass('visible');\n      this.showFlyDown = true;\n    }\n  }\n\n  _search(event) {\n    // Ignore non character key strokes\n    const invalidKeyStrokes = [\n      'Alt',\n      'ArrowRight',\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowDown',\n      'Capslock',\n      'Control',\n      'Meta',\n      'Shift',\n      'Tab',\n    ];\n\n    if (event.key && invalidKeyStrokes.indexOf(event.key) !== -1) {\n      return;\n    }\n\n    let terms = this.$input.val();\n    const hasTerms = terms.length > 0;\n\n    // If is XS, pop the search out into a Takeover screen\n    if (layout.isBreakpoint('XS')) {\n      this._toggleTakeOver(null, true);\n    }\n\n    if (!hasTerms) {\n      this._flyDownInitial(true);\n\n      if (!this.showFlyDown) {\n        this._closeFlyDown(true);\n      }\n\n      return;\n    }\n\n    this._flyDownSearching();\n\n    // Clear previous results\n    this.$searchResults.html('');\n\n    // If terms has length, this will be true\n    this._toggleButton(hasTerms);\n\n    // Show the flyout if it isn't open\n    if (!this.$flyDown.data('is-open')) {\n      this.showFlyDown = true;\n      this._openFlyDown();\n    }\n\n    // Adds `*` after each word in search terms, doesn't add to last word\n    if (terms.indexOf(' ') > 0) {\n      terms = terms.split(' ').join('* ').trim();\n    }\n\n    // Adds `*` at the end of the search terms\n    terms = `${terms}*`;\n\n    this.search.execute(terms);\n  }\n\n  _searchError(response) {\n    console.warn('Search had error');\n    console.log(response.message, response.error, response.event);\n    this._toggleButton(false);\n  }\n\n  /**\n   * Search has been cancelled due to new search being performed\n   *\n   * @private\n   */\n  _searchCancelled() {\n    // Searches are canceled on user interaction, UI should remain unchanged\n  }\n\n  _searchComplete(response) {\n    const { content, products, terms, sanitizedTerms } = response;\n\n    const settings = {\n      products: {\n        results: {\n          products,\n          enableImages: this.enableImages,\n        },\n        noResults: {\n          context: this.settings.context,\n          terms: sanitizedTerms,\n        },\n      },\n      content: {\n        results: {\n          context: this.settings.context,\n          content,\n        },\n        noResults: {\n          context: this.settings.context,\n        },\n      },\n      footer: {\n        context: this.settings.context,\n        terms,\n        type: this.searchType,\n      },\n    };\n\n    const $productResults = products.length\n      ? ProductResults(settings.products.results)\n      : ProductNoResults(settings.products.noResults);\n\n    const $contentResults = content.length\n    ? ContentResults(settings.content.results)\n    : ContentNoResults(settings.content.noResults);\n\n    $productResults.find('.money').each((i, el) => {\n      el.innerHTML = Shopify.formatMoney(el.innerHTML, this.settings.money_format);\n      CurrencyConverter.update(el);\n    });\n\n    // Hide placeholder\n    // TODO: Lock minimum height?\n    this.$searchPlaceholder.removeClass('visible');\n\n    // Show results\n    this.$searchResults\n      .html($productResults)\n      .addClass('visible');\n\n    if (this.enableContent) {\n      this.$searchResults\n        .append($contentResults);\n    }\n\n    this.$searchResults\n      .append(ResultsFooter(settings.footer));\n\n    this._toggleButton(false);\n  }\n\n  /**\n   * Toggles search button while processing\n   *\n   * @param disable\n   * @private\n   */\n  _toggleButton(disable) {\n    if (disable) {\n      this.$button\n        .addClass('search-icon--processing')\n        .attr('disabled');\n    } else {\n      this.$button\n        .removeClass('search-icon--processing')\n        .removeAttr('disabled');\n    }\n  }\n\n  _searchFocused() {\n    if (this.flyDownActive) {\n      return;\n    }\n    const hasTerms = this.$input.val().length > 0;\n\n    // Only listen for events outside of the search flydown when its open\n    this.closeEvents.concat([\n      this.$header.on('focus.live-search', 'a, button', this._documentFocus),\n      this.$document.on('touchstart.live-search', this._documentFocus),\n      this.$document.on('click.live-search', this._documentFocus),\n    ]);\n\n    this.$el.addClass('live-search--focused');\n\n    // If is XS, pop the search out into a Takeover screen\n    if (layout.isBreakpoint('XS')) {\n      this._toggleTakeOver(null, true);\n    }\n\n    this._flyDownInitial(hasTerms);\n\n    this._openFlyDown();\n  }\n\n  _openFlyDown() {\n    if (!this.showFlyDown) {\n      return;\n    }\n\n    this.$el.addClass('live-search--active');\n    this.$flyDown.data('is-open', true);\n    this.flyDownActive = true;\n  }\n\n  /**\n   * Close the FlyDown when no longer needed\n   *  - Keep focus styling if input is still being interacted with\n   *\n   * @param retainFocus\n   * @private\n   */\n  _closeFlyDown(retainFocus = false) {\n    if (!this.flyDownActive) {\n      if (!retainFocus) {\n        this.$el.removeClass('live-search--focused');\n      }\n\n      return;\n    }\n\n    if (this.takeOverActive) {\n      this._toggleTakeOver(null, false);\n    }\n\n    this.$flyDown.data('is-open', false);\n    this.$el.removeClass('live-search--active');\n\n    if (!retainFocus) {\n      this.$el.removeClass('live-search--focused');\n    }\n\n    this.flyDownActive = false;\n    this.closeEvents.forEach($el => $el.off('.live-search'));\n    this.closeEvents = [];\n  }\n\n  /**\n   * Open or close the Take over for mobile\n   *\n   *\n   * @param event\n   * @param enable\n   * @private\n   */\n  _toggleTakeOver(event = null, enable = false) {\n    this.takeOverActive = enable;\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!enable) {\n      this._closeFlyDown(false);\n    }\n\n    if (this.$header.hasClass('search--section')) {\n      this.$body.toggleClass('search-takeover-active', enable);\n    }\n\n    this.$el.toggleClass('live-search--takeover', enable);\n    this.$body.toggleClass('scroll-lock', enable);\n  }\n\n  /**\n   * When the focus element has changed, either by clicking, touching, or tabbing\n   * check to see if it is within the flydown\n   *\n   * @param event\n   * @private\n   */\n  _documentFocus(event) {\n    const $parent = $(event.target).parents('[data-live-search]');\n\n    if ($parent.length) {\n      return;\n    }\n\n    this._closeFlyDown();\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport $script from 'scriptjs';\n\nimport Forms from '../Forms';\nimport layout from '../Layout';\nimport StickyHeader from '../components/StickyHeader';\nimport NavMobile from '../components/NavMobile';\nimport NavDesktop from '../components/NavDesktop';\nimport LiveSearch from '../components/search/LiveSearch';\nimport SearchForm from '../components/search/SearchForm';\n\nexport default class StaticSectionHeader {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.settings = section.data.settings;\n    this.currency = section.data.currency;\n    this.postMessage = section.postMessage;\n    this.headerSearch = null;\n\n    this.$scripts = $('[data-scripts]');\n\n    this.$menuToggle = this.$el.find('[data-menu-toggle]');\n    this.$cartCount = this.$el.find('[data-header-cart-count]');\n    this.$searchField = this.$el.find('[data-live-search]');\n\n    this.$siteNavigation = this.$el.find('[data-site-navigation]');\n    this.$desktopNavigation = this.$siteNavigation.find('ul.navmenu-depth-1');\n    this.$headerTools = this.$siteNavigation.find('[data-header-actions]');\n\n    this.converter = '[data-currency-converter]';\n    this.$converter = $(this.converter);\n\n    this.stickyHeader = new StickyHeader({\n      $el: this.$el,\n      $toggle: this.$menuToggle,\n      postMessage: this.postMessage,\n    }, this.settings);\n\n    this.navMobile = new NavMobile({\n      $el: this.$el,\n      $toggleOpen: this.$menuToggle,\n    });\n\n    this.navDesktop = new NavDesktop({\n      $el: this.$siteNavigation,\n      postMessage: this.postMessage,\n    });\n\n    this.forms = new Forms(this.$el);\n\n    if (this.settings.live_search.enable) {\n      $script(this.$scripts.data('shopify-api-url'), () => {\n        this.headerSearch = new LiveSearch({\n          $el: this.$searchField,\n          $header: this.$el,\n        }, this.settings.live_search);\n      });\n    } else {\n      this.headerSearch = new SearchForm(this.$searchField);\n    }\n\n    if (this.currency.enable) {\n      $script(this.$scripts.data('shopify-currencies'), () => {\n        this._converter();\n      });\n    }\n\n    // Handle Accordion interaction when window size changes\n    this._headerToolsSize = this._headerToolsSize.bind(this);\n    layout.onBreakpointChange(this._headerToolsSize);\n\n    this.$el.on('cartcount:update', (event, data) => {\n      this.$cartCount\n        .attr('data-header-cart-count', data.response.item_count)\n        .toggleClass('visible', data.response.item_count > 0);\n    });\n\n    this._headerToolsSize();\n  }\n\n  onSectionDeselect() {\n    this.navDesktop.closeAll(null);\n    this.stickyHeader.closeNavigation();\n  }\n\n  onSectionUnload() {\n    this.stickyHeader.unload();\n    this.navMobile.unload();\n    this.navDesktop.unload();\n    this.forms.unload();\n\n    this.$el.off('cartcount:update');\n\n    this.headerSearch.unload();\n\n    if (this.currency.enable) {\n      this.$converter.off('change.converter');\n    }\n  }\n\n  onSectionMessage(name, data) {\n    if (name === 'nav:close-all' && layout.isBreakpoint('L')) {\n      this.navDesktop.closeAll(null);\n    }\n\n    if (name === 'stickyheader:open' && this.settings.sticky_header) {\n      this.stickyHeader.openNavigation(true);\n    }\n  }\n\n  onSectionBlockSelect(block) {\n    if (!layout.isBreakpoint('L')) {\n      return;\n    }\n\n    setTimeout(() => {\n      if (this.settings.sticky_header) {\n        this.stickyHeader.slideToggle(true);\n      }\n\n      if (!$(block.el).find('.navmenu-link').hasClass('navmenu-active')) {\n        this.navDesktop.toggleItem(block.el);\n      }\n    }, 100);\n  }\n\n  onSectionBlockDeselect() {\n    if (\n      this.$menuToggle.hasClass('active')\n      && layout.isBreakpoint('L')\n      && this.settings.sticky_header\n    ) {\n      this.stickyHeader.slideToggle(false);\n    }\n\n    this.navDesktop.closeAll(null);\n  }\n\n  _converter() {\n    CurrencyConverter.init({\n      switcherSelector: this.converter,\n      priceSelector: '.money',\n      shopCurrency: this.currency.shop_currency,\n      defaultCurrency: this.currency.default_currency,\n      displayFormat: this.currency.display_format,\n      moneyFormat: this.currency.money_format,\n      moneyFormatNoCurrency: this.currency.money_format_no_currency,\n      moneyFormatCurrency: this.currency.money_format_currency,\n    });\n\n    this.$converter.on('change.converter', event => {\n      this.$converter.each((index, converter) => {\n        if (converter.value !== event.currentTarget.value) {\n          converter.value = event.currentTarget.value;\n        }\n      });\n\n      CurrencyConverter.setCurrency(event.currentTarget.value);\n    });\n  }\n\n  _headerToolsSize() {\n    if (!layout.isBreakpoint('L')) {\n      return;\n    }\n\n    const outerWidth = this.$headerTools.width();\n    const innerWidths = [];\n\n    this.$headerTools.find('li').each((index, el) => {\n      innerWidths.push(Math.ceil($(el).outerWidth()));\n    });\n\n    const combinedWidths = innerWidths.reduce((a, b) => a + b, 0);\n\n    if (combinedWidths > outerWidth) {\n      this.$headerTools.css('max-width', `${combinedWidths}px`);\n      this.$desktopNavigation.css('max-width', `calc(100% - ${combinedWidths}px)`);\n    }\n  }\n}\n","import $ from 'jquery';\n\nimport Accordion from '../Accordion';\nimport Forms from '../Forms';\nimport layout from '../Layout';\n\nexport default class StaticSectionFooter {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.Accordion = new Accordion(this.$el);\n\n    this.forms = new Forms(this.$el);\n\n    // Handle Accordion interaction when window size changes\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this.$el.on('click.footer', '[data-accordion-trigger]', event => {\n      event.preventDefault();\n      this._toggleAccordion($(event.currentTarget).parent());\n    });\n  }\n\n  onSectionUnload() {\n    this.$el.off('.footer');\n    this.forms.unload();\n\n    delete this.Accordion;\n  }\n\n  onSectionBlockSelect(block) {\n    const $block = $(block.el);\n\n    if ($block.hasClass('has-accordion')) this._toggleAccordion($block, true);\n  }\n\n  onSectionBlockDeselect(block) {\n    const $block = $(block.el);\n\n    if ($block.hasClass('has-accordion')) this._toggleAccordion($block, false);\n  }\n\n  _toggleAccordion($block) {\n    if (layout.isBreakpoint('L')) return;\n\n    this.Accordion.toggle($block);\n  }\n\n  onBreakpointChange(event, breakpoints) {\n    if (layout.isBreakpoint('L')) {\n      this.Accordion.openAll();\n    } else if (breakpoints.previous === 'L' && !layout.isBreakpoint('L')) {\n      this.Accordion.closeOpen();\n    }\n  }\n}\n","import $ from 'jquery';\nimport RichText from '../components/RichText';\nimport Forms from '../Forms';\n\nexport default class StaticArticle {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$commentForm = this.$el.find('[data-articlecomments-form]')\n\n    this.richText = new RichText(this.$el);\n\n    if (this.$commentForm.length) {\n      this.commentForm = new Forms(this.$commentForm);\n    }\n  }\n\n  onSectionUnload() {\n    this.richText.unload();\n\n    if (this.commentForm) {\n      this.commentForm.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport RichText from '../components/RichText';\n\nexport default class StaticBlog {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    this.richText = new RichText(this.$el);\n  }\n\n  onSectionUnload() {\n    this.richText.unload();\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport getHeaderOffset from '../helpers/getHeaderOffset';\n\nexport default class MessageBanner {\n  constructor() {\n    this.$window = $(window);\n    this.$document = $(document);\n    this.$body = $(document.body);\n    this.$bannerTemplate = $('[data-templates] [data-message-banner]');\n    this.$banners = [];\n\n    this.header = document.querySelector('.site-header-wrapper');\n    this.events = [];\n\n    this.$document.on('touchstart.message-banner, click.message-banner', (event) => {\n      this._handleDocumentClick(event.target);\n    });\n  }\n\n  unload() {\n    this.$document.off('touchstart.message-banner, click.message-banner');\n  }\n\n  message(message, type) {\n    const $banner = this.$bannerTemplate.clone();\n\n    $banner\n      .addClass(`message--${type}`)\n      .find('[data-message-banner-content]')\n      .html(message);\n\n    this.$body.append($banner);\n    this._bindEvents($banner);\n    this._show($banner);\n  }\n\n  dismissBanners() {\n    const $visibleBanners = $('[data-message-banner]:visible');\n\n    $visibleBanners.each((index, banner) => {\n      this._hide($(banner), index);\n    });\n  }\n\n  _bindEvents($banner) {\n    this.events.push([\n      $banner.on('click.message-banner', '[data-message-banner-close]', (event) => {\n        event.preventDefault();\n        this._hide($banner);\n      }),\n      this.$body.on('position-banners.message-banner', () => {\n        this._positionBanner($banner);\n      }),\n      this.$window.on('resize.message-banner', debounce(() => this._positionBanner($banner), 250)),\n      this.$window.on('scroll.message-banner', () => this._positionBanner($banner)),\n    ]);\n  }\n\n  /**\n   * Position Message beneath header if its in viewport, or at top of viewport\n   *\n   * @param $banner\n   * @private\n   */\n  _positionBanner($banner) {\n    $banner.css({ top: getHeaderOffset(this.header, true) });\n  }\n\n  _show($banner) {\n    this._positionBanner($banner);\n    this.$banners.push($banner);\n\n    $banner\n      .addClass('animating animating-in')\n      .one('trend', () => {\n        $banner\n          .removeClass('animating animating-in')\n          .addClass('visible')\n          .off('trend');\n      });\n  }\n\n  _hide($banner, index = 0) {\n    $banner\n      .addClass('animating animating-out')\n      .one('trend', () => {\n        $banner\n          .removeClass('animating animating-out visible')\n          .off('trend');\n        this._removeBanner($banner, index);\n      });\n  }\n\n  _removeBanner($banner, index) {\n    if (this.events[index]) {\n      this.events[index].forEach($el => $el.off('.message-banner'));\n      this.events.splice(index, 1);\n    }\n\n    this.$banners.splice(index, 1);\n    $banner.remove();\n  }\n\n  _handleDocumentClick(target) {\n    const $parent = $(target).parents('[data-message-banner]');\n    if ($parent.length) return;\n\n    this.dismissBanners();\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\nimport debounce from 'just-debounce';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport Forms from '../Forms';\nimport MessageBanner from '../components/MessageBanner';\n\nexport default class StaticCart {\n  constructor(section) {\n    this.settings = section.data.settings;\n    this.shipping = section.data.shipping;\n    this.messageBanner = new MessageBanner();\n\n    this.$window = $(window);\n    this.$el = $(section.el);\n    this.$header = $('.site-header-wrapper');\n    this.$total = this.$el.find('[data-cart-total]');\n    this.$shipping = this.$el.find('[data-cartshipping]');\n\n    // Product form containers\n    this.$titleTotalSmall = this.$el.find('.cart-title-total--small');\n    this.$titleTotalLarge = this.$el.find('.cart-title-total--large');\n    this.$titleTotalContents = this.$el.find('[data-cart-title-total]');\n\n    // Shipping calculator elements\n    this.$shippingToggle = this.$el.find('[data-cartshipping-toggle]');\n    this.$shippingResponse = this.$shipping.find('[data-cartshipping-response]');\n    this.$shippingResponseMessage = this.$shippingResponse.find('[data-cartshipping-message]');\n    this.$shippingResponseRates = this.$shippingResponse.find('[data-cartshipping-rates]');\n    this.$shippingSubmit = this.$shipping.find('[data-cartshipping-submit]');\n\n    this._moveTitleTotal();\n\n    const $scripts = $('[data-scripts]');\n\n    $script($scripts.data('shopify-api-url'), () => {\n      this._bindEvents();\n\n      Shopify.onError = this._handleErrors.bind(this);\n    });\n\n    this.forms = new Forms(this.$el);\n\n    // Update the section when onSectionLoad fires to restore prices to local currency\n    this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n\n    if (this.settings.shipping && this.$shipping.length) {\n      $script($scripts.data('shopify-countries'), () => {\n        $script($scripts.data('shopify-common'), () => {\n          $script($scripts.data('shopify-cart'), () => {\n            this._initShippingCalc();\n          });\n        });\n      });\n    }\n  }\n\n  onSectionUnload() {\n    this.$el.off('.cart-page');\n    this.$window.off('.cart-page');\n    this.forms.unload();\n    this.messageBanner.unload();\n    this.messageBanner.dismissBanners();\n  }\n\n  _bindEvents() {\n    this.$el.on('keydown.cart-page', '[data-cartitem-quantity]', (event) => {\n      this._quantityKeyDown(event);\n    });\n\n    this.$el.on('change.cart-page', '[data-cartitem-quantity]', (event) => {\n      this._editItemQuantity(event);\n    });\n\n    this.$el.on('click.cart-page', '[data-cartitem-remove]', (event) => {\n      event.preventDefault();\n      this._editItemQuantity(event, true);\n    });\n\n    this.$window.on('resize.cart-page', debounce(() => this._moveTitleTotal(), 20));\n  }\n\n  _moveTitleTotal() {\n    if (!this.$titleTotalContents.length) {\n      return;\n    }\n\n    if (this.$window.outerWidth() >= 480) {\n      if (!$.contains(this.$titleTotalLarge[0], this.$titleTotalContents[0])) {\n        const $form = this.$titleTotalContents.detach();\n        this.$titleTotalLarge.append($form);\n      }\n    } else {\n      if (!$.contains(this.$titleTotalSmall[0], this.$titleTotalContents[0])) {\n        const $form = this.$titleTotalContents.detach();\n        this.$titleTotalSmall.append($form);\n      }\n    }\n  }\n\n  /**\n   * Prevent form submission when pressing `enter` within a quantity selector\n   *\n   * @param event\n   * @private\n   */\n  _quantityKeyDown(event) {\n    // Only block enter keys\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    // Block form submission, but update field\n    $(event.currentTarget).trigger('change');\n\n    event.preventDefault();\n  }\n\n  /**\n   * Handle an item quantity change\n   *\n   * @param event\n   * @param {Boolean} remove - Set as true to remove cart item\n   * @private\n   */\n  _editItemQuantity(event, remove = false) {\n    this.messageBanner.dismissBanners();\n\n    const $target = $(event.currentTarget);\n    const $cartItem = $target.closest('[data-cartitem-id]');\n\n    let quantity = remove ? 0 : parseInt($target.val(), 10);\n    quantity = Math.max(quantity, 0);\n\n    this._updateCart($cartItem, quantity);\n\n    // Remove item from cart visually if it is being removed\n    if (quantity === 0 || remove) {\n      $cartItem.height($cartItem.height());\n    }\n  }\n\n  /**\n   * Update cart with a valid quantity\n   *\n   * @param $cartItem\n   * @param quantity\n   * @private\n   */\n  _updateCart($cartItem, quantity) {\n    const id = $cartItem.data('cartitem-id');\n\n    // Notify Shopify updated item\n    Shopify.changeItem(id, quantity, (response) => {\n      this._didUpdate(id, quantity,response, $cartItem);\n    });\n  }\n\n  _quantityError(limit, title) {\n    const errorMessage = this.settings.stock_limit\n      .replace('** quantity **', limit)\n      .replace('** title **', title);\n\n    this.messageBanner.message(errorMessage, 'error');\n  }\n\n  /**\n   * Update cart content based on information from Shopify\n   *\n   * @param id\n   * @param quantity\n   * @param response\n   * @param $cartItem\n   * @returns {*}\n   * @private\n   */\n  _didUpdate(id, quantity,response, $cartItem) {\n    // Reload page if all items are removed from cart\n    if (!response.items.length) {\n      return window.location = '/cart';\n    }\n\n    this.$header.trigger('cartcount:update', { response });\n\n    this.$total.each((i, el) => {\n      el.innerHTML = Shopify.formatMoney(response.total_price, this.settings.money_format);\n      CurrencyConverter.update(el);\n    });\n\n    // Select item from response\n    const filteredItems = response.items.filter(item => item.id === id);\n\n    if(!filteredItems.length) {\n      return $cartItem.addClass('removing')\n        .one('trend', () => {\n          $cartItem\n            .off('trend')\n            .remove();\n        });\n    }\n\n    const cartItem = filteredItems[0];\n    const itemTotal = $cartItem[0].querySelector('[data-cartitem-total]');\n\n    if (cartItem.quantity !== quantity) {\n      this._quantityError(cartItem.quantity, cartItem.title);\n      $cartItem.find('[data-quantity-input]').val(cartItem.quantity);\n      $cartItem.find('[data-quantity-select]').val(cartItem.quantity);\n    }\n\n    itemTotal.innerHTML = Shopify.formatMoney(cartItem.price * cartItem.quantity, this.settings.money_format);\n    CurrencyConverter.update(itemTotal);\n  }\n\n  /**\n   * Handle Errors returned from Shopify\n   *\n   * @param xhr\n   * @private\n   */\n  _handleErrors(xhr = null) {\n    if (!xhr) {\n      return;\n    }\n\n    const errors = $.parseJSON(xhr.responseText);\n    const shippingResponse = {\n      message: this.shipping.error_general,\n    };\n\n    if (errors.zip && errors.zip.length > 0) {\n      if (errors.zip[0].indexOf('is not valid') !== -1 || errors.zip[0].indexOf('can\\'t be blank') !== -1) {\n        shippingResponse.message = `${this.shipping.zip} ${errors.zip}`;\n      }\n    }\n\n    if (errors.error && errors.error.length > 0) {\n      if (errors.error[0].indexOf('shipment_too_heavy') !== -1) {\n        shippingResponse.message = this.shipping.shipment_too_heavy;\n      }\n    }\n\n    this._handleShippingResponse(shippingResponse);\n  }\n\n  _initShippingCalc() {\n    this._bindShippingCalcEvents();\n\n    Shopify.Cart.ShippingCalculator.show({\n      submitButton: this.shipping.calculate_shipping,\n      submitButtonDisabled: this.shipping.calculating,\n      customerIsLoggedIn: this.shipping.customer,\n      moneyFormat: this.settings.money_format,\n    });\n  }\n\n  _bindShippingCalcEvents() {\n    this.$el.on('click.cart-page', '[data-cartshipping-toggle]', () => {\n      this._toggleShippingCalc();\n    });\n\n    this.$el.on('click.cart-page', '[data-cartshipping-submit]', () => {\n      this._getShippingRates();\n    });\n\n    this.$el.on('keypress.cart-page', '#address_zip', (event) => {\n      if (event.keyCode === 10 || event.keyCode === 13) {\n        event.preventDefault();\n        this.$shippingSubmit.trigger('click');\n      }\n    });\n  }\n\n  _toggleShippingCalc() {\n    const oldText = this.$shippingToggle.text();\n    const newText = this.$shippingToggle.data('cartshipping-toggle');\n\n    this.$shippingToggle\n      .text(newText)\n      .data('cartshipping-toggle', oldText);\n\n    this.$shipping.toggleClass('open');\n  }\n\n  _getShippingRates() {\n    this._disableShippingButton();\n\n    const shippingAddress = {};\n    shippingAddress.country = $('#address_country').val() || '';\n    shippingAddress.province = $('#address_province').val() || '';\n    shippingAddress.zip = $('#address_zip').val() || '';\n\n    // Creates an ajax request which returns shipping information\n    Shopify.getCartShippingRatesForDestination(shippingAddress, (response, shippingAddress) => {\n      const addressBase = [];\n\n      if (shippingAddress.zip.length) {\n        addressBase.push(shippingAddress.zip.trim());\n      }\n\n      if (shippingAddress.province.length) {\n        addressBase.push(shippingAddress.province);\n      }\n\n      if (shippingAddress.country.length) {\n        addressBase.push(shippingAddress.country);\n      }\n\n      const address = addressBase.join(', ');\n\n      let message = '';\n      if (response.length > 1) {\n        const firstRate = Shopify.Cart.ShippingCalculator.formatRate(response[0].price);\n        message = this.shipping.multiple_rates\n          .replace('*address*', address)\n          .replace('*number_of_rates*', response.length)\n          .replace('*rate*', `<span class=\"money\">${firstRate}</span>`);\n      } else if (response.length === 1) {\n        message = this.shipping.one_rate.replace('*address*', address);\n      } else {\n        message = this.shipping.no_rates;\n      }\n\n      const rates = [];\n      response.forEach((rate) => {\n        const price = Shopify.Cart.ShippingCalculator.formatRate(rate.price);\n        const rateValue = this.shipping.rate_value\n          .replace('*rate_title*', rate.name)\n          .replace('*rate*', `<span class=\"money\">${price}</span>`);\n\n        rates.push(`<li>${rateValue}</li>`);\n      });\n\n      this._handleShippingResponse({\n        message,\n        rates,\n      });\n    });\n  }\n\n  _enableShippingButton() {\n    this.$shippingSubmit\n      .text(this.shipping.calculate_shipping)\n      .attr('disabled', false);\n  }\n\n  _disableShippingButton() {\n    this.$shippingSubmit\n      .text(this.shipping.calculating)\n      .attr('disabled', true);\n  }\n\n  _showShippingResponse() {\n    this.$shippingResponse.addClass('visible');\n  }\n\n  _hideShippingResponse() {\n    this.$shippingResponse.removeClass('visible');\n  }\n\n  /**\n   * Handle shipping responses\n   *\n   * @param {object} shippingResponse\n   * @property {String} shippingResponse.messages - Error / Success message\n   * @property {Array|String} shippingResponse.rates - Shipping rates\n   * @private\n   */\n  _handleShippingResponse(shippingResponse = {}) {\n    // Hide the response so that it can be populated smoothly\n    this._hideShippingResponse();\n\n    const message = shippingResponse.message || null;\n    const rates = shippingResponse.rates || null;\n\n    // Empty out contents\n    this.$shippingResponseMessage.empty();\n    this.$shippingResponseRates.empty();\n\n    if (message) {\n      this.$shippingResponseMessage.html(message);\n    }\n\n    if (rates) {\n      this.$shippingResponseRates.html(rates);\n    }\n\n    // Reset the calculating button so it can be used again\n    this._enableShippingButton();\n\n    // No error provided\n    if (!message && !rates) {\n      return;\n    }\n\n    // Show the response\n    this._showShippingResponse();\n  }\n}\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.VanillaModal = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var defaults = {\n    modal: '.modal',\n    modalInner: '.modal-inner',\n    modalContent: '.modal-content',\n    open: '[data-modal-open]',\n    close: '[data-modal-close]',\n    page: 'body',\n    class: 'modal-visible',\n    loadClass: 'vanilla-modal',\n    clickOutside: true,\n    closeKeys: [27],\n    transitions: true,\n    transitionEnd: null,\n    onBeforeOpen: null,\n    onBeforeClose: null,\n    onOpen: null,\n    onClose: null\n  };\n\n  function throwError(message) {\n    // eslint-disable-next-line no-console\n    console.error('VanillaModal: ' + message);\n  }\n\n  function find(arr, callback) {\n    return function (key) {\n      var filteredArray = arr.filter(callback);\n      return filteredArray[0] ? filteredArray[0][key] : undefined;\n    };\n  }\n\n  function transitionEndVendorSniff() {\n    var el = document.createElement('div');\n    var transitions = [{ key: 'transition', value: 'transitionend' }, { key: 'OTransition', value: 'otransitionend' }, { key: 'MozTransition', value: 'transitionend' }, { key: 'WebkitTransition', value: 'webkitTransitionEnd' }];\n    return find(transitions, function (_ref) {\n      var key = _ref.key;\n      return typeof el.style[key] !== 'undefined';\n    })('value');\n  }\n\n  function isPopulatedArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]' && arr.length;\n  }\n\n  function getNode(selector, parent) {\n    var targetNode = parent || document;\n    var node = targetNode.querySelector(selector);\n    if (!node) {\n      throwError(selector + ' not found in document.');\n    }\n    return node;\n  }\n\n  function addClass(el, className) {\n    if (!(el instanceof HTMLElement)) {\n      throwError('Not a valid HTML element.');\n    }\n    el.setAttribute('class', el.className.split(' ').filter(function (cn) {\n      return cn !== className;\n    }).concat(className).join(' '));\n  }\n\n  function removeClass(el, className) {\n    if (!(el instanceof HTMLElement)) {\n      throwError('Not a valid HTML element.');\n    }\n    el.setAttribute('class', el.className.split(' ').filter(function (cn) {\n      return cn !== className;\n    }).join(' '));\n  }\n\n  function getElementContext(e) {\n    if (e && typeof e.hash === 'string') {\n      return document.querySelector(e.hash);\n    } else if (typeof e === 'string') {\n      return document.querySelector(e);\n    }\n    throwError('No selector supplied to open()');\n    return null;\n  }\n\n  function applyUserSettings(settings) {\n    return _extends({}, defaults, settings, {\n      transitionEnd: transitionEndVendorSniff()\n    });\n  }\n\n  function matches(e, selector) {\n    var allMatches = (e.target.document || e.target.ownerDocument).querySelectorAll(selector);\n    for (var i = 0; i < allMatches.length; i += 1) {\n      var node = e.target;\n      while (node && node !== document.body) {\n        if (node === allMatches[i]) {\n          return node;\n        }\n        node = node.parentNode;\n      }\n    }\n    return null;\n  }\n\n  var VanillaModal = function () {\n    function VanillaModal(settings) {\n      _classCallCheck(this, VanillaModal);\n\n      this.isOpen = false;\n      this.current = null;\n      this.isListening = false;\n\n      this.settings = applyUserSettings(settings);\n      this.dom = this.getDomNodes();\n\n      this.open = this.open.bind(this);\n      this.close = this.close.bind(this);\n      this.closeKeyHandler = this.closeKeyHandler.bind(this);\n      this.outsideClickHandler = this.outsideClickHandler.bind(this);\n      this.delegateOpen = this.delegateOpen.bind(this);\n      this.delegateClose = this.delegateClose.bind(this);\n      this.listen = this.listen.bind(this);\n      this.destroy = this.destroy.bind(this);\n\n      this.addLoadedCssClass();\n      this.listen();\n    }\n\n    _createClass(VanillaModal, [{\n      key: 'getDomNodes',\n      value: function getDomNodes() {\n        var _settings = this.settings,\n            modal = _settings.modal,\n            page = _settings.page,\n            modalInner = _settings.modalInner,\n            modalContent = _settings.modalContent;\n\n        return {\n          modal: getNode(modal),\n          page: getNode(page),\n          modalInner: getNode(modalInner, getNode(modal)),\n          modalContent: getNode(modalContent, getNode(modal))\n        };\n      }\n    }, {\n      key: 'addLoadedCssClass',\n      value: function addLoadedCssClass() {\n        addClass(this.dom.page, this.settings.loadClass);\n      }\n    }, {\n      key: 'setOpenId',\n      value: function setOpenId(id) {\n        var page = this.dom.page;\n\n        page.setAttribute('data-current-modal', id || 'anonymous');\n      }\n    }, {\n      key: 'removeOpenId',\n      value: function removeOpenId() {\n        var page = this.dom.page;\n\n        page.removeAttribute('data-current-modal');\n      }\n    }, {\n      key: 'open',\n      value: function open(allMatches, e) {\n        var page = this.dom.page;\n        var _settings2 = this.settings,\n            onBeforeOpen = _settings2.onBeforeOpen,\n            onOpen = _settings2.onOpen;\n\n        if (!(this.current instanceof HTMLElement === false)) {\n          throwError('VanillaModal target must exist on page.');\n          return;\n        }\n        this.releaseNode(this.current);\n        this.current = getElementContext(allMatches);\n        if (typeof onBeforeOpen === 'function') {\n          onBeforeOpen.call(this, e);\n        }\n        this.captureNode(this.current);\n        addClass(page, this.settings.class);\n        this.setOpenId(this.current.id);\n        this.isOpen = true;\n        if (typeof onOpen === 'function') {\n          onOpen.call(this, e);\n        }\n      }\n    }, {\n      key: 'detectTransition',\n      value: function detectTransition() {\n        var modal = this.dom.modal;\n\n        var css = window.getComputedStyle(modal, null);\n        return Boolean(['transitionDuration', 'oTransitionDuration', 'MozTransitionDuration', 'webkitTransitionDuration'].filter(function (i) {\n          return typeof css[i] === 'string' && parseFloat(css[i]) > 0;\n        }).length);\n      }\n    }, {\n      key: 'close',\n      value: function close(e) {\n        var _settings3 = this.settings,\n            transitions = _settings3.transitions,\n            transitionEnd = _settings3.transitionEnd,\n            onBeforeClose = _settings3.onBeforeClose;\n\n        var hasTransition = this.detectTransition();\n        if (this.isOpen) {\n          this.isOpen = false;\n          if (typeof onBeforeClose === 'function') {\n            onBeforeClose.call(this, e);\n          }\n          removeClass(this.dom.page, this.settings.class);\n          if (transitions && transitionEnd && hasTransition) {\n            this.closeModalWithTransition(e);\n          } else {\n            this.closeModal(e);\n          }\n        }\n      }\n    }, {\n      key: 'closeModal',\n      value: function closeModal(e) {\n        var onClose = this.settings.onClose;\n\n        this.removeOpenId(this.dom.page);\n        this.releaseNode(this.current);\n        this.isOpen = false;\n        this.current = null;\n        if (typeof onClose === 'function') {\n          onClose.call(this, e);\n        }\n      }\n    }, {\n      key: 'closeModalWithTransition',\n      value: function closeModalWithTransition(e) {\n        var _this = this;\n\n        var modal = this.dom.modal;\n        var transitionEnd = this.settings.transitionEnd;\n\n        var closeTransitionHandler = function closeTransitionHandler() {\n          modal.removeEventListener(transitionEnd, closeTransitionHandler);\n          _this.closeModal(e);\n        };\n        modal.addEventListener(transitionEnd, closeTransitionHandler);\n      }\n    }, {\n      key: 'captureNode',\n      value: function captureNode(node) {\n        var modalContent = this.dom.modalContent;\n\n        while (node.childNodes.length) {\n          modalContent.appendChild(node.childNodes[0]);\n        }\n      }\n    }, {\n      key: 'releaseNode',\n      value: function releaseNode(node) {\n        var modalContent = this.dom.modalContent;\n\n        while (modalContent.childNodes.length) {\n          node.appendChild(modalContent.childNodes[0]);\n        }\n      }\n    }, {\n      key: 'closeKeyHandler',\n      value: function closeKeyHandler(e) {\n        var closeKeys = this.settings.closeKeys;\n\n        if (isPopulatedArray(closeKeys) && closeKeys.indexOf(e.which) > -1 && this.isOpen === true) {\n          e.preventDefault();\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'outsideClickHandler',\n      value: function outsideClickHandler(e) {\n        var clickOutside = this.settings.clickOutside;\n        var modalInner = this.dom.modalInner;\n\n        if (clickOutside) {\n          var node = e.target;\n          while (node && node !== document.body) {\n            if (node === modalInner) {\n              return;\n            }\n            node = node.parentNode;\n          }\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'delegateOpen',\n      value: function delegateOpen(e) {\n        var open = this.settings.open;\n\n        var matchedNode = matches(e, open);\n        if (matchedNode) {\n          e.preventDefault();\n          this.open(matchedNode, e);\n        }\n      }\n    }, {\n      key: 'delegateClose',\n      value: function delegateClose(e) {\n        var close = this.settings.close;\n\n        if (matches(e, close)) {\n          e.preventDefault();\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'listen',\n      value: function listen() {\n        var modal = this.dom.modal;\n\n        if (!this.isListening) {\n          modal.addEventListener('click', this.outsideClickHandler, false);\n          document.addEventListener('keydown', this.closeKeyHandler, false);\n          document.addEventListener('click', this.delegateOpen, false);\n          document.addEventListener('click', this.delegateClose, false);\n          this.isListening = true;\n        } else {\n          throwError('Event listeners already applied.');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var modal = this.dom.modal;\n\n        if (this.isListening) {\n          this.close();\n          modal.removeEventListener('click', this.outsideClickHandler);\n          document.removeEventListener('keydown', this.closeKeyHandler);\n          document.removeEventListener('click', this.delegateOpen);\n          document.removeEventListener('click', this.delegateClose);\n          this.isListening = false;\n        } else {\n          throwError('Event listeners already removed.');\n        }\n      }\n    }]);\n\n    return VanillaModal;\n  }();\n\n  exports.default = VanillaModal;\n});\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport VanillaModal from 'vanilla-modal';\n\nexport default class Modal {\n  constructor(callbacks = {}) {\n    this.$body = $(document.body);\n    this.$window = $(window);\n\n    this.modal = null;\n    this.$modal = $('[data-modal-container]');\n    this.$modalInner = this.$modal.find('[data-modal-inner]');\n\n    // Extend default vanilla-modal callbacks back to instantiator of Modal\n    this.defaultCallbacks = {\n      onOpen: () => {},\n      onClose: () => {},\n      onBeforeOpen: () => {},\n      onBeforeClose: () => {},\n    };\n\n    this.callbacks = $.extend({}, this.defaultCallbacks, callbacks);\n\n    this._onOpen = this._onOpen.bind(this);\n    this._onBeforeOpen = this._onBeforeOpen.bind(this);\n    this._onClose = this._onClose.bind(this);\n    this._onBeforeClose = this._onBeforeClose.bind(this);\n\n    this.position = this.position.bind(this);\n\n    this.modalOptions = {\n      loadClass: '',\n      class: 'modal-loaded',\n      onOpen: this._onOpen,\n      onClose: this._onClose,\n      onBeforeOpen: this._onBeforeOpen,\n      onBeforeClose: this._onBeforeClose,\n      transitions: false,\n    };\n  }\n\n  unload() {\n    if (!this.modal || !this.modal.isOpen) return;\n\n    this.modal.destroy();\n  }\n\n  /**\n   * Open a modal with contents from selector\n   *\n   * @param selector\n   * @param handle\n   */\n  open(selector, handle = 'general') {\n    this._addModalClass(handle);\n    this.modal = new VanillaModal(this.modalOptions);\n    this.modal.open(selector);\n  }\n\n  close() {\n    this.modal.close();\n  }\n\n  isOpen() {\n    return this.modal && this.modal.isOpen;\n  }\n\n  /**\n   * Update the vertical positioning of modal\n   */\n  position() {\n    const windowHeight = window.innerHeight;\n\n    const modalHeight = this.$modalInner.outerHeight();\n    const modalPadding = parseInt(this.$modal.css('padding-top'), 10) * 2;\n\n    const offset = (windowHeight - modalPadding - modalHeight) / 2;\n    const marginTop = offset > 0 ? offset : 0;\n    this.$modalInner.css({ marginTop });\n  }\n\n  /**\n   * Add a class to the modal for individual styling\n   * @param handle\n   * @private\n   */\n  _addModalClass(handle) {\n    this.$modal.addClass(`modal--${handle}`);\n  }\n\n  /**\n   * Remove modal class based on the handle\n   * @private\n   */\n  _removeModalClass() {\n    const modalClass = this.$modal.attr('class').match(/modal--[\\w-]*\\b/);\n    if (!modalClass) {\n      return;\n    }\n\n    this.$modal.removeClass(modalClass[0]);\n  }\n\n  _onClose() {\n    this._removeModalClass();\n    this.$body\n      .removeClass('scroll-lock')\n      .removeClass('modal-visible');\n\n    this.$window.off('resize.modal');\n\n    this.$modalInner.css({ marginTop: '' });\n\n    this.callbacks.onClose();\n  }\n\n  _onOpen() {\n    this.position();\n    this.$body\n      .addClass('scroll-lock')\n      .addClass('modal-visible');\n    this.$window.on('resize.modal', debounce(() => this.position(), 16, true, true));\n\n    this.callbacks.onOpen();\n  }\n\n  _onBeforeClose() {\n    this.callbacks.onBeforeClose();\n  }\n\n  _onBeforeOpen() {\n    this.callbacks.onBeforeOpen();\n  }\n}\n","import $ from 'jquery';\n\n/**\n * Traps the focus in a particular container\n *\n * @param {object} options - Options to be used\n * @param {jQuery} options.$container - Container to trap focus within\n * @param {jQuery} options.$elementToFocus - Element to be focused when focus leaves container\n * @param {string} options.namespace - Namespace used for new focus event handler\n */\nfunction trapFocus(options) {\n  const  eventName = options.namespace\n    ? `focusin.${options.namespace}`\n    : 'focusin';\n\n  if (!options.$elementToFocus) {\n    options.$elementToFocus = options.$container;\n  }\n\n  options.$container.attr('tabindex', '-1');\n  options.$elementToFocus.focus();\n\n  $(document).on(eventName, (evt) => {\n    if (options.$container[0] !== evt.target && !options.$container.has(evt.target).length) {\n      options.$container.focus();\n    }\n  });\n}\n\n\n/**\n * Removes the trap of focus in a particular container\n *\n * @param {object} options - Options to be used\n * @param {jQuery} options.$container - Container to trap focus within\n * @param {string} options.namespace - Namespace used for new focus event handler\n */\nfunction removeTrapFocus(options) {\n  const eventName = options.namespace\n    ? `focusin.${options.namespace}`\n    : 'focusin';\n\n  if (options.$container && options.$container.length) {\n    options.$container.removeAttr('tabindex');\n  }\n\n  $(document).off(eventName);\n}\n\nexport {\n  trapFocus,\n  removeTrapFocus,\n};\n","import $ from 'jquery';\n\nclass Node {\n  constructor(variant) {\n    this.variant = variant;\n    this.optionsCount = this.variant.options.length;\n    this.neighbors = [];\n\n    for (let i = 0; i < this.optionsCount; i++) {\n      this.neighbors.push([]);\n    }\n  }\n\n  addNeighbor(variant) {\n    for (let i = 0; i < this.optionsCount; i++) {\n      if (this.variant.options[i] !== variant.options[i]) {\n        this.neighbors[i].push(variant);\n        break;\n      }\n    }\n  }\n\n  getValidOptions() {\n    const options = [];\n\n    for (let i = 0; i < this.optionsCount; i++) {\n      const variants = [this.variant, ...this.neighbors[i]];\n      options[i] = {};\n\n      variants.forEach((item) => {\n        const variant = item;\n        const option = variant.options[i];\n\n        options[i][option] = {\n          available: (options[i][option] && options[i][option].available) || variant.available,\n        };\n      });\n    }\n\n    return options;\n  }\n}\n\nexport default class ProductOptions {\n  constructor(product) {\n    this.productHandle = product.handle;\n    this.optionsCount = product.options.length;\n    this.variants = product.variants;\n    this.nodeMap = {};\n\n    this._generateNodeMap(product);\n  }\n\n  _generateNodeMap() {\n    this.variants.forEach((variant) => {\n      this.nodeMap[variant.id] = new Node(variant);\n\n      this.variants.forEach((variant2) => {\n        this.nodeMap[variant.id].addNeighbor(variant2);\n      });\n    });\n  }\n\n  getVariantFromOptions(options) {\n    this.variants.forEach((variant) => {\n      let found = true;\n\n      for (let i = 0; i < variant.options.length; i++) {\n        if (options[i] !== variant.options[i]) {\n          found = false;\n        }\n      }\n\n      if (found) {\n        return variant;\n      }\n    });\n\n    return false;\n  }\n\n  getClosestVariantFromOptions(options) {\n    let closestVariant = null;\n    let matchingValues = 0;\n\n    this.variants.forEach((variant) => {\n      let tempMatchingValues = 0;\n\n      for (let i = 0; i < variant.options.length; i++) {\n        if (options[i] === variant.options[i]) {\n          tempMatchingValues++;\n        } else {\n          break;\n        }\n      }\n\n      if (tempMatchingValues >= matchingValues) {\n        closestVariant = variant;\n        matchingValues = tempMatchingValues;\n      }\n    });\n\n    return closestVariant ? closestVariant : false;\n  }\n\n  getVariantOrClosestFromOptions(options) {\n    return this.getVariantFromOptions(options)\n      || this.getClosestVariantFromOptions(options);\n  }\n\n  getAvailableOptionsFromVariant(variant) {\n    return this.nodeMap[variant.id].getValidOptions();\n  }\n}\n","import $ from 'jquery';\nimport ProductOptions from './ProductOptions';\n\nexport default class VariantHelper {\n  constructor(product, $variants, $options) {\n    this.product = product;\n    this.optionsCount = this.product.options.length;\n    this.$variants = $variants;\n    this.$options = $options;\n    this.productOptions = new ProductOptions(this.product);\n    this.optionsTypes = {\n      select: 'select',\n      radio: 'input[type=\"radio\"]',\n    };\n\n    this._bindEvents();\n\n    if (this.$options.is(this.optionsTypes.select)) {\n      this.optionsType = this.optionsTypes.select;\n    } else if (this.$options.is(this.optionsTypes.radio)) {\n      this.optionsType = this.optionsTypes.radio;\n    } else {\n      console.warn('Variant helper: Option set is not a valid type');\n      this._unbindEvents();\n    }\n\n    this._switchVariant(true);\n  }\n\n  _bindEvents() {\n    this.$options.on('change.variant-helper', () => this._switchVariant());\n  }\n\n  _unbindEvents() {\n    this.$options.off('change.variant-helper');\n  }\n\n  _switchVariant(firstLoad = false) {\n    const options = [];\n    const product = this.product;\n    let variant = null;\n    let availableOptions = null;\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this.$options.each((i, option) => {\n        options.push(option.value);\n      });\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this.$options.filter(':checked').each((i, option) => {\n        options.push(option.value);\n      });\n    } else {\n      return;\n    }\n\n    variant = this.productOptions.getVariantOrClosestFromOptions(options);\n\n    if (variant) {\n      availableOptions = this.productOptions.getAvailableOptionsFromVariant(variant);\n    } else {\n      return;\n    }\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this._switchVariantSelect(variant, availableOptions);\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this._switchVariantRadio(variant, availableOptions);\n    } else {\n      return;\n    }\n\n    this.$variants.val(variant.id);\n    $(window).trigger('product-variant-switch', {product, variant, firstLoad});\n  }\n\n  _switchVariantSelect(variant, availableOptions) {\n    // Iterate over each option type\n    for (let i = 0; i < this.product.options.length; i++) {\n      // Corresponding select dropdown\n      const $select = $(this.$options[i]);\n      const $optionEls = $select.find('option');\n\n      // Iterate over each option on dropdown\n      $optionEls.each((index, option) => {\n        const $option = $(option);\n        const value = option.value;\n\n        // Not an available option\n        $option\n          .prop('disabled', (!availableOptions[i][value] || !availableOptions[i][value].available))\n          .prop('selected', false);\n\n        // Dropdown option matches variant option\n        if (variant.options[i] === value) {\n          $option\n            .prop('disabled', false)\n            .prop('selected', true);\n        }\n      });\n    }\n  }\n\n  _switchVariantRadio(variant, availableOptions) {\n    this.$options\n      .attr('disabled', true)\n      .prop('checked', false)\n      .attr('data-soldout', false);\n\n    for (let i = 0; i < this.product.options.length; i++) {\n      const selector = this.product.options[i].replace(/\"/g, '\\\\\"');\n      const $options = this.$options.filter(`[name=\"${selector}\"]`);\n      $options.each((index, option) => {\n        const $option = $(option);\n\n        if (variant.options[i] === $option.val()) {\n          $option\n            .prop('checked', true)\n        }\n\n        if (availableOptions[i][$option.val()]) {\n          $option.attr('disabled', false);\n\n          if (!availableOptions[i][$option.val()].available) {\n            $option.attr('disabled', true);\n            $option.attr('data-soldout', true);\n          }\n        }\n      });\n    }\n  }\n\n  isDefault() {\n    if (this.product.variants[0].title === 'Default Title' && this.product.variants[0].option1 === 'Default Title') {\n      return true;\n    }\n  }\n\n  hasSingleOption() {\n    return this.optionsCount === 1;\n  }\n\n  getSelectedVariant() {\n    const options = [];\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this.$options.each((i, option) => {\n        options.push(option.value);\n      });\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this.$options.filter(':checked').each((i, option) => {\n        options.push(option.value);\n      });\n    } else {\n      return;\n    }\n\n    return this.productOptions.getVariantFromOptions(options);\n  }\n\n  unload() {\n    this._unbindEvents();\n  }\n}\n","export default class Images {\n  /**\n   * Preloads an image in memory and uses the browsers cache to store it until needed.\n   *\n   * @param {Array} images - A list of image urls\n   * @param {String} size - A shopify image size attribute\n   */\n  preload(images, size) {\n    if (typeof images === 'string') {\n      images = [images];\n    }\n\n    for (let i = 0; i < images.length; i++) {\n      this.loadImage(this.getSizedImageUrl(images[i], size));\n    }\n  }\n\n  /**\n   * Loads and caches an image in the browsers cache.\n   *\n   * @param {string} path - An image url\n   */\n  loadImage(path) {\n    return new Image().src = path;\n  }\n\n  /**\n   * Adds a Shopify size attribute to a URL\n   *\n   * @param src\n   * @param size\n   * @returns {*}\n   */\n  getSizedImageUrl(src = null, size) {\n    if (!size) {\n      return null;\n    }\n\n    if (size === 'master') {\n      return this.removeProtocol(src);\n    }\n\n    const match = src.match(/\\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\\?v=\\d+)?$/i);\n\n    if (match) {\n      const prefix = src.split(match[0]);\n      const suffix = match[0];\n\n      return this.removeProtocol(`${prefix[0]}_${size}${suffix}`);\n    } else {\n      console.warn(`No ${size} found for '${src}`);\n      return null;\n    }\n  }\n\n  removeProtocol(path) {\n    return path.replace(/http(s)?:/, '');\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport MessageBanner from './MessageBanner';\nimport getHeaderOffset from '../helpers/getHeaderOffset';\nimport Images from '../helpers/Images';\n\nclass AddToCartFlyout {\n  constructor() {\n    this.formData = {};\n    this.settings = {};\n    this.events = [];\n    this.Images = new Images();\n    this.flyOutSelector = '[data-atc-banner]';\n    this.$atcTemplate = $(`[data-templates] ${this.flyOutSelector}`);\n\n    this._onInit = this._onInit.bind(this);\n    this._onOpen = this._onOpen.bind(this);\n    this._onClose = this._onClose.bind(this);\n    this._onError = this._onError.bind(this);\n    this._onSuccess = this._onSuccess.bind(this);\n    this._handleDocumentClick = this._handleDocumentClick.bind(this);\n\n    this.messageBanner = new MessageBanner();\n\n    this.header = document.querySelector('.site-header-wrapper');\n    this.$header = $(this.header);\n    this.$body = $(document.body);\n  }\n\n  init(formData, options, callbacks = {}) {\n    // If any FlyOuts are fully open, close them\n    this._closeFlyOuts();\n\n    this.formData = formData;\n\n    // Allows ATC Flow to be overridden\n    this.callbacks = $.extend({\n      onInit: this._onInit,\n      onClose: this._onClose,\n      onError: this._onError,\n      onOpen: this._onOpen,\n      onSuccess: this._onSuccess,\n    }, callbacks);\n\n    const $atcButton = options.$atcButton;\n\n    this.settings = $.extend({\n      moneyFormat: null,\n      cartRedirection: false,\n    }, options.settings);\n\n    this.callbacks.onInit();\n\n    this._updateCart($atcButton);\n    this._disableButton($atcButton);\n  }\n\n  unload() {\n    this.messageBanner.dismissBanners();\n    this._removeFlyOuts();\n    delete this.Images;\n  }\n\n  _updateCart($atcButton) {\n    const $flyOut = this.$atcTemplate.clone();\n\n    const quantityField = this.formData.filter(data => { return data.name === 'quantity'; });\n    const quantity = quantityField[0].value;\n\n    $.ajax({\n      type: 'POST',\n      url: '/cart/add.js',\n      data: $.param(this.formData),\n      dataType: 'json',\n    })\n    .done((response) => {\n      if (response.image) {\n        const imageUrl = this.Images.getSizedImageUrl(response.image, '200x');\n        const image = this.Images.loadImage(imageUrl);\n\n        $flyOut.find('[data-atc-banner-product-image]')\n          .html(`<img src=\"${image}\" alt=\"${response.product_title}\">`);\n      }\n\n      $flyOut.find('[data-atc-banner-product-title]')\n        .text(`${response.product_title} × ${quantity}`);\n\n      /*\n        TODO: Bring in `variant.options`, iterate through to get option\n          name for: <strong>Option name:</strong> Option\n       */\n      if (response.variant_options[0] !== 'Title' && response.variant_options[0] !== 'Default Title') {\n        $flyOut.find('[data-atc-banner-product-options]')\n          .text(response.variant_options.join(', '));\n      }\n\n      /*\n        TODO: Bring in variant, and use that to check compare_at_price\n          to see if the item is on sale\n       */\n      const $productPrice = $flyOut.find('[data-atc-banner-product-price]');\n      $productPrice.text(Shopify.formatMoney(response.price, this.settings.moneyFormat));\n\n      // Update price to local currency\n      CurrencyConverter.update($productPrice[0]);\n\n      $.ajax({\n        type: 'GET',\n        url: '/cart.js',\n        dataType: 'json',\n      })\n      .done((response) => {\n        if (this.settings.cartRedirection) {\n          return location.href = '/cart';\n        }\n\n        this.callbacks.onSuccess();\n\n        // Reset formData in case instance is never cleared\n        this.formData = {};\n\n        const $subTotal = $flyOut.find('[data-atc-banner-cart-subtotal]');\n        $subTotal.text(Shopify.formatMoney(response.original_total_price, this.settings.moneyFormat));\n        CurrencyConverter.update($subTotal[0]);\n\n        $flyOut\n          .find('[data-atc-banner-cart-button]')\n          .find('span').text(response.item_count);\n\n        this.$body.append($flyOut);\n\n        // Notifiy Header of new cart count\n        this.$header.trigger('cartcount:update', { response });\n\n        this._positionFlyOut($flyOut);\n        this._bindEvents($flyOut);\n        this._openFlyOut($flyOut, $atcButton);\n      });\n    })\n    .fail((response) => {\n      const responseText = JSON.parse(response.responseText);\n      const error = responseText.description;\n\n      this._enableButton($atcButton);\n      this.callbacks.onError(error);\n    });\n  }\n\n  _onError(error) {\n    this.messageBanner.message(error, 'error');\n  }\n\n  _onInit() {\n    this.messageBanner.dismissBanners();\n  }\n\n  _onOpen() {\n    /*\n      The `this.callbacks.onOpen` is used pull keyboard focus into the active flyout\n     */\n    console.warn('AddToCartFlyout onOpen callback not specified');\n  }\n\n  _onClose() {\n    /*\n      The `this.callbacks.onClose` is used to return focus to originating DOM\n     */\n\n    console.warn('AddToCartFlyout onClose callback not specified');\n  }\n\n  _onSuccess() {\n    /*\n      By default, the ATC Flyout doesn't need any additional success callbacks\n\n      The `this.callbacks.onSuccess` is used to allow other views to initiate\n      behaviour when a product has been added to the cart\n     */\n  }\n\n  _bindEvents($flyOut) {\n    this.events.push([\n      $flyOut.on('click.atc-banner', '[data-atc-banner-close]', (event) => {\n        event.preventDefault();\n        this._closeFlyOut($flyOut);\n      }),\n      this.$body.on('position-banners.atc-banner', () => {\n        this._positionFlyOut($flyOut);\n      }),\n      $(window).on('resize.atc-banner', () => {\n        debounce(this._positionFlyOut($flyOut), 250);\n      }),\n      $(window).on('scroll.atc-banner', () => {\n        this._positionFlyOut($flyOut);\n      }),\n      $(document).on('touchstart.atc-banner, click.atc-banner', this._handleDocumentClick),\n    ]);\n  }\n\n  /**\n   * Trigger any existing open FlyOuts to close\n   *\n   * @private\n   */\n  _closeFlyOuts($excludeFlyOut = null) {\n    $(this.flyOutSelector).filter('[data-flyout-active]').each((index, el) => {\n      const $flyOut = $(el);\n\n      if ($excludeFlyOut && $flyOut.is($excludeFlyOut)) {\n        return;\n      }\n\n      this._closeFlyOut($flyOut, index);\n    });\n  }\n\n  _openFlyOut($flyOut, $atcButton) {\n    /*\n     If user has initiated a new ATC Flow before the first has finished,\n     the first FlyOut could have opened after the first attempt to close open flyouts\n    */\n    this._closeFlyOuts($flyOut);\n\n    $flyOut\n      .addClass('animating animating-in')\n      .one('trend', () => {\n        $flyOut\n          .removeClass('animating animating-in')\n          .addClass('visible')\n          .off('trend');\n\n        $flyOut.attr('data-flyout-active', true);\n        this.callbacks.onOpen({\n          $container: $flyOut,\n          $elementToFocus: $flyOut.find('[data-atc-banner-cart-button]')\n        });\n\n        this._enableButton($atcButton);\n      });\n  }\n\n  /**\n   * Close an open FlyOut\n   *\n   * @param $flyOut\n   * @param index\n   * @private\n   */\n  _closeFlyOut($flyOut = null, index = 0) {\n    if (!$flyOut) {\n      return;\n    }\n\n    $flyOut\n      .addClass('animating animating-out')\n      .one('trend', () => {\n        $flyOut\n          .removeClass('animating animating-out visible')\n          .one('trend', () => {\n            $flyOut.off('trend');\n            this._removeFlyOut($flyOut, index);\n            this.callbacks.onClose();\n          });\n      });\n  }\n\n  _removeFlyOuts() {\n    $(this.flyOutSelector).filter('[data-flyout-active]').each((index, el) => {\n      this._removeFlyOut($(el), index);\n    });\n  }\n\n  /**\n   * Remove the Flyout from the DOM, and clean up listeners\n   *\n   * @param $flyOut\n   * @param index\n   * @private\n   */\n  _removeFlyOut($flyOut, index) {\n    if (this.events[index]) {\n      this.events[index].forEach($el => $el.off('.atc-banner'));\n      this.events.splice(index, 1);\n    }\n\n    if ($flyOut) {\n      $flyOut.remove();\n    }\n  }\n\n  /**\n   * Position FlyOut beneath header if its in viewport, or at top of viewport\n   *\n   * @param $flyOut\n   * @private\n   */\n  _positionFlyOut($flyOut) {\n    $flyOut.css({ top: getHeaderOffset(this.header, true) });\n  }\n\n  _disableButton($atcButton) {\n    $atcButton\n      .addClass('processing')\n      .prop('disabled', true);\n  }\n\n  _enableButton($atcButton) {\n    $atcButton\n      .prop('disabled', false)\n      .removeClass('processing');\n  }\n\n  _handleDocumentClick(event) {\n    const target = event.target;\n    const $parent = $(target).parents('[data-atc-banner]');\n\n    if ($parent.length) {\n      return;\n    }\n\n    this._closeFlyOuts();\n  }\n}\n\nexport default new AddToCartFlyout();\n","import $script from 'scriptjs';\n\nconst api = 'https://www.youtube.com/iframe_api';\nlet apiLoadedCallbacks = [];\nlet apiLoaded = false;\n\nwindow.onYouTubeIframeAPIReady = () => {\n  apiLoadedCallbacks.forEach(apiLoadedCallback => apiLoadedCallback());\n  apiLoadedCallbacks = [];\n  apiLoaded = true;\n};\n\nexport default class Youtube {\n  constructor(el) {\n    const url = el.getAttribute('data-video-url');\n    const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n\n    this.el = el;\n    this.id = url.match(regex)[1] || null;\n\n    this.onApiLoaded = this._onApiLoaded.bind(this);\n\n    this.isReady = false;\n    this.onReady = this._onReady.bind(this);\n    this.onReadyCallback = null;\n\n    this.onStateChange = this._onStateChange.bind(this);\n    this.onPlayCallback = null;\n\n    if (apiLoaded) {\n      this._onApiLoaded();\n    } else {\n      apiLoadedCallbacks.push(this.onApiLoaded);\n      $script(api);\n    }\n  }\n\n  play() {\n    return new Promise((resolve) => {\n      this.onPlayCallback = resolve;\n\n      if (this.isReady) {\n        this.player.playVideo();\n      } else {\n        this.onReadyCallback = () => { this.player.playVideo(); };\n      }\n    });\n  }\n\n  pause() {\n    return new Promise((resolve) => {\n      this.onPlayCallback = resolve;\n\n      if (this.isReady) {\n        this.player.pauseVideo();\n      } else {\n        this.onReadyCallback = () => { this.player.pauseVideo(); };\n      }\n    });\n  }\n\n  autoplay() {\n    return new Promise((resolve) => {\n      this.onPlayCallback = resolve;\n\n      if (this.isReady) {\n        this.player.playVideo();\n        this.player.mute();\n      } else {\n        this.onReadyCallback = () => {\n          this.player.playVideo();\n          this.player.mute();\n        };\n      }\n    });\n  }\n\n  unload() {\n    this.player.destroy();\n  }\n\n  _onApiLoaded() {\n    this.player = new YT.Player(this.el, {\n      videoId: this.id,\n      playerVars: {\n        modestbranding: true,\n        showinfo: false,\n        controls: false,\n        rel: 0,\n      },\n      events: {\n        onReady: this.onReady,\n        onStateChange: this.onStateChange,\n      },\n    });\n  }\n\n  _onReady() {\n    this.isReady = true;\n\n    if (this.onReadyCallback) {\n      this.onReadyCallback();\n    }\n  }\n\n  _onStateChange(event) {\n    const state = event.data;\n\n    if (\n      this.onPlayCallback\n      && state === YT.PlayerState.PLAYING\n    ) {\n      this.onPlayCallback();\n      this.onPlayCallback = null;\n    }\n  }\n}\n","import $script from 'scriptjs';\n\nconst api = 'https://player.vimeo.com/api/player.js';\nlet apiLoaded = false;\n\nexport default class VimeoPlayer {\n  constructor(el) {\n    const url = el.getAttribute('data-video-url');\n    const urlParts = url.split('/');\n\n    this.el = el;\n    this.id = urlParts[urlParts.length - 1];\n    this.onReadyCallback = null;\n\n    this.onApiLoaded = this._onApiLoaded.bind(this);\n\n    this.onProgress = this._onProgress.bind(this);\n    this.onProgressCallback = null;\n\n    if (apiLoaded) {\n      this._onApiLoaded();\n    } else {\n      $script(api, this.onApiLoaded);\n    }\n  }\n\n  play() {\n    return new Promise((resolve) => {\n      this.onProgressCallback = resolve;\n\n      if (apiLoaded) {\n        this.player.on('progress', this.onProgress);\n        this.player.play();\n      } else {\n        this.onReadyCallback = () => {\n          this.player.on('progress', this.onProgress);\n          this.player.play();\n        }\n      }\n    });\n  }\n\n  pause() {\n    return new Promise((resolve) => {\n      this.onProgressCallback = resolve;\n\n      if (apiLoaded) {\n        this.player.on('progress', this.onProgress);\n        this.player.pause();\n      } else {\n        this.onReadyCallback = () => {\n          this.player.on('progress', this.onProgress);\n          this.player.pause();\n        }\n      }\n    });\n  }\n\n  autoplay() {\n    return new Promise((resolve) => {\n      this.onProgressCallback = resolve;\n\n      if (apiLoaded) {\n        this.player.on('progress', this.onProgress);\n        this.player.setVolume(0);\n        this.player.play();\n      } else {\n        this.onReadyCallback = () => {\n          this.player.on('progress', this.onProgress);\n          this.player.setVolume(0);\n          this.player.play();\n        }\n      }\n    });\n  }\n\n  unload() {\n    this.player\n      .unload()\n      .catch();\n  }\n\n  _onApiLoaded() {\n    this.player = new window.Vimeo.Player(this.el, { id: this.id });\n\n    this.player\n      .ready()\n      .then()\n      .catch();\n\n    apiLoaded = true;\n\n    if (this.onReadyCallback) {\n      this.onReadyCallback();\n    }\n  }\n\n  _onProgress() {\n    this.player.off('progress', this.onProgress);\n\n    if (this.onProgressCallback) {\n      this.onProgressCallback();\n      this.onProgressCallback = null;\n    }\n  }\n}\n","import Youtube from './Youtube';\nimport Vimeo from './Vimeo';\n\nexport default class Video {\n  constructor(el, options) {\n    this.el = el;\n    this.options = options;\n    this.platform = el.getAttribute('data-video').trim();\n    this.playButton = el.querySelector('[data-video-play-button]');\n    this.videoEl = el.querySelector('[data-video-element]');\n\n    this.onPlayClick = this._onPlayClick.bind(this);\n    this.onPauseClick = this._onPauseClick.bind(this);\n    this.autoplay = this._autoplay.bind(this);\n\n    this.video = null;\n\n    switch (this.platform) {\n      case 'youtube':\n        this.video = new Youtube(this.videoEl);\n        break;\n      case 'vimeo':\n        this.video = new Vimeo(this.videoEl);\n        break;\n      default:\n        this.video = null;\n        break;\n    }\n\n    if (this.playButton) {\n      if (this.options && this.options.autoplay) {\n        this.autoplay();\n      }\n\n      this.playButton.addEventListener('click', this.onPlayClick);\n    }\n  }\n\n  _onPlayClick() {\n    this.el.classList.add('video-loading');\n\n    this.video.play()\n      .then(() => {\n        this.el.classList.add('video-transitioning');\n\n        setTimeout(() => {\n          this.el.classList.remove('video-loading');\n          this.el.classList.remove('video-transitioning');\n          this.el.classList.add('video-playing');\n        }, 200);\n      });\n  }\n\n  _onPauseClick() {\n    this.video.pause();\n  }\n\n  _autoplay() {\n    this.el.classList.add('video-loading');\n\n    this.video.autoplay()\n      .then(() => {\n        this.el.classList.add('video-transitioning');\n\n        setTimeout(() => {\n          this.el.classList.remove('video-loading');\n          this.el.classList.remove('video-transitioning');\n          this.el.classList.add('video-playing');\n        }, 200);\n      });\n  }\n\n  unload() {\n    if (this.playButton) {\n      this.playButton.removeEventListener('click', this.onPlayClick);\n    }\n\n    if (this.video) {\n      this.video.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport Flickity from 'flickity';\nimport layout from '../Layout';\nimport scrollLeft from '../helpers/scrollLeft';\nimport Video from './Video';\n\nexport default class ProductGallery {\n  constructor(options) {\n    this.$gallery = options.$gallery;\n    this.settings = options.settings;\n    this.isQuickshop = options.isQuickshop || false;\n\n    // Gallery\n    this.flickity = null;\n    this.slider = '[data-product-slider]';\n    this.$slider = this.$gallery.find(this.slider);\n    this.slides = '[data-product-image]';\n    this.$slides = this.$gallery.find(this.slides);\n    this.slideImages = this.$slider[0].querySelectorAll('[data-rimg]');\n    this.$sliderPagination = this.$gallery.find('[data-product-slider-pagination]');\n    this.$paginationTrigger = this.$gallery.find('[data-product-thumbnail]');\n\n    this.videos = {};\n    this.videoSlides = this.$slider[0].querySelectorAll('[data-product-image-video]');\n\n    // Re-initialise gallery when crossing breakpoints if needed\n    this._onUpdateGallery = this._onUpdateGallery.bind(this);\n    layout.onBreakpointChange(this._onUpdateGallery);\n\n    this.slideImageLoaded = this._onSlideImageLoaded.bind(this);\n    this.variantChange = this._onVariantChange.bind(this);\n\n    if (this.isQuickshop) {\n      this.$gallery.trigger('theme:rimg:watch');\n    }\n\n    this._init();\n  }\n\n  unload() {\n    for (let i = 0; i < this.slideImages.length; i += 1) {\n      this.slideImages[i].removeEventListener('rimg:load', this.slideImageLoaded);\n    }\n\n    if (this.isQuickshop) {\n      this.$gallery.trigger('theme:rimg:unwatch');\n    }\n\n    layout.offBreakpointChange(this._onUpdateGallery);\n\n    this._unloadGallery();\n  }\n\n  _init() {\n    for (let i = 0; i < this.slideImages.length; i += 1) {\n      this.slideImages[i].addEventListener('rimg:load', this.slideImageLoaded);\n    }\n\n    if (this.videoSlides.length) {\n      for (let i = 0; i < this.videoSlides.length; i += 1) {\n        const videoSlide = this.videoSlides[i];\n        const slideId = videoSlide.getAttribute('data-product-image');\n        const videoEl = videoSlide.querySelector('[data-video]');\n\n        this.videos[slideId] = new Video(videoEl);\n      }\n    }\n\n    if (this.$slides.length) {\n      this._initGallery();\n    }\n  }\n\n  /**\n   * Make sure Flickity updates viewport height when images load in\n   * @private\n   */\n  _onSlideImageLoaded() {\n    if (!this.flickity) {\n      return;\n    }\n\n    const activeHeight = this.flickity.selectedElement.offsetHeight;\n    const flickityHeight = this.flickity.viewport.offsetHeight;\n\n    // If flickity height is greater than slide height, ignore\n    if (activeHeight < flickityHeight) {\n      return;\n    }\n\n    this.flickity.resize();\n  }\n\n  _unloadGallery() {\n    if (this.flickity) {\n      this.$paginationTrigger.off('.gallery');\n\n      this.flickity.destroy();\n      this.flickity = null;\n      this.$slider.find(this.slides).attr('style', '');\n    }\n  }\n\n  _onUpdateGallery() {\n    this._unloadGallery();\n    this._initGallery();\n  }\n\n  /**\n   * Update gallery on variant change\n   *\n   * @param variant\n   * @property {Object} options.featured_image - Featured image information\n   * @private\n   */\n  _onVariantChange(variant) {\n    if (!variant.featured_image || !this.flickity) {\n      return;\n    }\n\n    const index = this.$slider\n      .find(`[data-product-image=${variant.featured_image.id}]`)\n      .attr('data-product-image-index');\n    this.flickity.select(index, false, false);\n  }\n\n  _initGallery() {\n    const $selectedImage = this.$slider.find('.image--selected');\n\n    // Options shared on Desktop and Mobile\n    let flickityOptions = {\n      autoPlay: 0,\n      accessibility: true,\n      adaptiveHeight: true,\n      cellAlign: 'left',\n      cellSelector: this.slides,\n      pageDots: false,\n      imagesLoaded: false,\n      prevNextButtons: false,\n      wrapAround: true,\n    };\n\n    // Mobile only options\n    const optionsMobile = {\n      draggable: true,\n      friction: 0.8,\n      selectedAttraction: 0.2,\n    };\n\n    // Desktop only options\n    const optionsDesktop = {\n      draggable: false,\n    };\n\n    if (layout.isBreakpoint('XS')){\n      flickityOptions = $.extend({}, optionsMobile, flickityOptions);\n    } else {\n      flickityOptions = $.extend({}, optionsDesktop, flickityOptions);\n    }\n\n    // If a variant has an image pre-selected, start the slideshow at that image\n    // If the slideshow has been re-initalised across a break point, slideshow\n    // restarts at same slide\n    if ($selectedImage.length) {\n      const initialIndex = parseInt($selectedImage.attr('data-product-image-index'), 10);\n\n      flickityOptions = $.extend({}, { initialIndex }, flickityOptions);\n    }\n\n    this.flickity = new Flickity(this.$slider[0], flickityOptions);\n    this._bindGallery();\n    this._handleGalleryVideos();\n  }\n\n  _bindGallery() {\n    this.flickity.on('select', () => {\n      this._updateActiveSlide(this.flickity.selectedIndex);\n      this._handleGalleryVideos();\n    });\n\n    this.$paginationTrigger.on('click.gallery', (event) => {\n      event.preventDefault();\n      const $target = $(event.currentTarget);\n      this.flickity.select($target.attr('data-product-thumbnail'), false, false);\n    });\n  }\n\n  /**\n   * Handle gallery videos\n   * - Pause video if is not active slide\n   * - Play video if is active slide, and is autoplay\n   *\n   * @private\n   */\n  _handleGalleryVideos() {\n    const slideId = parseInt(this.flickity.selectedElement.getAttribute('data-product-image'), 10);\n\n    Object.keys(this.videos).forEach((key) => {\n      const videoKey = parseInt(key, 10);\n\n      // Pause inactive slide videos\n      if (slideId !== videoKey) {\n        this.videos[videoKey].onPauseClick();\n      }\n\n      // Play video if is selected, and auto play enabled\n      if (slideId === videoKey && this.settings.enable_video_autoplay) {\n        this.videos[videoKey].autoplay();\n      }\n    });\n  }\n\n  /**\n   * Adds a non-flickity active class to thumbnails, and main slideshow\n   *  - Is used on re-init across breakpoints\n   *  - Is used to show the active thumbnail in the pagination\n   *\n   * @param index\n   * @private\n   */\n  _updateActiveSlide(index) {\n    const $newSlide = this.$slider.find(`[data-product-image-index=${index}]`);\n    const $newThumbnail = this.$sliderPagination.find(`[data-product-thumbnail=${index}]`);\n\n    $newSlide\n      .addClass('image--selected')\n      .siblings('.image--selected')\n      .removeClass('image--selected');\n\n    $newThumbnail\n      .addClass('thumbnail--selected')\n      .siblings('.thumbnail--selected')\n      .removeClass('thumbnail--selected');\n\n    if (layout.isBreakpoint('XS')) {\n      scrollLeft($newThumbnail);\n    }\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport { removeTrapFocus, trapFocus } from '../helpers/a11y';\nimport Forms from '../Forms';\nimport VariantHelper from '../VariantHelper';\nimport AddToCartFlyout from './AddToCartFlyout';\nimport ProductGallery from './ProductGallery';\n\nexport default class ProductDetails {\n  constructor(options) {\n    this.$window = $(window);\n    this.$formArea = options.$formArea;\n    this.$gallery = options.$gallery;\n    this.$details = options.$details;\n    this.context = options.context;\n    this.settings = options.settings;\n    this.product = options.product;\n    this.useHistory = options.useHistory;\n\n    this.variantHelper = null;\n\n    // Product ATC Actions\n    this._onATCOpen = this._onATCOpen.bind(this);\n    this._onATCClose = this._onATCClose.bind(this);\n\n    this.atcCallbacks = $.extend({\n      onClose: this._onATCClose,\n      onOpen: this._onATCOpen,\n    }, options.atcCallbacks);\n\n    // Form\n    this.$form = this.$formArea.find('[data-product-form]');\n    this.$productAtcButton = this.$formArea.find('[data-product-atc]');\n    this.$productVariants = this.$form.find('[data-variants]');\n    this.$productOptions = this.$form.find('[data-product-option]');\n\n    this.variantFields = {\n      $price: this.$details.find('[data-price]'),\n      $priceMoney: this.$details.find('[data-price] .money'),\n      $compareAtPrice: this.$details.find('[data-price-compare-at]'),\n      $compareAtPriceMoney: this.$details.find('[data-price-compare-at] .money'),\n      $badge: this.$details.find('[data-badge-sales]'),\n      $badgeMoneySaved: this.$details.find('[data-price-money-saved]'),\n      $badgePercentSaved: this.$details.find('[data-price-percent-saved]'),\n    };\n\n    this.forms = new Forms(this.$form);\n    this.gallery = new ProductGallery(options);\n\n    this._bindEvents();\n    this._initOptions();\n  }\n\n  unload() {\n    this.$form.off('.product-details');\n    this.forms.unload();\n\n    if (this.variantHelper) {\n      this.variantHelper.unload();\n    }\n\n    this.gallery.unload();\n  }\n\n  _bindEvents() {\n    this.$window.on('product-variant-switch.product-details', (event, data) => this._switchVariant(event, data));\n    this.$form.on('submit.product-details', event => this._AddToCartFlyout(event));\n  }\n\n  _initOptions() {\n    if (!this.$productVariants.length) return;\n\n    this.variantHelper = new VariantHelper(\n      this.product,\n      this.$productVariants,\n      this.$productOptions,\n    );\n  }\n\n  _switchVariant(event, data) {\n    if (data.product !== this.product) return;\n\n    const variant = data.variant;\n    const firstLoad = data.firstLoad;\n\n    if (firstLoad) {\n      return;\n    }\n\n    // Update main select\n    this.$productVariants.val(data.variant.id);\n    this.gallery.variantChange(variant);\n\n    // Update Variant information\n    this._updatePrice(variant);\n    this._updateBadge(variant);\n    this._updateButton(variant);\n\n    if (this.useHistory) {\n      const url = `${ this.product.handle }?${$.param({ variant: variant.id })}`;\n      history.replaceState({}, 'variant', url);\n    }\n  }\n\n  _updatePrice(variant) {\n    // Update compare at price\n    const hasComparePrice = (\n      !!variant.compare_at_price && variant.compare_at_price > variant.price\n    );\n    this.variantFields.$compareAtPrice.toggleClass('visible', hasComparePrice);\n    this.variantFields.$compareAtPriceMoney.text(Shopify.formatMoney(variant.compare_at_price, this.settings.money_format));\n    CurrencyConverter.update(this.variantFields.$compareAtPriceMoney[0]);\n\n    // Update price\n    this.variantFields.$priceMoney.text(Shopify.formatMoney(variant.price, this.settings.money_format));\n    CurrencyConverter.update(this.variantFields.$priceMoney[0]);\n  }\n\n  _updateBadge(variant) {\n    const priceSaved = variant.compare_at_price ? variant.compare_at_price - variant.price : 0;\n    this.variantFields.$badge.toggle(!!priceSaved);\n\n    if (this.variantFields.$badgeMoneySaved.length) {\n      // Update badge if it shows money saved\n      this.variantFields.$badgeMoneySaved.text(Shopify.formatMoney(priceSaved, this.settings.money_format));\n      CurrencyConverter.update(this.variantFields.$badgeMoneySaved[0]);\n    }\n\n    if (this.variantFields.$badgePercentSaved.length) {\n      // Update badge if it shows percentiles\n      const percentileSaved = Math.round((priceSaved * 100) / variant.compare_at_price);\n      this.variantFields.$badgePercentSaved.text(percentileSaved);\n    }\n  }\n\n  _updateButton(variant) {\n    if (variant.available) {\n      this.$productAtcButton.text(this.context.product_available);\n      this.$productAtcButton\n        .removeClass('disabled')\n        .prop('disabled', false);\n    } else {\n      this.$productAtcButton.text(this.context.product_unavailable);\n      this.$productAtcButton\n        .addClass('disabled')\n        .prop('disabled', true);\n    }\n  }\n\n  _AddToCartFlyout(event) {\n    event.preventDefault();\n\n    const formData = this.$form.serializeArray();\n\n    const options = {\n      $atcButton: this.$productAtcButton,\n      settings: {\n        moneyFormat: this.settings.money_format,\n        cartRedirection: this.settings.cart_redirection,\n      },\n    };\n\n    AddToCartFlyout.init(formData, options, this.atcCallbacks);\n  }\n\n  /**\n   * Callback when AddToCartFlyout opens\n   * Move keyboard focus into flyout\n   *\n   * @param {object} options - Options to be used\n   * @param {jQuery} options.$container - Container to trap focus within\n   * @param {jQuery} options.$elementToFocus - Element to be focused when focus leaves container\n   * @private\n   */\n  _onATCOpen(options) {\n    trapFocus({\n      $container: options.$container,\n      $elementToFocus: options.$elementToFocus,\n      namespace: 'product-details-flyout',\n    });\n  }\n\n  /**\n   * Callback when AddToCartFlyout closes\n   * Move keyboard focus back into grid item\n   *\n   * @private\n   */\n  _onATCClose() {\n    removeTrapFocus({\n      namespace: 'product-details-flyout',\n    });\n\n    this.$productAtcButton.focus();\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport Modal from './Modal';\nimport ProductDetails from './ProductDetails';\nimport RichText from '../components/RichText';\nimport {removeTrapFocus} from '../helpers/a11y';\n\nexport default class ProductQuickshop {\n  constructor(options) {\n    this.$el = options.$el;\n    this.$quickShop = this.$el.find('[data-product-quickshop]');\n    this.modalClass = options.modalClass;\n    this.loaded = false;\n    this.richText = null;\n    this.productDetails = null;\n    this.quickShopHTML = null;\n\n    try {\n      this.data = JSON.parse(this.$el.find('[data-product-quickshop-data]').text());\n    } catch (error) {\n      return console.warn(`Quickshop: invalid quickshop data found. ${error.message}`);\n    }\n\n    try {\n      this.quickShopHTML = JSON.parse(this.$el.find('[data-product-quickshop-html]').text());\n    } catch (error) {\n      return console.warn(`Quickshop: invalid quickshop html found. ${error.message}`);\n    }\n\n    if (!this.$quickShop[0].hasAttribute('data-loaded')) {\n      this.$quickShop.append(this.quickShopHTML);\n      this.$quickShop.attr('data-loaded', true);\n      this.$quickShop\n        .find('.money')\n        .each((index, el) => CurrencyConverter.update(el));\n      this._initSPR();\n    }\n\n    this._initialize();\n\n    if (window.Shopify && Shopify.PaymentButton) {\n      Shopify.PaymentButton.init();\n    }\n  }\n\n  _initSPR() {\n    if (!window.SPR) {\n      return;\n    }\n\n    window.SPR.registerCallbacks();\n    window.SPR.initRatingHandler();\n    window.SPR.initDomEls();\n    window.SPR.loadProducts();\n    window.SPR.loadBadges();\n  }\n\n  _initialize() {\n    this.$message = this.$el.find('[data-product-quickshop-message]');\n    this.$formArea = this.$el.find('[data-product-form-area]');\n    this.$gallery = this.$el.find('[data-product-gallery]');\n    this.$details = this.$el.find('[data-product-details]');\n    this.$description = this.$el.find('[data-product-description]');\n    this.context = this.data.context;\n    this.settings = this.data.settings;\n    this.product = this.data.product;\n\n    this._open = this._open.bind(this);\n    this._close = this._close.bind(this);\n\n    this._onATCClose = this._onATCClose.bind(this);\n    this._onATCInit = this._onATCInit.bind(this);\n    this._onATCError = this._onATCError.bind(this);\n    this._onATCSuccess = this._onATCSuccess.bind(this);\n\n    const modalCallbacks = {\n      onOpen: this._open,\n      onClose: this._close,\n    };\n\n    this.atcCallbacks = {\n      onClose: this._onATCClose,\n      onInit: this._onATCInit,\n      onError: this._onATCError,\n      onSuccess: this._onATCSuccess,\n    };\n\n    this.modal = new Modal(modalCallbacks);\n    this.modal.open(`[data-product-quickshop=\"${this.product.id}\"]`, this.modalClass);\n  }\n\n  _open() {\n    if (this.loaded) {\n      return;\n    }\n\n    if (this.$description.length) {\n      this.richText = new RichText(this.$description);\n    }\n\n    const options = {\n      $formArea: this.$formArea,\n      $gallery: this.$gallery,\n      $details: this.$details,\n      atcCallbacks: this.atcCallbacks,\n      context: this.context,\n      settings: this.settings,\n      product: this.product,\n      useHistory: false,\n      isQuickshop: true,\n    };\n\n    this.productDetails = new ProductDetails(options);\n  }\n\n  _close() {\n    if (this.productDetails) {\n      this.productDetails.unload();\n    }\n\n    if (this.richText) {\n      this.richText.unload();\n    }\n\n    this._toggleMessage('', false);\n    this.modal.unload();\n  }\n\n  _toggleMessage(message, isVisible) {\n    this.$message\n      .html(message)\n      .toggleClass('visible', isVisible);\n  }\n\n  _onATCClose() {\n    removeTrapFocus({\n      namespace: 'product-details-flyout',\n    });\n\n    this.$el.focus();\n  }\n\n  _onATCInit() {\n    this.$message.removeClass('visible');\n  }\n\n  _onATCError(error) {\n    const $content = $(`<div class=\"product-message--error\">${error}</div>`);\n    this._toggleMessage($content, true);\n  }\n\n  _onATCSuccess() {\n    this._close();\n  }\n\n  unload() {\n    this._close();\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\nimport layout from '../Layout';\nimport ProductQuickshop from './ProductQuickshop';\n\nimport {trapFocus, removeTrapFocus} from '../helpers/a11y';\nimport AddToCartFlyout from '../components/AddToCartFlyout';\n\nexport default class ProductGridItem {\n  constructor($el) {\n    this.$el = $el;\n    this.productQuickshop = null;\n    this.quickBuySettings = null;\n    this.events = [];\n\n    this.$window = $(window);\n    this.$html = $('html');\n    this.$content = this.$el.find('[data-product-item-content]');\n    this.$actions = this.$el.find('[data-product-actions]');\n    this.hasProductActions = this.$actions.length;\n\n    this._addToCart = this._addToCart.bind(this);\n    this._actionsToggle = this._actionsToggle.bind(this);\n    this._openQuickShop = this._openQuickShop.bind(this);\n\n    this._onATCOpen = this._onATCOpen.bind(this);\n    this._onATCClose = this._onATCClose.bind(this);\n\n    if (this.hasProductActions) {\n      this._setSortByQueryParameters();\n\n      if (this.$html.hasClass('no-touch') && Shopify.queryParams.grid_list !== 'list-view') {\n        this.events.push(this.$el.on('mouseenter.product-item', this._actionsToggle));\n        this.events.push(this.$el.on('mouseleave.product-item', this._actionsToggle));\n      }\n\n      //$scripts checks existence of script in header before attempting to inject\n      $script($('[data-scripts]').data('shopify-api-url'), () => {\n        this.events.push(this.$el.on('click.product-item', '[data-quick-buy]', this._addToCart));\n        this.events.push(this.$el.on('click.product-item', '[data-quickshop-slim]', this._openQuickShop));\n        this.events.push(this.$el.on('click.product-item', '[data-quickshop-full]', this._openQuickShop));\n      });\n    }\n\n    if (this.$el.find('[data-quick-buy]').length) {\n      this._initQuickBuy();\n    }\n\n    this._objectFitPolyfill();\n  }\n\n  /**\n   * Make Shopify aware of releavent collection search info\n   *  - tag\n   *  - vendor\n   *  - pagination\n   *  - sorting criteria\n   *\n   * @private\n   */\n  _setSortByQueryParameters() {\n    Shopify.queryParams = {};\n    if (location.search.length) {\n      for (let i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {\n        const aKeyValue = aCouples[i].split('=');\n        // Reset the page number when we apply (i.e. don't add it to params)\n        if (aKeyValue.length > 1 && aKeyValue[0] !== 'page') {\n          Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);\n        }\n      }\n    }\n  }\n\n  _initQuickBuy() {\n    try {\n      this.quickBuySettings = JSON.parse(this.$el.find('[data-quick-buy-settings]').text());\n    } catch (error) {\n      return console.warn(`Quick buy: invalid QuickBuy data found. ${error.message}`);\n    }\n  }\n\n  _openQuickShop(event) {\n    event.preventDefault();\n\n    const modalClass = event.currentTarget.hasAttribute('data-quickshop-full')\n      ? 'quickshop-full'\n      : 'quickshop-slim';\n\n    if (this.productQuickshop) {\n      this.productQuickshop.unload();\n    }\n\n    this.productQuickshop = new ProductQuickshop({\n      $el: this.$el,\n      modalClass,\n    });\n  }\n\n  _isObjectFitAvailable() {\n    return 'objectFit' in document.documentElement.style;\n  }\n\n  _objectFitPolyfill() {\n    if (this._isObjectFitAvailable()) {\n      return;\n    }\n\n    const $image = $('[data-product-item-image]', this.$el);\n    const src = $('img', $image).attr('src');\n\n    $image.addClass('product-item-image-no-objectfit');\n    $image.css('background-image', `url(\"${ src }\")`);\n  }\n\n  /**\n   * Get height of element, and combined height of element + actions\n   *\n   * @returns {{heightBase, heightExpanded: *}}\n   * @private\n   */\n  _getHeights() {\n    const height = this.$el.height();\n    const actionsHeight = this.$el.find('[data-product-actions]').outerHeight(true);\n\n    return {\n      heightBase: height,\n      heightExpanded : height + actionsHeight,\n    };\n  }\n\n  _actionsToggle(event) {\n    if (!layout.isBreakpoint('L')) return;\n\n    const open = event.type === 'mouseenter';\n\n    if (open) {\n      this._showActions();\n    }\n\n    if (!open) {\n      this._hideActions();\n    }\n  }\n\n  _showActions() {\n    if (this.$el.revealer('isVisible')) {\n      return this._hideActions();\n    }\n\n    const { heightBase, heightExpanded } = this._getHeights();\n\n    // Lock heights to prevent jumping\n    this.$el.css('height', heightBase);\n    this.$content.css('height', heightBase);\n\n    // Store height for when hovering out\n    this.$el.data('base-height', heightBase);\n\n    // Start animation, and transition height to expanded height\n    this.$el\n      .revealer('show')\n      .one('revealer-animating.product-item', () => {\n        this.$content.css('height', heightExpanded);\n      });\n  }\n\n  _hideActions() {\n    const height = this.$el.data('base-height');\n\n    /*\n      - Transition buttons up, using base height for animation\n      - Remove heights after animation is complete in case of resize\n     */\n    this.$el\n      .revealer('hide')\n      .one('revealer-animating', () => {\n        this.$el.off('revealer-animating.product-item');\n        this.$el.css({ height });\n        this.$content.css({ height });\n      }).one('revealer-hide', () => {\n        this.$el\n          .off('revealer-hide.product-item')\n          .css('height', '');\n        this.$content.css('height', '');\n      });\n  }\n\n  _addToCart(event) {\n    event.preventDefault();\n    const $atcButton = $(event.currentTarget);\n    const variantID = $atcButton.attr('data-variant-id');\n\n    const formData = [\n      {\n        'name': 'id',\n        'value': variantID,\n      },\n      {\n        'name': 'quantity',\n        'value': 1,\n      },\n    ];\n\n    const options = {\n      $atcButton,\n      settings: {\n        moneyFormat: this.quickBuySettings.money_format,\n        cartRedirection: this.quickBuySettings.cart_redirection,\n      },\n    };\n\n    const callbacks = {\n      onOpen: this._onATCOpen,\n      onClose: this._onATCClose,\n    };\n\n    AddToCartFlyout.init(formData, options, callbacks);\n  }\n\n  /**\n   * Callback when AddToCartFlyout opens\n   * Move keyboard focus into flyout\n   *\n   * @param {object} options - Options to be used\n   * @param {jQuery} options.$container - Container to trap focus within\n   * @param {jQuery} options.$elementToFocus - Element to be focused when focus leaves container\n   * @private\n   */\n  _onATCOpen(options) {\n    trapFocus({\n      $container: options.$container,\n      $elementToFocus: options.$elementToFocus,\n      namespace: 'product-item-flyout',\n    });\n  }\n\n  /**\n   * Callback when AddToCartFlyout closes\n   * Move keyboard focus back into grid item\n   *\n   * @private\n   */\n  _onATCClose() {\n    removeTrapFocus({\n      namespace: 'product-item-flyout',\n    });\n\n    this.$el.focus();\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.product-item'));\n\n    if (this.productQuickshop) {\n      this.productQuickshop.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport Flickity from 'flickity';\n\nexport default class RecentlyViewed {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.recentlyViewed = section.data.recently_viewed_info;\n    this.time = section.data.time;\n    this.flickity = null;\n\n    if (this.recentlyViewed && this.time) {\n      this.recentlyViewed.timestamp = Math.round((new Date()).getTime() / 1000);\n    }\n\n    if (this.time) {\n      let recentlyViewed = [];\n\n      if (JSON.parse(localStorage.getItem('recentlyViewed')) !== null) {\n        recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed'));\n\n        for (let i = recentlyViewed.length - 1; i >= 0; i--) {\n          const timeSince = this.timeSince(recentlyViewed[i].timestamp);\n          const isPlaceholder = recentlyViewed[i].image.indexOf('svg+url') !== 1;\n\n          this.$el.find('[data-recently-viewed-container]').append(\n            `<div class=\"product-recently-viewed-card\"\n              data-recently-viewed-card\n            >\n              <div class=\"product-recently-viewed-card-time\">\n                ${timeSince}\n                <div class=\"product-recently-viewed-card-remove\"\n                  data-remove-recently-viewed=\"${recentlyViewed[i].handle}\">\n                  <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    role=\"presentation\"\n                    width=\"10\"\n                    height=\"10\"\n                    viewBox=\"0 0 10 10\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M6.08785659,5 L9.77469752,1.31315906 L8.68684094,0.225302476 L5,3.91214341 L1.31315906,0.225302476 L0.225302476,1.31315906 L3.91214341,5 L0.225302476,8.68684094 L1.31315906,9.77469752 L5,6.08785659 L8.68684094,9.77469752 L9.77469752,8.68684094 L6.08785659,5 Z\"></path>\n                  </svg>\n                </div>\n              </div>\n              <a href=\"${recentlyViewed[i].link}\">\n                <div\n                  class=\"\n                    product-recently-viewed-card-image-wrapper\n                    productitem--image\n                  \"\n                >\n                  <img\n                    class=\"\n                      product-recently-viewed-card-image\n                      ${isPlaceholder ? 'product-recently-viewed-card-image-placeholder' : ''}\n                    \"\n                    src=\"${recentlyViewed[i].image.trim()}\"\n                    alt=\"${recentlyViewed[i].title}\"\n                  >\n                </div>\n              </a>\n              <div class=\"product-recently-viewed-card-price\">\n                ${recentlyViewed[i].price}\n              </div>\n              <a\n                href=\"${recentlyViewed[i].link}\"\n                class=\"product-recently-viewed-card-title\"\n              >\n                ${recentlyViewed[i].title}\n              </a>\n            </div>`\n          )\n        }\n\n        if (this.recentlyViewed) {\n          this.removeRecentlyViewed(this.recentlyViewed.handle, recentlyViewed);\n\n          recentlyViewed.push(this.recentlyViewed);\n          localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n        }\n\n        this.$carousel = this.$el.find('.product-recently-viewed--content');\n        this.slides = '.product-recently-viewed-card';\n\n        if (this.$carousel.find(this.slides).length > 1) {\n          this._initSlider();\n        }\n      } else {\n        if (this.recentlyViewed) {\n          recentlyViewed.push(this.recentlyViewed);\n          localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n        }\n\n        this.$el.find('.product-recently-viewed--section').addClass('hide');\n      }\n    }\n\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.$el.on('click', '[data-remove-recently-viewed]', (event) => {\n      const $target = $(event.currentTarget);\n      const handle = $target.data('remove-recently-viewed');\n      const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed'));\n\n      this.removeRecentlyViewed(handle, recentlyViewed);\n      localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n\n      $target.parents('[data-recently-viewed-card]').addClass('hide-card');\n      $target.parents('[data-recently-viewed-card]').nextAll().addClass('move-card');\n\n      setTimeout(() => {\n        let index = $target.parents('[data-recently-viewed-card]').index();\n         if (index !== 0) {\n          index--;\n         }\n\n        $target.parents('[data-recently-viewed-card]').nextAll().removeClass('move-card');\n        this.flickity.remove($target.parents('[data-recently-viewed-card]'));\n        this.flickity.selectCell(index);\n      }, 500);\n    });\n\n    this.$el.on('click', '[data-clear-recently-viewed]', (event) => {\n      this.clearRecentlyViewed();\n    });\n  }\n\n  timeSince(timestamp) {\n    const now = Math.round((new Date()).getTime() / 1000);\n    const secondsPast = now - timestamp;\n\n    if(secondsPast < 60){\n      const secondsAgo = parseInt(secondsPast);\n\n      return secondsAgo === 1 ?\n        `${secondsAgo} ${this.time.second} ${this.time.ago}` :\n        `${secondsAgo} ${this.time.seconds} ${this.time.ago}`;\n    }\n\n    if(secondsPast < 3600){\n      const minutesAgo = parseInt(secondsPast/60);\n\n      return minutesAgo === 1 ?\n        `${minutesAgo} ${this.time.minute} ${this.time.ago}` :\n        `${minutesAgo} ${this.time.minutes} ${this.time.ago}`;\n    }\n\n    if(secondsPast <= 86400){\n      const hoursAgo = parseInt(secondsPast/3600);\n\n      return hoursAgo === 1 ?\n        `${hoursAgo} ${this.time.hour} ${this.time.ago}` :\n        `${hoursAgo} ${this.time.hours} ${this.time.ago}`;\n    }\n\n    if(secondsPast > 86400){\n      const date = new Date(timestamp);\n      const currentDate = new Date(now);\n      const day = date.getDate();\n      const month = date.toDateString().match(/ [a-zA-Z]*/)[0].replace(' ', '');\n      const year = date.getFullYear() == currentDate.getFullYear() ? '' :  `, ${date.getFullYear()}`;\n\n      return `${month} ${day} ${year}`;\n    }\n  }\n\n  removeRecentlyViewed(handle, recentlyViewed) {\n    for (let i = 0; i < recentlyViewed.length; i++) {\n      if (recentlyViewed[i].handle === handle) {\n        recentlyViewed.splice(i, 1);\n\n        if (recentlyViewed.length === 0) {\n          this.$el.find('.product-recently-viewed--section').addClass('hide');\n        }\n      }\n    }\n  }\n\n  clearRecentlyViewed() {\n    localStorage.setItem('recentlyViewed', null);\n    this.$el.find('[data-recently-viewed-card]').remove();\n    this.$el.find('.product-recently-viewed--section').addClass('hide');\n  }\n\n  _initSlider() {\n    this.flickityOptions = {\n      autoPlay: 0,\n      accessibility: true,\n      cellAlign: 'left',\n      cellSelector: this.slides,\n      groupCells: true,\n      imagesLoaded: true,\n      pageDots: false,\n      contain: true,\n      arrowShape: {\n        x0: 10,\n        x1: 60, y1: 50,\n        x2: 65, y2: 45,\n        x3: 20\n      }\n    };\n\n    this.flickity = new Flickity(this.$carousel[0], this.flickityOptions);\n\n    setTimeout(() => {\n      this.flickity.resize();\n    }, 100);\n  }\n}\n","import $ from 'jquery';\n\nexport default class SelectWidth {\n  constructor($select) {\n    this.$select = $select;\n    this.$html = $('html');\n    this.$body = $('body');\n\n    this._adjustWidth = this._adjustWidth.bind(this);\n\n    this.$select.on('change.select', this._adjustWidth);\n\n    // Update width of <select> on load\n    this._adjustWidth();\n  }\n\n  unload() {\n    this.$select.off('.select');\n  }\n\n  /**\n   * Adjust select to have width equal to its selected option\n   *\n   * @private\n   */\n  _adjustWidth() {\n    const selectedText = this.$select.find(':selected').text();\n    const $select = this.$select.parent().clone();\n\n    const additionalStyles = {\n      position: 'absolute',\n      bottom: '-100%',\n      left: '-100%',\n      display: 'inline-block',\n      visibility: 'hidden',\n    };\n\n    // Replace contents of copied <select> with selected text, and additional styles\n    $select\n      .css(additionalStyles)\n      .find('select')\n      .css('width', '') // Remove any width applied from previous with assignment\n      .html(`<option>${selectedText}</option>`);\n    this.$body.append($select);\n\n    const width = $select.outerWidth(true);\n    $select.remove();\n\n    this.$select.css({width});\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport ProductGridItem from '../components/ProductGridItem';\nimport RecentlyViewed from '../components/RecentlyViewed';\nimport SelectWidth from '../helpers/SelectWidth';\nimport Modal from '../components/Modal';\nimport {trapFocus, removeTrapFocus} from '../helpers/a11y';\n\nexport default class StaticCollection {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n    this.context = section.data.context;\n    this.sortWidth = null;\n    this.$focusItem = null;\n\n    this.filtersContent = '[data-productgrid-filters-content]';\n    this.sortContent = '[data-productgrid-sort-content]';\n    this.$sortTrigger = this.$el.find('[data-productgrid-trigger-sort]');\n    this.$sortTriggerButton = this.$el.find('[data-productgrid-trigger-sort-button]');\n    this.$sortTriggerModal = this.$el.find('[data-productgrid-modal-sort]');\n    this.$filtersTrigger = this.$el.find('[data-productgrid-trigger-filters]');\n    this.$allTags = this.$el.find(`${this.filtersContent} .filter-item a:not([data-filter-toggle])`);\n    this.$advandedTags = this.$el.find('[data-tag-advanced] a');\n    this.$additionalTags = this.$el.find('[data-filter-toggle]');\n    this.$gridViewToggle = this.$el.find('[data-collection-grid-view]');\n    this.$listViewToggle = this.$el.find('[data-collection-list-view]');\n    this.$gridContainer = this.$el.find('.productgrid--outer');\n\n    this._changeSorting = this._changeSorting.bind(this);\n    this._changeSortingButton = this._changeSortingButton.bind(this);\n    this._showSortModal = this._showSortModal.bind(this);\n    this._showFiltersModal = this._showFiltersModal.bind(this);\n    this._activateTag = this._activateTag.bind(this);\n    this._advancedTags = this._advancedTags.bind(this);\n    this._toggleTags = this._toggleTags.bind(this);\n\n    this._onModalOpen = this._onModalOpen.bind(this);\n    this._onModalClose = this._onModalClose.bind(this);\n\n    this._toggleListView = this._toggleListView.bind(this);\n    this._toggleGridView = this._toggleGridView.bind(this);\n    this._checkListView = this._checkListView.bind(this);\n\n    const modalCallbacks = {\n      onOpen: this._onModalOpen,\n      onClose: this._onModalClose,\n    };\n\n    this.events = [\n      this.$sortTrigger.on('change.collection', this._changeSorting),\n      this.$sortTriggerButton.on('click.collection', this._changeSortingButton),\n      this.$sortTriggerModal.on('click.collection', this._showSortModal),\n      this.$filtersTrigger.on('click.collection', this._showFiltersModal),\n      this.$advandedTags.on('click.collection', this._advancedTags),\n      this.$allTags.on('click.collection', this._activateTag),\n      this.$additionalTags.on('click.collection', this._toggleTags),\n      this.$gridViewToggle.on('click.collection', this._toggleGridView),\n      this.$listViewToggle.on('click.collection', this._toggleListView)\n    ];\n\n    // Product items\n    this.productItems = [];\n    const $productItems = this.$el.find('[data-product-item]');\n\n    $productItems.each((i, productItem) => {\n      this.productItems.push(new ProductGridItem($(productItem)));\n    });\n\n    if (this.$sortTrigger.length) {\n      this.sortWidth = new SelectWidth(this.$sortTrigger);\n    }\n\n    this._setSortByQueryParameters();\n    this._updatePrices();\n    this.modal = new Modal(modalCallbacks);\n\n    this.recentlyViewed = new RecentlyViewed(section);\n  }\n\n  onSectionUnload() {\n    this.events.forEach($el => $el.off('.collection'));\n    this.modal.unload();\n    this.recentlyViewed.unload();\n\n    if (this.sortWidth) {\n      this.sortWidth.unload();\n    }\n\n    this.productItems.forEach((productItem) => {\n      productItem.unload();\n    });\n  }\n\n  /**\n   * Set product grid prices to match CurrencyConverter settings on page load, section re-load\n   *\n   * @private\n   */\n  _updatePrices() {\n    this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n  }\n\n  /**\n   * Open Tags/Filters modal (on mobile)\n   *\n   * @param event\n   * @private\n   */\n  _showFiltersModal(event) {\n    event.preventDefault();\n\n    this.$focusItem = $(event.currentTarget);\n    this.modal.open(this.filtersContent, 'productgrid-filters');\n  }\n\n  /**\n   * Open Sort by modal (on mobile)\n   *\n   * @param event\n   * @private\n   */\n  _showSortModal(event) {\n    event.preventDefault();\n\n    this.$focusItem = $(event.currentTarget);\n    this.modal.open(this.sortContent, 'productgrid-sort');\n  }\n\n  /**\n   * Style a tag as active after click, before page transition\n   *\n   * @param event\n   * @private\n   */\n  _activateTag(event) {\n    $(event.currentTarget).addClass('filter-link--active');\n  }\n\n  /**\n   * Used by advanced tags to concatenate tag searches\n   *\n   * @param event\n   * @private\n   */\n  _advancedTags(event) {\n    const $target = $(event.currentTarget).parent();\n    const tagGroup = $target.attr('data-group');\n    const $activeGroup = $(`.filter-item--active[data-group=\"${tagGroup}\"]`);\n\n    if (!$target.hasClass('filter-item--active') && $activeGroup.length) {\n      const tagHandle = $target.attr('data-handle');\n\n      event.preventDefault();\n      $target.siblings().removeClass('filter-item--active');\n\n      location.href = location.href\n        // swap tag\n        .replace($activeGroup.attr('data-handle'), tagHandle)\n        // go back to page 1\n        .replace(/(&page=\\d+)|(page=\\d+&)|(\\?page=\\d+$)/, '');\n    }\n  }\n\n  /**\n   * Expand / Collapse additional tags in the sidebar\n   *\n   * @param event\n   * @private\n   */\n  _toggleTags(event) {\n    event.preventDefault();\n\n    const $trigger = $(event.currentTarget);\n    const $items = $trigger.parent().siblings('[data-hidden-default]');\n    const siblingsVisible = $trigger.data('filter-toggle');\n\n    $items.toggleClass('filter-item--hidden', siblingsVisible);\n    $trigger\n      .data('filter-toggle', !siblingsVisible)\n      .text(!siblingsVisible ? this.context.see_less : this.context.see_more);\n\n    if (this.modal.isOpen()) {\n      this.modal.position();\n    }\n  }\n\n  /**\n   * Make Shopify aware of releavent collection search info\n   *  - tag\n   *  - vendor\n   *  - pagination\n   *  - sorting criteria\n   *\n   * @private\n   */\n  _setSortByQueryParameters() {\n    Shopify.queryParams = {};\n    if (location.search.length) {\n      for (let i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {\n        const aKeyValue = aCouples[i].split('=');\n        // Reset the page number when we apply (i.e. don't add it to params)\n        if (aKeyValue.length > 1 && aKeyValue[0] !== 'page') {\n          Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);\n        }\n      }\n    }\n\n    this._checkListView();\n  }\n\n  /**\n   * Sort by opens a modal on mobile, this handles button events\n   *\n   * @param event\n   * @private\n   */\n  _changeSortingButton(event) {\n    const activeClass = 'utils-sortby--modal-button--active';\n\n    $(event.currentTarget)\n      .addClass(activeClass)\n      .parent()\n      .siblings()\n      .find(`.${activeClass}`)\n      .removeClass(activeClass);\n\n    this._changeSorting(event);\n  }\n\n  /**\n   * Change sorting of collection\n   *\n   * @param event\n   * @private\n   */\n  _changeSorting(event) {\n    event.preventDefault();\n    const $target = $(event.currentTarget);\n\n    Shopify.queryParams.sort_by = $target.val();\n    location.search = jQuery.param(Shopify.queryParams).replace(/\\+/g, '%20');\n  }\n\n  /**\n   * When a modal is open, move focus into the modal for a11y\n   *\n   * @private\n   */\n  _onModalOpen() {\n    trapFocus({\n      $container: this.modal.$modal,\n      namespace: 'productgrid-modal',\n    });\n  }\n\n  /**\n   * Return focus to last used button (if found) on modal close\n   *\n   * @private\n   */\n  _onModalClose() {\n    removeTrapFocus({\n      $container: this.modal.$modal,\n      namespace: 'productgrid-modal',\n    });\n\n    if (this.$focusItem) {\n      this.$focusItem.focus();\n      this.$focusItem = null;\n    }\n  }\n\n  /**\n   * Toggle grid view\n   *\n   */\n  _toggleGridView(event) {\n    Shopify.queryParams.grid_list = 'grid-view';\n    location.search = jQuery.param(Shopify.queryParams).replace(/\\+/g, '%20');\n  }\n\n  /**\n   * Toggle list view\n   *\n   */\n  _toggleListView(event) {\n    Shopify.queryParams.grid_list = 'list-view';\n    location.search = jQuery.param(Shopify.queryParams).replace(/\\+/g, '%20');\n  }\n\n  /**\n   * Check grid/list view toggle query parameters\n   *\n   */\n  _checkListView() {\n    if (Shopify.queryParams.grid_list === 'list-view') {\n      this.$el.find('[href*=\"&grid_list\"]').attr('href', function(i, href) {\n        if (href.indexOf('?') === -1) {\n          href = href.replace('&', '?');\n        }\n\n        return href.replace('grid_list', 'grid_list=list-view');\n      });\n\n      this.$el.find('.utils-viewtoggle-button').removeClass('active');\n      this.$listViewToggle.addClass('active');\n      this.$gridContainer.addClass('productgrid-listview');\n    } else {\n      this.$el.find('[href*=\"&grid_list\"]').attr('href', function(i, href) {\n        if (href.indexOf('?') === -1) {\n          href = href.replace('&', '?');\n        }\n\n        return href.replace('grid_list', 'grid_list=grid-view');\n      });\n    }\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\n\nexport default class StaticGiftcard {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$qrCode = this.$el.find('[data-giftcard-qr]');\n    this.$giftCardCode = this.$el.find('[data-giftcard-code]');\n\n    $script($('[data-scripts]').data('shopify-qrcode'), () => {\n      this.QRCode = new QRCode(this.$qrCode[0], {\n        text: this.$qrCode.attr('data-giftcard-qr'),\n        width: 120,\n        height: 120\n      });\n    });\n\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this.$el.on('click', '[data-giftcard-print]', () => {\n      window.print();\n    });\n\n    // Auto-select gift card code on click, based on ID passed to the function\n    this.$el.on('click', '[data-giftcard-code]', () => {\n      this._selectText();\n    });\n  }\n\n  _selectText() {\n    const text = this.$giftCardCode[0];\n    let range = '';\n\n    if (document.body.createTextRange) { // ms method\n      range = document.body.createTextRange();\n      range.moveToElementText(text);\n      range.select();\n    } else if (window.getSelection) { // moz, opera, webkit method\n      var selection = window.getSelection();\n      range = document.createRange();\n      range.selectNodeContents(text);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n}\n","import $ from 'jquery';\n\nimport Modal from '../components/Modal';\nimport Forms from '../Forms';\n\nexport default class StaticPassword {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    this.modalForms = null;\n    this.newsletterForm = null;\n    this.modalContents = '[data-passwordentry]';\n    this.$newsletterForm = this.$el.find('[data-password-newsletter]');\n\n    this.modalOpen = this.onModalOpen.bind(this);\n    this.modalClose = this.onModalClose.bind(this);\n    this._openModal = this._openModal.bind(this);\n\n    this.modal = new Modal({\n      onOpen: this.modalOpen,\n      onClose: this.modalClose,\n    });\n\n    if (this.$newsletterForm) {\n      this.newsletterForm = new Forms(this.$newsletterForm);\n    }\n\n    this._checkForPasswordAttempt();\n    this._bindEvents();\n  }\n\n  onSectionUnload() {\n    this.$el.off('.static-password');\n\n    if (this.newsletterForm) {\n      this.newsletterForm.unload();\n    }\n\n    if (this.modalForms) {\n      this.modalForms.unload();\n    }\n  }\n\n  onModalOpen() {\n    const $contents = $('[data-passwordentry-contents]');\n    this.modalForms = new Forms($contents);\n  }\n\n  onModalClose() {\n    this.modalForms.unload();\n    this.modalForms = null;\n  }\n\n  _bindEvents() {\n    this.$el.on('click.static-password', '[data-passwordentry-toggle]', this._openModal);\n  }\n\n  _openModal() {\n    this.modal.open(this.modalContents, 'passwordentry');\n  }\n\n  _checkForPasswordAttempt() {\n    if (!$('[data-passwordentry-errors]').length) {\n      return;\n    }\n\n    this._openModal();\n  }\n}\n","import debounce from 'just-debounce';\nimport Flickity from 'flickity';\n\nimport layout from '../Layout';\n\nexport default class ProductRowScroller {\n  constructor(productRow) {\n    this.$window = $(window);\n    this.flickity = null;\n    this.productRow = productRow;\n    this.$productRow = $(this.productRow);\n\n    // Activate flickity on mobile\n    this._mobileSlider = this._mobileSlider.bind(this);\n    layout.onBreakpointChange(this._mobileSlider);\n\n    this._mobileSlider();\n  }\n\n  unload() {\n    layout.offBreakpointChange(this._mobileSlider);\n    this._destroyFlickity();\n  }\n\n  _initFlickity() {\n    this.flickity = new Flickity(this.productRow, {\n      cellSelector: '.productgrid--item',\n      contain: true,\n      freeScroll: true,\n      percentPosition: false,\n      prevNextButtons: false,\n      pageDots: false,\n      setGallerySize: false,\n    });\n\n    this._bindSlider();\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.$window.off('.product-row');\n    this.$productRow.off('.product-row');\n\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n\n  _mobileSlider() {\n    // If is Large layout, attempt to destroy flickity\n    if (layout.isBreakpoint('L')) {\n      this._destroyFlickity();\n      return;\n    }\n\n    // Is XS/S/M, and flickity is init'd -- do nothing\n    if (this.flickity) {\n      return;\n    }\n\n    // Is XS/S/M, and flickity is not init'd\n    this._initFlickity();\n  }\n\n  _bindSlider() {\n    const $slider = this.$productRow.find('.flickity-slider');\n\n    this.$window.on('resize.product-row', debounce(() => {\n      this.$productRow.trigger('heightUpdate.product-row');\n    }));\n\n    this.flickity.on('cellSelect', () => {\n      this.$productRow.trigger('heightUpdate.product-row');\n    });\n\n    this.$productRow.on('heightUpdate.product-row', () => {\n      if (!this.flickity) {\n        return;\n      }\n\n      $slider.height(Math.ceil(this.flickity.maxCellHeight));\n    });\n\n    // Sets the Slider to the height of the first slide\n    this.$productRow.trigger('heightUpdate.product-row');\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport layout from '../Layout';\nimport Forms from '../Forms';\n\nimport RichText from '../components/RichText';\nimport ProductDetails from '../components/ProductDetails';\nimport ProductGridItem from '../components/ProductGridItem';\nimport ProductRowScroller from '../components/ProductRowScroller';\nimport RecentlyViewed from '../components/RecentlyViewed';\n\nexport default class StaticProduct {\n  constructor(section) {\n    this.postMessage = section.postMessage;\n    this.context = section.data.context;\n    this.settings = section.data.settings;\n    this.product = section.data.product;\n    this.richText = null;\n    this.reviewForm = null;\n    this.flickity = null;\n    this.flickityOptions = null;\n\n    this.$el = $(section.el);\n    this.$product = this.$el.find('[data-product-wrapper]');\n\n    if (this.settings) {\n      this.isThreeColumn = this.settings.layout === 'layout--three-col';\n    }\n\n    // History\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n    this.useHistory = !this.isThemeEditor && history.replaceState;\n\n    this.$gallery = this.$product.find('[data-product-gallery]');\n\n    // Product details\n    this.$details = this.$product.find('[data-product-details]');\n\n    // Product description\n    this.$description = this.$product.find('[data-product-description]');\n\n    // Product form containers\n    this.$formRegular = this.$product.find('[data-product-form-regular]');\n    this.$formAlt = this.$product.find('[data-product-form-alt]');\n\n    // Product form area\n    this.$formArea = this.$product.find('[data-product-form-area]');\n\n    // Move product form and information on breakpoint change\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    // Related Products\n    this.$relatedProducts = this.$el.find('[data-related-products]');\n    this.relatedProducts = [];\n    this.relatedProductsScroller = null;\n\n    // Product reviews\n    this.$productReviews = this.$el.find('[data-product-reviews]');\n\n    this._moveForm();\n\n    if (this.$description.length) {\n      this.richText = new RichText(this.$description);\n    }\n\n    if (this.$relatedProducts.length) {\n      this.relatedProductsScroller = new ProductRowScroller(section.el.querySelector('[data-product-row]'));\n\n      this.$relatedProducts.find('[data-product-item]').each((i, productItem) => {\n        new ProductGridItem($(productItem));\n      });\n\n      /* If related products are disabled/enabled with while in the TE,\n       * they'll have shop.currency as the monetary value. This updates it to\n       * the active currency\n       */\n      this.$relatedProducts.find('.money').each((index, el) => CurrencyConverter.update(el));\n    }\n\n    if (this.$productReviews.length) {\n      this.reviewForm = new Forms(this.$productReviews, '.spr-form-input');\n    }\n\n    // Instantiate ProductDetails after Shopify API is loaded\n    $script($('[data-scripts]').data('shopify-api-url'), () => {\n      const options = {\n        $formArea: this.$formArea,\n        $gallery: this.$gallery,\n        $details: this.$details,\n        context: this.context,\n        settings: this.settings,\n        product: this.product,\n        useHistory: this.useHistory,\n      };\n\n      this.productDetails = new ProductDetails(options);\n    });\n\n    this.recentlyViewed = new RecentlyViewed(section);\n  }\n\n  onSectionUnload() {\n    layout.offBreakpointChange(this.layoutHandler);\n    this.productDetails.unload();\n\n    if (this.richText) {\n      this.richText.unload();\n    }\n\n    if (this.relatedProductsScroller) {\n      this.relatedProductsScroller.unload();\n    }\n\n    this.relatedProducts.forEach((productItem) => {\n      productItem.unload();\n    });\n\n    if (this.reviewForm) {\n      this.reviewForm.unload();\n    }\n  }\n\n  onBreakpointChange() {\n    this._moveForm();\n  }\n\n  /**\n   * Move product form if is a three column layout\n   * @private\n   */\n  _moveForm() {\n    if (!this.isThreeColumn) return;\n\n    if (layout.isBreakpoint('L')) {\n      if (!$.contains(this.$formAlt[0], this.$formArea[0])) {\n        const $form = this.$formArea.detach();\n        this.$formAlt.append($form);\n      }\n    } else {\n      if (!$.contains(this.$formRegular[0], this.$formArea[0])) {\n        const $form = this.$formArea.detach();\n        this.$formRegular.append($form);\n      }\n    }\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\n\nimport ProductGridItem from '../components/ProductGridItem';\nimport Modal from '../components/Modal';\nimport SearchForm from '../components/search/SearchForm';\n\nexport default class StaticSearch {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n    this.$searchField = this.$el.find('[data-live-search]');\n    this.modal = new Modal();\n\n    // Product items\n    this.productItems = [];\n    const $productItems = this.$el.find('[data-product-item]');\n\n    $productItems.each((i, productItem) => {\n      this.productItems.push(new ProductGridItem($(productItem)));\n    });\n\n    this._updatePrices();\n    this.searchForm = new SearchForm(this.$searchField);\n  }\n\n  onSectionUnload() {\n    this.modal.unload();\n    this.searchForm.unload();\n\n    this.productItems.forEach((productItem) => {\n      productItem.unload();\n    });\n  }\n\n  _updatePrices() {\n    this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport Flickity from 'flickity';\n\nimport layout from '../Layout';\n\nexport default class DynamicTwitterFeed {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$window = $(window);\n    this.flickity = null;\n\n    this.$blogPosts = this.$el.find('[data-blog-posts]');\n\n    // Activate flickity on mobile\n    this._mobileSlider = this._mobileSlider.bind(this);\n    layout.onBreakpointChange(this._mobileSlider);\n    this._mobileSlider();\n  }\n\n  /**\n   * Unbind events when section is re-drawn\n   */\n  onSectionUnload() {\n    layout.offBreakpointChange(this._mobileSlider);\n    this._destroyFlickity();\n  }\n\n  _initFlickity() {\n    this.flickity = new Flickity(this.$blogPosts[0], {\n      cellSelector: '.article--excerpt-wrapper',\n      contain: true,\n      freeScroll: true,\n      percentPosition: false,\n      prevNextButtons: false,\n      pageDots: false,\n      setGallerySize: false,\n    });\n\n    this._bindSlider();\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.$window.off('.blog-posts');\n    this.$blogPosts.off('.blog-posts');\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n\n  _mobileSlider() {\n    // If is Large layout, attempt to destroy flickity\n    if (layout.isBreakpoint('L')) {\n      this._destroyFlickity();\n      return;\n    }\n\n    // Is XS/S/M, and flickity is init'd -- do nothing\n    if (this.flickity) {\n      return;\n    }\n\n    // Is XS/S/M, and flickity is not init'd\n    this._initFlickity();\n  }\n\n  _bindSlider() {\n    const $slider = this.$blogPosts.find('.flickity-slider');\n\n    this.$window.on('resize.blog-posts', debounce(() => {\n      this.$blogPosts.trigger('heightUpdate.blog-posts');\n    }));\n\n    this.flickity.on('cellSelect', () => {\n      this.$blogPosts.trigger('heightUpdate.blog-posts');\n    });\n\n    this.$blogPosts.on('heightUpdate.blog-posts', () => {\n      if (!this.flickity) {\n        return;\n      }\n\n      $slider.height(Math.ceil(this.flickity.maxCellHeight));\n    });\n\n    // Sets the Slider to the height of the first slide\n    this.$blogPosts.trigger('heightUpdate.blog-posts');\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport Flickity from 'flickity';\nimport layout from '../Layout';\n\nexport default class StaticHighlightsBanners {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$window = $(window);\n\n    this.$carousel = this.$el.find('.highlights-banners');\n    this.slides = '.highlights-banners-block';\n\n    this.flickity = null;\n    this.flickityOptions = null;\n\n    if (this.$carousel.find(this.slides).length > 1) {\n      this._initSlider();\n    }\n  }\n\n  _initSlider() {\n    this.flickityOptions = {\n      autoPlay: 0,\n      accessibility: true,\n      cellAlign: 'left',\n      cellSelector: this.slides,\n      imagesLoaded: false,\n      pageDots: false,\n      prevNextButtons: false,\n      setGallerySize: false,\n      contain: true\n    };\n\n    this._bindFlickity();\n  }\n\n  onSectionUnload() {\n    this._destroyFlickity();\n    this.$window.off('.twitter');\n  }\n\n  _bindFlickity() {\n    if (layout.isBreakpoint('L') === false && this.flickity === null) {\n      this.flickity = new Flickity(this.$carousel[0], this.flickityOptions);\n    }\n\n    this.$window.on('resize', debounce(() => {\n      if (layout.isBreakpoint('L') === false && this.flickity === null) {\n        this._bindFlickity();\n      } else if (layout.isBreakpoint('L') && this.flickity) {\n        this._destroyFlickity();\n      }\n    }));\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n}\n","import debounce from 'just-debounce';\nimport Flickity from 'flickity';\nimport layout from '../Layout';\nimport getHeaderOffset from '../helpers/getHeaderOffset';\nimport $ from 'jquery';\n\nexport default class StaticSlideshow {\n  constructor(section) {\n    this.el = section.el;\n    this.settings = section.data;\n    this.$window = $(window);\n\n    this.carousel = this.el.querySelector('.slideshow');\n    this.slides = '.slideshow-slide';\n    this.container = this.el.querySelector('.slideshow-height-fullscreen');\n    this.isFullscreen = !!this.container;\n    this.selectBlockOnLoad = true;\n    this.continueAutoplay = true;\n    this.stopAutoplay = false;\n    this.autoplayTimeout = 0;\n\n    this.flickity = null;\n    this.flickityOptions = null;\n\n    if (this.carousel && this.carousel.querySelectorAll(this.slides).length > 1) {\n      this._initSlider();\n    }\n  }\n\n  _initSlider() {\n    this.flickityOptions = {\n      autoPlay: this.settings.enable_autoplay ? this.settings.autoplay_duration * 1000 : false,\n      setGallerySize: !this.isFullscreen,\n      pauseAutoPlayOnHover: false,\n      accessibility: true,\n      adaptiveHeight: true,\n      cellAlign: 'left',\n      cellSelector: this.slides,\n      imagesLoaded: true,\n      contain: true,\n      wrapAround: true,\n      arrowShape: {\n        x0: 10,\n        x1: 60,\n        y1: 50,\n        x2: 65,\n        y2: 45,\n        x3: 20,\n      },\n    };\n\n    this.flickity = new Flickity(this.carousel, this.flickityOptions);\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this._slideshowHeight();\n    this._positionDots();\n    this._changeArrrowColors();\n\n    this.$window.on('resize.slideshow', debounce(() => {\n      this._slideshowHeight();\n      this._positionDots();\n      this._changeArrrowColors();\n    }));\n\n    this.flickity.on('select', () => {\n      this._slideshowHeight();\n      this._positionDots();\n      this._changeArrrowColors();\n\n      this.selectBlockOnLoad = false;\n\n      if (this.settings.enable_autoplay && !this.stopAutoplay) {\n        this.flickity.pausePlayer();\n\n        if (this.continueAutoplay) {\n          this.autoplayTimeout = 0;\n        } else {\n          this.autoplayTimeout = 10000;\n        }\n\n        this.continueAutoplay = true;\n\n        setTimeout(() => {\n          this.flickity.playPlayer();\n        }, this.autoplayTimeout);\n      }\n    });\n\n    this.flickity.on('dragStart', () => {\n      this.continueAutoplay = false;\n    });\n  }\n\n  _positionDots() {\n    const pageDots = this.el.querySelector('.flickity-page-dots');\n\n    if (layout.isBreakpoint('XS') && !this.isFullscreen) {\n      const content = this.flickity.selectedElement.querySelector('.slideshow-slide-content');\n      const height = this.flickity.selectedElement.querySelector('.slideshow-background').offsetHeight;\n      const dotGutter = 5;\n      let top = 'auto';\n\n      if (content) {\n        top = `${height + dotGutter}px`;\n      } else {\n        const pageDotsHeight = pageDots.offsetHeight;\n        const dotBottomGutter = 20;\n\n        // If no content, and mobile, offset by height of dots, and the bottom gutter\n        top = `${height - (pageDotsHeight + dotBottomGutter)}px`;\n      }\n\n      pageDots.style.top = top;\n    }\n  }\n\n  _changeArrrowColors() {\n    let currentColor = this.flickity.selectedElement.querySelector('.slideshow-background').dataset;\n    const dots = this.el.querySelectorAll('.flickity-page-dots .dot');\n\n    if (layout.isBreakpoint('XS') && !this.isFullscreen) {\n      currentColor = currentColor.themecolor;\n    } else {\n      currentColor = currentColor.slidecolor;\n    }\n\n    this.el.querySelector('.flickity-prev-next-button.previous svg').style.fill = currentColor;\n    this.el.querySelector('.flickity-prev-next-button.next svg').style.fill = currentColor;\n\n    for (let i = 0; i < dots.length; i++) {\n      dots[i].style.background = currentColor;\n    }\n  }\n\n  _slideshowHeight() {\n    const headerHeight = getHeaderOffset(document.querySelector('.site-header-wrapper'));\n\n    if (this.isFullscreen) {\n      this.el.querySelector('.flickity-viewport').style.height = `calc(100vh - ${headerHeight}px)`;\n      this.container.style.height = `calc(100vh - ${headerHeight}px)`;\n    }\n  }\n\n  onSectionUnload() {\n    this._destroyFlickity();\n    this.$window.off('.slideshow');\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.flickity.destroy();\n  }\n\n  onSectionBlockSelect(block) {\n    setTimeout(() => {\n      this.flickity.resize();\n    }, 100);\n\n    if (this.settings.enable_autoplay) {\n      const $slides = $(this.slides);\n      const $slide = $(block.el);\n      const slideIndex = $slides.index($slide);\n\n      this.stopAutoplay = true;\n      this.flickity.pausePlayer();\n\n      if (!$slide.hasClass('is-selected') && !this.selectBlockOnLoad) {\n        this.flickity.select(slideIndex, false, false);\n      } else if (this.selectBlockOnLoad) {\n        this.flickity.select(slideIndex, false, true);\n      }\n    }\n  }\n\n  onSectionBlockDeselect() {\n    if (this.settings.enable_autoplay) {\n      this.stopAutoplay = false;\n      this.flickity.playPlayer();\n    }\n  }\n}\n","import $ from 'jquery';\nimport layout from '../Layout';\n\nexport default class DynamicPromoBlocks {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.content = '[data-promo-block-content]';\n    this.expandedClass = 'promo-block--expanded';\n    this.compressBlocks = section.data.compress_blocks;\n\n    // Revert navigation to original state on breakpoint change\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    this._blockInteraction = this._blockInteraction.bind(this);\n\n    this.$el.on('click.promo-block', this.content, this._blockInteraction);\n  }\n\n  /**\n   * Remove block's toggled state and attributes when leaving mobile\n   */\n  onBreakpointChange() {\n    if (!layout.isBreakpoint('XS')) {\n      this.$el.find(`.${this.expandedClass}`).each((i, content) => {\n        this._collapse(content);\n      });\n    }\n  }\n\n  /**\n   * Unbind events when section is re-drawn\n   */\n  onSectionUnload() {\n    this.$el.off('.promo-block');\n    layout.offBreakpointChange(this.layoutHandler);\n  }\n\n  /**\n   * Callback to open block on mobile from the TE\n   *\n   * @param block\n   */\n  onSectionBlockSelect(block) {\n    if (!layout.isBreakpoint('XS')) return;\n\n    this._expand(block.el.querySelector(this.content));\n  }\n\n  /**\n   * Callback to close block on mobile from the TE\n   *\n   * @param block\n   */\n  onSectionBlockDeselect(block) {\n    if (!layout.isBreakpoint('XS')) return;\n\n    this._collapse(block.el.querySelector(this.content));\n  }\n\n  /**\n   * Expand a block on first click, then allow it to behave as normal\n   *\n   * @param event\n   * @private\n   */\n  _blockInteraction(event) {\n    const content = event.currentTarget;\n    const clicked = content.getAttribute('data-clicked');\n\n    // On second click, or on desktop, don't interfere with block\n    if (clicked || !layout.isBreakpoint('XS') || !this.compressBlocks) {\n      return;\n    }\n\n    event.preventDefault();\n    content.setAttribute('data-clicked', 'clicked');\n\n    this._expand(content);\n  }\n\n  /**\n   * Expand promo block\n   *\n   * @param content\n   * @private\n   */\n  _expand(content) {\n    if (!this.compressBlocks) {\n      return;\n    }\n\n    const $content = $(content);\n\n    $content\n      .addClass('animating animating-in')\n      .one('trend', () => {\n        $content\n          .removeClass('animating animating-in')\n          .addClass(this.expandedClass)\n          .off('trend');\n      });\n  }\n\n  /**\n   * Collapse a block\n   *\n   * @param content\n   * @private\n   */\n  _collapse(content) {\n    if (!this.compressBlocks) {\n      return;\n    }\n\n    const $content = $(content);\n\n    $content\n      .addClass('animating animating-out')\n      .one('trend', () => {\n        $content\n          .removeClass(`animating animating-out ${this.expandedClass}`)\n          .off('trend');\n        content.removeAttribute('data-clicked');\n      });\n  }\n}\n","import $ from 'jquery';\n\nimport Accordion from '../Accordion';\nimport layout from '../Layout';\n\nexport default class DynamicMenuList {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.context = section.data.context;\n    this.Accordion = new Accordion(this.$el);\n\n    // Handle Accordion interaction when window size changes\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this.$el.on('click.menu-list', '[data-accordion-trigger]', event => {\n      event.preventDefault();\n      this._toggleAccordion($(event.currentTarget).parent());\n    });\n\n    this.$el.on('click.menu-list', '[data-menulist-toggle]', event => {\n      event.preventDefault();\n      this._toggleList(event.currentTarget);\n    });\n  }\n\n  onSectionUnload() {\n    this.$el.off('.menu-list');\n\n    delete this.Accordion;\n  }\n\n  onSectionBlockSelect(block) {\n    this._toggleAccordion($(block.el), true);\n  }\n\n  onSectionBlockDeselect(block) {\n    this._toggleAccordion($(block.el), false);\n  }\n\n  _toggleAccordion($block) {\n    if (layout.isBreakpoint('L')) return;\n\n    this.Accordion.toggle($block);\n  }\n\n  _toggleList(el) {\n    const $trigger = $(el);\n    const $items = $trigger.parent().siblings('[data-hidden-default]');\n    const siblingsVisible = $trigger.data('menulist-toggle');\n\n    $items.toggleClass('menulist--menu-item-hidden', siblingsVisible);\n    $trigger\n      .data('menulist-toggle', !siblingsVisible)\n      .text(!siblingsVisible ? this.context.see_less : this.context.see_more);\n  }\n\n  onBreakpointChange(event, breakpoints) {\n    if (layout.isBreakpoint('L')) {\n      this.Accordion.openAll();\n    } else if (breakpoints.previous === 'L' && !layout.isBreakpoint('L')) {\n      this.Accordion.closeOpen();\n    }\n  }\n}\n","/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var useEmoji=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}\nhtml+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}\nfunction strip(data){return data.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(a,s){return s;}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,'');}\nfunction targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');}}\nfunction getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}\nreturn a;}\nfunction extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-image')>=0){var data_src=image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];return decodeURIComponent(data_src)+'.jpg';}}\nvar twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}\nif(config.enableLinks===undefined){config.enableLinks=true;}\nif(config.showUser===undefined){config.showUser=true;}\nif(config.showTime===undefined){config.showTime=true;}\nif(config.dateFunction===undefined){config.dateFunction='default';}\nif(config.showRetweet===undefined){config.showRetweet=true;}\nif(config.customCallback===undefined){config.customCallback=null;}\nif(config.showInteraction===undefined){config.showInteraction=true;}\nif(config.showImages===undefined){config.showImages=false;}\nif(config.useEmoji===undefined){config.useEmoji=false;}\nif(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}\nif(config.showPermalinks===undefined){config.showPermalinks=true;}\nif(config.dataOnly===undefined){config.dataOnly=false;}\nif(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;useEmoji=config.useEmoji;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}\nscript=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+\nconfig.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+\nconfig.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}\nhead.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}\nreturn;}\nif(!useEmoji){data.body=data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,'');}\nif(!showImages){data.body=data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,'');}\nif(!printUser){data.body=data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,'');}\nvar div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}\nfunction swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];if(avatarImg && avatarImg.length){avatarImg.src=avatarImg.getAttribute('data-src-2x');}return element;}\nvar tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}\ntimes.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}\ntimes.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}\nif(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}\nvar arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',author_data:{profile_url:authors[n]?authors[n].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x'):null,profile_image_2x:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x'):null,screen_name:authors[n]?authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:authors[n]?authors[n].querySelector('[data-scribe=\"element:name\"]').title:null},time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}\nvar op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}\nif(printUser){op+='<div class=\"user\">'+strip(authors[n].innerHTML)+'</div>';}\nop+='<p class=\"tweet\">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class=\"timePosted\"><a href=\"'+permalinksURL[n]+'\">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class=\"timePosted\">'+\ntimes[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}}\nif(showInteractionLinks){op+='<p class=\"interact\"><a href=\"https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'\" class=\"twitter_reply_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Reply</a><a href=\"https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'\" class=\"twitter_retweet_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Retweet</a>'+'<a href=\"https://twitter.com/intent/favorite?tweet_id='+\ntids[n]+'\" class=\"twitter_fav_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Favorite</a></p>';}\nif(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class=\"media\">'+'<img src=\"'+extractImageUrl(images[n])+'\" alt=\"Image from tweet\" />'+'</div>';}\nif(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}\nn++;}}\nhandleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));\n","import $ from 'jquery';\nimport twitterFetcher from 'twitter-fetcher';\nimport debounce from 'just-debounce';\nimport Flickity from 'flickity';\nimport rimg from 'rimg-shopify';\n\nimport layout from '../Layout';\n\nexport default class DynamicTwitterFeed {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.settings = section.data;\n    this.$window = $(window);\n    this.isIE9 = $('body').hasClass('ie9');\n    this.flickity = null;\n\n    this.$content = this.$el.find('[data-twitter-content]');\n    this.$wrapper = this.$el.find('[data-twitter-wrapper]');\n    this.$tweets = this.$el.find('[data-tweet-content]');\n\n    this.$wrapper.on('rimg:enter', event => {\n      this._load();\n    });\n\n    rimg.instance.track(this.$wrapper[0]);\n  }\n\n  _load() {\n    this.$template = $(this.settings.template);\n\n    const onboarding = this.settings.onboarding;\n    const username = this.settings.username;\n    const retweets = this.settings.retweets;\n    const images = this.settings.images;\n    const locale = this.settings.locale || 'en';\n\n    // Activate flickity on mobile\n    this._mobileSlider = this._mobileSlider.bind(this);\n    layout.onBreakpointChange(this._mobileSlider);\n    this._mobileSlider();\n\n    this._evenHeights = this._evenHeights.bind(this);\n    this._evenHeights();\n\n    if (onboarding || !username) {\n      return;\n    }\n\n    this.$window.on('resize.twitter', debounce(() => this._evenHeights, 16, true, true));\n\n    twitterFetcher.fetch({\n      'profile': { 'screenName': username },\n      'maxTweets': 3,\n      'enableLinks': true,\n      'showUser': true,\n      'showTime': true,\n      'dataOnly': false,\n      'useEmoji': true,\n      'showImages': images,\n      'showRetweet': retweets,\n      'lang': locale,\n      'customCallback': (tweets) => this._renderTweets(tweets),\n      'showInteraction': false,\n    });\n  }\n\n  /**\n   * Unbind events when section is re-drawn\n   */\n  onSectionUnload() {\n    rimg.instance.untrack(this.$wrapper[0]);\n    this.$window.off('.twitter');\n    this.$content.off('.twitter');\n\n    layout.offBreakpointChange(this._mobileSlider);\n    this._destroyFlickity();\n  }\n\n  /**\n   * Evens the height of the twitter blocks if the browser doesn't support Flexbox\n   * @private\n   */\n  _evenHeights() {\n    if (!this.isIE9) {\n      return;\n    }\n\n    const heights = [];\n    this.$tweets.height('');\n\n    this.$tweets.each((i, el) => {\n      const $el = $(el);\n      heights.push($el.outerHeight());\n    });\n\n    this.$tweets.height(Math.ceil(Math.max.apply(null, heights)));\n  }\n\n  _initFlickity() {\n    this.flickity = new Flickity(this.$content[0], {\n      cellSelector: '[data-tweet-content]',\n      contain: true,\n      freeScroll: true,\n      percentPosition: false,\n      prevNextButtons: false,\n      pageDots: false,\n      setGallerySize: false,\n    });\n\n    this._bindSlider();\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n\n  _mobileSlider() {\n    // If is Large layout, attempt to destroy flickity\n    if (layout.isBreakpoint('L')) {\n      this._destroyFlickity();\n      return;\n    }\n\n    // Is XS/S/M, and flickity is init'd -- do nothing\n    if (this.flickity) {\n      return;\n    }\n\n    // Is XS/S/M, and flickity is not init'd\n    this._initFlickity();\n  }\n\n  _bindSlider() {\n    const $slider = this.$content.find('.flickity-slider');\n\n    this.$window.on('resize.twitter', debounce(() => {\n      this.$content.trigger('heightUpdate.twitter');\n    }));\n\n    this.flickity.on('cellSelect', () => {\n      this.$content.trigger('heightUpdate.twitter');\n    });\n\n    this.$content.on('heightUpdate.twitter', () => {\n      if (!this.flickity) {\n        return;\n      }\n\n      $slider.height(Math.ceil(this.flickity.maxCellHeight));\n    });\n\n    // Sets the Slider to the height of the first slide\n    this.$content.trigger('heightUpdate.twitter');\n  }\n\n  /**\n   * Retrieve information about user who tweeted\n   *\n   * @param el\n   * @returns {{$avatar: *, link: *, name, screenName}}\n   * @private\n   */\n  _extractAuthor(el) {\n    const $el = $(el);\n\n    const link = $el.find('a').attr('href');\n    const name = $el.find('[data-scribe=\"element:name\"]').text();\n    const screenName = $el.find('[data-scribe=\"element:screen_name\"]').text();\n    const $avatar = $el.find('img');\n\n    return { $avatar, link, name, screenName };\n  }\n\n  /**\n   * Retrieve link to tweet, and when it was tweeted\n   *\n   * @param el\n   * @returns {{link: *, postedAt: *}}\n   * @private\n   */\n  _extractMeta(el) {\n    const $el = $(el);\n\n    const link = $el.find('a').attr('href');\n    const postedAt = $el.text();\n\n    return { link, postedAt };\n  }\n\n  _extractWrapperClass() {\n    const wrapperClass = this.$wrapper.attr('class').match(/tweet--count-\\d+$/);\n\n    if (wrapperClass) {\n      return wrapperClass[0];\n    } else {\n      return '';\n    }\n  }\n\n  _renderTweets(tweets) {\n    const tweetsLength = tweets.length;\n\n    if (!tweets || !tweetsLength) return;\n\n    const tweetsArray = [];\n    const wrapperClass = `tweet--count-${tweetsLength}`;\n\n    tweets.forEach((tweet) => {\n      const $tweet = $(tweet);\n\n      const $template = this.$template.clone();\n      const authorInfo = this._extractAuthor($tweet[0]);\n      const meta = this._extractMeta($tweet[2]);\n\n      const content = $tweet[1];\n\n      // Render header\n      $template\n        .find('.tweet--header')\n        .attr('href', authorInfo.link);\n\n      $template\n        .find('.tweet--header-image')\n        .html(authorInfo.$avatar);\n\n      $template\n        .find('.tweet--header-name')\n        .text(authorInfo.name);\n\n      $template\n        .find('.tweet--header-screenname')\n        .text(authorInfo.screenName);\n\n      // Render content\n      $template\n        .find('.tweet--content')\n        .append($tweet[3] ? $tweet[3] : null)\n        .append(content);\n\n      // Render footer\n      $template\n        .find('.tweet--footer')\n        .attr('href', meta.link)\n        .find('.tweet--footer--posted')\n        .text(meta.postedAt);\n\n      tweetsArray.push($template);\n    });\n\n    this.$wrapper.css('min-height', this.$wrapper.height());\n\n    this.$tweets.fadeOut().promise().then(() => {\n      this._destroyFlickity();\n      this.$tweets.remove();\n\n      this.$content.append(tweetsArray);\n\n      this.$wrapper\n        .removeClass(this._extractWrapperClass())\n        .addClass(wrapperClass)\n        .css('min-height', '');\n\n      this.$tweets = this.$el.find('[data-tweet-content]');\n\n      this._evenHeights();\n      this._mobileSlider();\n    });\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport Flickity from 'flickity';\nimport layout from '../Layout';\nimport rimg from 'rimg-shopify';\n\nexport default class DynamicInstagramFeed {\n  constructor(section) {\n    this.settings = section.data;\n    this.onboarding = this.settings.onboarding;\n    this.photoCount = this.settings.photo_count;\n    this.accessToken = this.settings.access_token;\n\n    this.$el = $(section.el);\n    this.$window = $(window);\n    this.$photoContainer = this.$el.find('[data-instagram-content]');\n    this.$photoContainerPlaceholder = this.$el.find('[data-instagram-photo-placeholder]');\n\n    this.$photoTemplate = $('<figure class=\"instagram--photo\" data-instagram-photo />');\n\n    this.$photoContainer.on('rimg:enter', event => {\n      this._load();\n    });\n\n    rimg.instance.track(this.$photoContainer[0]);\n  }\n\n  _load() {\n    // Activate flickity on mobile\n    this._mobileSlider = this._mobileSlider.bind(this);\n    layout.onBreakpointChange(this._mobileSlider);\n    this._mobileSlider();\n\n    if (this.onboarding || !this.accessToken) {\n      return;\n    }\n\n    this._getPhotos()\n      .done((photos) => this._renderPhotos(photos))\n      .fail((error) => {\n        console.warn(`Instagram: ${error}`);\n      });\n  }\n\n  _getPhotos() {\n    const url = `https://api.instagram.com/v1/users/self/media/recent?access_token=${this.accessToken}&count=${this.photoCount}&callback=`;\n    const photoPromise = $.ajax(url, {\n      dataType: 'jsonp',\n    });\n\n    return photoPromise.then((response) => {\n      if (response.meta.code !== 200) {\n        const error = `${response.meta.error_message} (${response.meta.error_type})`;\n        return $.Deferred().reject(error).promise();\n      }\n\n      return response.data;\n    });\n  }\n\n  _renderPhotos(photos) {\n    const photoArray = [];\n\n    photos.forEach((photo) => {\n      const $template = this.$photoTemplate.clone();\n      const lowResolution = photo.images.low_resolution;\n      const standardResolution = photo.images.standard_resolution;\n\n      const $link = $(`<a target=\"_blank\" href=\"${photo.link}\"></a>`);\n      const $photo = $(`<img src=\"${lowResolution.url}\">`);\n\n      if (standardResolution.width >= (lowResolution.width * 2)) {\n        $photo.attr('srcset', `${standardResolution.url} 2x`);\n      } else {\n        $photo.attr('src', `${standardResolution.url}`);\n      }\n\n      $link.append($photo);\n      $template.append($link);\n\n      photoArray.push($template);\n    });\n\n    this.$photoContainerPlaceholder.fadeOut(() => {\n      this._destroyFlickity();\n      this.$photoContainer.append(photoArray);\n      this.$photoContainerPlaceholder.remove();\n      this._mobileSlider();\n    });\n  }\n\n\n  _initFlickity() {\n    this.flickity = new Flickity(this.$photoContainer[0], {\n      cellSelector: '.instagram--photo',\n      contain: true,\n      freeScroll: true,\n      percentPosition: false,\n      prevNextButtons: false,\n      pageDots: false,\n      setGallerySize: false,\n    });\n\n    this._bindSlider();\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.$window.off('.instagram-feed');\n    this.$photoContainer.off('.instagram-feed');\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n\n  _mobileSlider() {\n    // If is Large layout, attempt to destroy flickity\n    if (layout.isBreakpoint('L') || layout.isBreakpoint('M')) {\n      this._destroyFlickity();\n      return;\n    }\n\n    // Is XS/S/M, and flickity is init'd -- do nothing\n    if (this.flickity) {\n      return;\n    }\n\n    // Is XS/S/M, and flickity is not init'd\n    this._initFlickity();\n  }\n\n  _bindSlider() {\n    const $slider = this.$photoContainer.find('.flickity-slider');\n\n    this.$window.on('resize.instagram-feed', debounce(() => {\n      this.$photoContainer.trigger('heightUpdate.instagram-feed');\n    }));\n\n    this.flickity.on('cellSelect', () => {\n      this.$photoContainer.trigger('heightUpdate.instagram-feed');\n    });\n\n    this.$photoContainer.on('heightUpdate.instagram-feed', () => {\n      if (!this.flickity) {\n        return;\n      }\n\n      $slider.height(Math.ceil(this.flickity.maxCellHeight));\n    });\n\n    // Sets the Slider to the height of the first slide\n    this.$photoContainer.trigger('heightUpdate.instagram-feed');\n  }\n\n  onSectionUnload() {\n    rimg.instance.untrack(this.$photoContainer[0]);\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport ProductGridItem from '../components/ProductGridItem';\nimport ProductRowScroller from '../components/ProductRowScroller';\n\nexport default class DynamicFeaturedCollection {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n\n    // Product items\n    this.productItems = [];\n    const $productItems = this.$el.find('[data-product-item]');\n\n    $productItems.each((i, productItem) => {\n      this.productItems.push(new ProductGridItem($(productItem)));\n    });\n\n    this.ProductRowScroller = new ProductRowScroller(section.el.querySelector('[data-product-row]'));\n\n    this._updatePrices();\n  }\n\n  _updatePrices() {\n    this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n  }\n\n  onSectionUnload() {\n    this.productItems.forEach((productItem) => {\n      productItem.unload();\n    });\n\n    this.ProductRowScroller.unload();\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\n\nimport Forms from '../Forms';\nimport LiveSearch from '../components/search/LiveSearch';\nimport SearchForm from '../components/search/SearchForm';\n\nexport default class DynamicSearch {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.settings = section.data.settings;\n    this.search = null;\n\n    this.$scripts = $('[data-scripts]');\n\n    this.$searchField = this.$el.find('[data-live-search]');\n\n    this.forms = new Forms(this.$el);\n\n    if (this.settings.live_search.enable) {\n      $script(this.$scripts.data('shopify-api-url'), () => {\n        this.search = new LiveSearch({\n          $el: this.$searchField,\n          $header: this.$el,\n        }, this.settings.live_search);\n      });\n    } else {\n      this.search = new SearchForm(this.$searchField);\n    }\n  }\n\n  onSectionUnload() {\n    this.search.unload();\n    this.forms.unload();\n  }\n}\n","import $ from 'jquery';\nimport RichText from '../components/RichText';\n\nexport default class DynamicTwitterFeed {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    this.rte = [];\n    this.$el.find('[data-rte]').each((i, el) => {\n      this.rte.push(new RichText($(el)));\n    });\n  }\n\n  /**\n   * Unbind events when section is re-drawn\n   */\n  onSectionUnload() {\n    this.rte.forEach((richTextArea) => {\n      richTextArea.unload();\n    });\n  }\n}\n","import Video from '../components/Video';\n\nexport default class DynamicVideo {\n  constructor(section) {\n    const videoEl = section.el.querySelector('[data-video]');\n    this.$el = section.el;\n\n    this.autoplay = section.data.autoplay;\n    this.hasPlayed = false;\n\n    if (videoEl) {\n      this.video = new Video(videoEl);\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    window.addEventListener('scroll', () => {\n      if (this.autoplay) {\n        var rect = this.$el.getBoundingClientRect();\n\n        if (rect.top >= 0 || rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)) {\n          if (!this.hasPlayed) {\n            this.video._autoplay();\n            this.hasPlayed = true;\n          }\n        } else {\n          this.video._onPauseClick();\n        }\n      }\n    });\n  }\n\n  onSectionUnload() {\n    if (this.video) {\n      this.video.unload();\n    }\n  }\n}\n","import $ from 'jquery';\n\nimport Forms from '../Forms';\n\nexport default class DynamicNewsletter {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    this.forms = new Forms(this.$el);\n  }\n\n  onSectionUnload() {\n    this.forms.unload();\n  }\n}\n","\n/*!\n * pxs-map v2.0.1\n * (c) 2018 undefined\n */\n\nimport $ from 'jquery';\nimport $script from 'scriptjs';\n\nvar justDebounce = debounce;\n\nfunction debounce(fn, delay, at_start, guarantee) {\n  var timeout;\n  var args;\n  var self;\n\n  return function debounced() {\n    self = this;\n    args = Array.prototype.slice.call(arguments);\n\n    if (timeout && (at_start || guarantee)) {\n      return;\n    } else if (!at_start) {\n      clear();\n\n      timeout = setTimeout(run, delay);\n      return timeout;\n    }\n\n    timeout = setTimeout(clear, delay);\n    fn.apply(self, args);\n\n    function run() {\n      clear();\n      fn.apply(self, args);\n    }\n\n    function clear() {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar PxsMap = function () {\n  function PxsMap(section) {\n    var _this = this;\n\n    classCallCheck(this, PxsMap);\n\n    this.$el = $('[data-map]', section.el);\n    this.settings = section.data;\n    this.map = null;\n    this.center = null;\n\n    this.$container = $('[data-map-container]', this.$el);\n\n    // Scale so range is 12 ~ 17, rather than 1 to 6\n    this.zoom = 11 + parseInt(this.settings.zoom, 10);\n    if (isNaN(this.zoom)) this.zoom = 13;\n\n    this.colors = null;\n\n    if (this.settings.colors) {\n      this.colors = this.settings.colors;\n    }\n\n    this.resize = this.resize.bind(this);\n\n    this.address = this.settings.address;\n    this.apiKey = this.settings.api_key;\n\n    if (this.apiKey) {\n      if (window.googleMaps === undefined) {\n        $script('https://maps.googleapis.com/maps/api/js?key=' + this.apiKey, function () {\n          window.googleMaps = true;\n          _this._createMap();\n        });\n      } else {\n        this._createMap();\n      }\n    }\n  }\n\n  createClass(PxsMap, [{\n    key: '_createMap',\n    value: function _createMap() {\n      var _this2 = this;\n\n      return this.geolocate().done(function (results) {\n        _this2.map = new google.maps.Map(_this2.$container.get(0), {\n          center: results[0].geometry.location,\n          clickableIcons: false,\n          disableDefaultUI: true,\n          disableDoubleClickZoom: true,\n          gestureHandling: 'none',\n          keyboardShortcuts: false,\n          maxZoom: _this2.zoom,\n          minZoom: _this2.zoom,\n          scrollWheel: false,\n          styles: _this2._getMapStyles(),\n          zoom: _this2.zoom,\n          zoomControl: false\n        });\n        _this2.center = _this2.map.getCenter();\n        _this2.map.panBy(0, 0);\n\n        new google.maps.Marker({\n          clickable: false,\n          map: _this2.map,\n          position: _this2.center\n        });\n\n        google.maps.event.addDomListener(window, 'resize', justDebounce(_this2.resize, 250, true, true));\n      }).fail(function (status) {\n        var usageLimits = 'https://developers.google.com/maps/faq#usagelimits';\n        var errorMessage = void 0;\n\n        switch (status) {\n          case 'ZERO_RESULTS':\n            errorMessage = '<p>Unable to find the address:</p> ' + _this2.address;\n            break;\n          case 'OVER_QUERY_LIMIT':\n            errorMessage = '\\n              <p>Unable to load Google Maps, you have reached your usage limit.</p>\\n              <p>\\n                Please visit\\n                <a href=\"' + usageLimits + '\" target=\"_blank\">' + usageLimits + '</a>\\n                for more details.\\n              </p>\\n            ';\n            break;\n          default:\n            errorMessage = 'Unable to load Google Maps.';\n            break;\n        }\n\n        _this2.displayErrorInThemeEditor(errorMessage, status);\n      });\n    }\n  }, {\n    key: 'geolocate',\n    value: function geolocate() {\n      var deferred = $.Deferred();\n      var geocoder = new google.maps.Geocoder();\n\n      geocoder.geocode({ address: this.address }, function (results, status) {\n        if (status !== google.maps.GeocoderStatus.OK) {\n          deferred.reject(status);\n        }\n\n        deferred.resolve(results);\n      });\n\n      return deferred;\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      if (this.map) {\n        google.maps.event.trigger(this.map, 'resize');\n        this.map.setCenter(this.center);\n        this.map.panBy(0, 100);\n      }\n    }\n  }, {\n    key: 'onSectionUnload',\n    value: function onSectionUnload() {\n      if (this.map) {\n        google.maps.event.clearListeners(this.map, 'resize');\n      }\n    }\n  }, {\n    key: '_getMapStyles',\n    value: function _getMapStyles() {\n      if (!this.colors) {\n        return;\n      }\n\n      return [{ elementType: 'geometry', stylers: [{ color: this.colors.e }] }, { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] }, { elementType: 'labels.text.fill', stylers: [{ color: this.colors.a }] }, { elementType: 'labels.text.stroke', stylers: [{ color: this.colors.e }] }, { featureType: 'administrative', elementType: 'geometry', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.country', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.land_parcel', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.neighborhood', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.locality', stylers: [{ visibility: 'off' }] }, { featureType: 'poi', stylers: [{ visibility: 'off' }] }, { featureType: 'road', elementType: 'geometry.fill', stylers: [{ color: this.colors.d }] }, { featureType: 'road', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] }, { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: this.colors.c }] }, { featureType: 'road.highway', elementType: 'geometry', stylers: [{ color: this.colors.b }] }, { featureType: 'road.highway.controlled_access', stylers: [{ visibility: 'off' }] }, { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: this.colors.b }] }, { featureType: 'road.local', elementType: 'labels.text.stroke', stylers: [{ color: this.colors.e }] }, { featureType: 'transit', stylers: [{ visibility: 'off' }] }, { featureType: 'water', elementType: 'geometry', stylers: [{ color: this.colors.f }] }];\n    }\n  }, {\n    key: 'displayErrorInThemeEditor',\n    value: function displayErrorInThemeEditor(errorMessage) {\n      var isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n      if (!isThemeEditor) {\n        return;\n      }\n\n      this.$container.html('<div class=\"map-error-message\">' + errorMessage + '</div>');\n    }\n  }]);\n  return PxsMap;\n}();\n\nexport default PxsMap;\n","// jQuery plugins\nimport './globals/jquery';\nimport 'jquery-trend'; // eslint-disable-line\nimport 'jquery-revealer'; // eslint-disable-line\n\n// Global imports\nimport './globals/flickity-ios-fix';\n\n// Responsive Images\nimport 'intersection-observer'; // eslint-disable-line\nimport rimg from 'rimg-shopify'; // eslint-disable-line\n\n// Template imports\nimport Account from './templates/Account';\nimport Contact from './templates/Contact';\nimport Page from './templates/Page';\n\n// Section imports\nimport Sections from './Sections';\nimport StaticSectionHeader from './sections/StaticSectionHeader';\nimport StaticSectionFooter from './sections/StaticSectionFooter';\nimport StaticArticle from './sections/StaticArticle';\nimport StaticBlog from './sections/StaticBlog';\nimport StaticCart from './sections/StaticCart';\nimport StaticCollection from './sections/StaticCollection';\nimport StaticGiftcard from './sections/StaticGiftcard';\nimport StaticPassword from './sections/StaticPassword';\nimport StaticProduct from './sections/StaticProduct';\nimport StaticSearch from './sections/StaticSearch';\nimport DynamicBlogPosts from './sections/DynamicBlogPosts';\nimport StaticHighlightsBanners from './sections/StaticHighlightsBanners';\nimport StaticSlideshow from './sections/StaticSlideshow';\nimport DynamicPromoBlocks from './sections/DynamicPromoBlocks';\nimport DynamicMenuList from './sections/DynamicMenuList';\nimport DynamicTwitterFeed from './sections/DynamicTwitterFeed';\nimport DynamicInstagramFeed from './sections/DynamicInstagramFeed';\nimport DynamicFeaturedCollection from './sections/DynamicFeaturedCollection';\nimport DynamicSearch from './sections/DynamicSearch';\nimport DynamicRichText from './sections/DynamicRichText';\nimport DynamicVideo from './sections/DynamicVideo';\nimport DynamicNewsletter from './sections/DynamicNewsletter';\nimport PXSMap from 'pxs-map'; // eslint-disable-line\n\nrimg.init();\n\nconst sections = new Sections();\nsections.register('static-header', section => new StaticSectionHeader(section));\nsections.register('static-footer', section => new StaticSectionFooter(section));\nsections.register('static-article', section => new StaticArticle(section));\nsections.register('static-blog', section => new StaticBlog(section));\nsections.register('static-cart', section => new StaticCart(section));\nsections.register('static-collection', section => new StaticCollection(section));\nsections.register('static-giftcard', section => new StaticGiftcard(section));\nsections.register('static-password', section => new StaticPassword(section));\nsections.register('static-product', section => new StaticProduct(section));\nsections.register('static-search', section => new StaticSearch(section));\nsections.register('dynamic-blog-posts', section => new DynamicBlogPosts(section));\nsections.register('static-highlights-banners', section => new StaticHighlightsBanners(section));\nsections.register('static-slideshow', section => new StaticSlideshow(section));\nsections.register('dynamic-promo-mosaic', section => new DynamicPromoBlocks(section));\nsections.register('dynamic-promo-grid', section => new DynamicPromoBlocks(section));\nsections.register('dynamic-menu-list', section => new DynamicMenuList(section));\nsections.register('dynamic-twitter-feed', section => new DynamicTwitterFeed(section));\nsections.register('dynamic-instagram-feed', section => new DynamicInstagramFeed(section));\nsections.register('dynamic-featured-collection', section => new DynamicFeaturedCollection(section));\nsections.register('dynamic-featured-product', section => new StaticProduct(section));\nsections.register('dynamic-rich-text', section => new DynamicRichText(section));\nsections.register('dynamic-search', section => new DynamicSearch(section));\nsections.register('dynamic-video', section => new DynamicVideo(section));\nsections.register('pxs-newsletter', section => new DynamicNewsletter(section));\nsections.register('pxs-map', section => new PXSMap(section));\n\nnew Account();\nnew Contact();\nnew Page();\n"],"names":["this","define","window","jQuery","$","matchesSelector","require$$0","getSize","utils","require$$1","require$$2","require$$3","require$$4","require$$5","cell","slide","flickity","require$$6","on","event","$target","target","$flickityEnabledEl","closest","length","Flickity","data","removeEventListener","rimg","Quantity","el","$el","$inputParent","find","$input","$selectParent","$select","_watchSelect","bind","_watchInput","off","baseValue","parseInt","currentTarget","value","isNaN","_validateValue","val","trigger","removeClass","addClass","focus","removeAttr","select","attr","Forms","selector","filledClass","fieldSelector","quantityItems","$quantityWrapper","_toggleFilled","_checkFilled","each","i","push","forEach","quantityItem","unload","hasClass","isFilled","toggleClass","Account","$accountContents","$loginContent","$addressesContent","$addressButtonFocus","_loginToggle","_initLoginPage","_initAddressPage","_init","$loginToggle","$login","$recovery","$recoveryHasMessage","preventDefault","$customerAddresses","itemId","eq","CustomerAddress","destroy","id","countryEl","provinceEl","options","hideElement","Shopify","CountryProvinceSelector","Contact","$contactContents","init","update","asyncGenerator","classCallCheck","createClass","init$1","update$1","RichText","_initExternalLinks","groupedContent","GroupedContent","get","anchors","filter","href","indexOf","location","hostname","Page","$pageContent","Sections","handlers","instances","_onSectionEvent","addEventListener","_triggerInstanceEvent","type","handler","warn","_initSections","dataEls","document","querySelectorAll","dataEl","parentNode","idEl","querySelector","sectionId","getAttribute","_createInstance","detail","blockId","instance","eventName","args","name","keys","typeEl","console","_loadData","postMessage","_postMessage","innerHTML","JSON","parse","error","message","eventHandlers","previousBreakpoint","currentBreakpoint","getBreakpoint","eventHandler","getComputedStyle","documentElement","getPropertyValue","replace","isBreakpoint","breakpoint","onBreakpointChange","offBreakpointChange","index","splice","ignoredEls","isIgnored","element","tagName","attributes","slice","call","some","getHeaderOffset","header","withAnnouncementBar","headerEls","childNodes","isSticky","pageYOffset","offset","HTMLElement","getBoundingClientRect","height","bottom","style","top","StickyHeader","settings","$body","body","$window","$siteMain","$toggle","stickyClass","scrolledClass","navOpenClass","$announcementBar","sticky_header","_stickyReset","navVisibility","_stickyOffset","_toggleStickyHeader","_headerChecker","slideToggle","_slideToggle","one","breakpoints","previous","closeNavigation","requestAnimationFrameId","cancelAnimationFrame","_bindEvents","requestAnimationFrame","layout","css","isInit","open","openNavigation","hide","mobileOnly","outerHeight","scrollThreshold","shouldShrink","_shrink","_toggleAnnouncementBar","_expand","revealer","Accordion","extend","$block","activeClass","autoCollapse","closeOpen","_open","_close","block","eligibleClass","NavMobileSubMenus","activeMenuClass","activeMenu","navTrigger","subMenu","$current","_closeSubmenu","_toggleSubmenu","next","_openSubmenu","$menu","_selectSubMenu","toggle","closeSubMenus","NavMobile","elements","$toggleOpen","isOpen","subMenus","$mobileNav","$panel","$overlay","$toggleClose","layoutHandler","_setPanelHeight","innerHeight","events","closeAllSubmenus","scrollLeft","$container","parent","animate","left","width","MegaNavScroller","$menuList","_addScrollClasses","scrollWidth","NavDesktop","activeItem","inlineChildren","is","toggleItem","stopPropagation","clicked","removeData","closeAll","_handleDocumentClick","megaNav","children","undefined","$parent","_inlineMenu","openMegaNav","contains","submenu","closeItem","scrollTop","openItem","parents","windowHeight","windowWidth","innerWidth","menuRect","hasChildren","stickyHeaderOffset","edges","right","bottomEdge","rightEdge","_menuLimits","childrenExceedHorizontal","exceedsVertical","maxHeight","_unsetInlineMenu","Search","searchType","view","inProgress","xhr","XMLHttpRequest","ActiveXObject","_xhrLoad","_xhrError","_xhrAbort","response","readyState","status","responseText","emit","term","abort","url","params","searchParams","Object","map","key","encodeURIComponent","join","setRequestHeader","send","EventEmitter","SearchForm","$form","submitHandler","clone","$terms","terms","split","trim","append","submit","ContentItem","contentItem","title","ContentResultsHeader","context","content_results","ContentResults","props","content","$title","contentItems","ContentNoResults","no_results","ProductPriceCompareAt","price","compare_at_price","ProductPriceMain","ProductPrice","onSale","consistentSaved","$compareAt","$price","ProductContent","product","on_sale","consistent_saved","ProductImage","image","ProductItem","enableImages","$image","$content","ProductResults","products","productItems","ProductNoResults","no_results_products","view_all_products","ResultsFooter","view_all_results","LiveSearch","$els","$header","$document","enableContent","enable_content","enable_images","flyDownActive","takeOverActive","showFlyDown","$button","$takeOverButton","$flyDown","$searchResults","$searchPlaceholder","$quickLinks","staticSearch","search","_search","_toggleTakeOver","_searchFocused","_documentFocus","_searchCancelled","_searchComplete","_searchError","closeEvents","debounce","hasTerms","hasNoResults","hasPreviousResults","invalidKeyStrokes","_flyDownInitial","_closeFlyDown","_flyDownSearching","html","_toggleButton","_openFlyDown","execute","log","sanitizedTerms","$productResults","results","noResults","$contentResults","formatMoney","money_format","footer","disable","concat","retainFocus","enable","StaticSectionHeader","section","currency","headerSearch","$scripts","$menuToggle","$cartCount","$searchField","$siteNavigation","$desktopNavigation","$headerTools","converter","$converter","stickyHeader","navMobile","navDesktop","forms","live_search","_converter","_headerToolsSize","item_count","shop_currency","default_currency","display_format","money_format_no_currency","money_format_currency","setCurrency","outerWidth","innerWidths","Math","ceil","combinedWidths","reduce","a","b","StaticSectionFooter","_toggleAccordion","openAll","StaticArticle","$commentForm","richText","commentForm","StaticBlog","MessageBanner","$bannerTemplate","$banners","$banner","_show","$visibleBanners","banner","_hide","_positionBanner","_removeBanner","remove","dismissBanners","StaticCart","shipping","messageBanner","$total","$shipping","$titleTotalSmall","$titleTotalLarge","$titleTotalContents","$shippingToggle","$shippingResponse","$shippingResponseMessage","$shippingResponseRates","$shippingSubmit","_moveTitleTotal","onError","_handleErrors","CurrencyConverter","_initShippingCalc","_quantityKeyDown","_editItemQuantity","detach","keyCode","$cartItem","quantity","max","_updateCart","changeItem","_didUpdate","limit","errorMessage","stock_limit","items","total_price","filteredItems","item","cartItem","itemTotal","_quantityError","errors","parseJSON","shippingResponse","error_general","zip","shipment_too_heavy","_handleShippingResponse","_bindShippingCalcEvents","Cart","ShippingCalculator","show","calculate_shipping","calculating","customer","_toggleShippingCalc","_getShippingRates","oldText","text","newText","_disableShippingButton","shippingAddress","country","province","getCartShippingRatesForDestination","addressBase","address","firstRate","formatRate","multiple_rates","one_rate","no_rates","rates","rate","rateValue","rate_value","_hideShippingResponse","empty","_enableShippingButton","_showShippingResponse","Modal","callbacks","modal","$modal","$modalInner","defaultCallbacks","_onOpen","_onBeforeOpen","_onClose","_onBeforeClose","position","modalOptions","handle","_addModalClass","VanillaModal","close","modalHeight","modalPadding","marginTop","modalClass","match","_removeModalClass","onClose","onOpen","onBeforeClose","onBeforeOpen","trapFocus","namespace","$elementToFocus","evt","has","removeTrapFocus","Node","variant","optionsCount","neighbors","variants","option","available","ProductOptions","productHandle","nodeMap","_generateNodeMap","variant2","addNeighbor","found","closestVariant","matchingValues","tempMatchingValues","getVariantFromOptions","getClosestVariantFromOptions","getValidOptions","VariantHelper","$variants","$options","productOptions","optionsTypes","optionsType","radio","_unbindEvents","_switchVariant","firstLoad","availableOptions","getVariantOrClosestFromOptions","getAvailableOptionsFromVariant","_switchVariantSelect","_switchVariantRadio","$optionEls","$option","prop","option1","Images","images","size","loadImage","getSizedImageUrl","path","Image","src","removeProtocol","prefix","suffix","AddToCartFlyout","formData","flyOutSelector","$atcTemplate","_onInit","_onError","_onSuccess","_closeFlyOuts","$atcButton","onInit","_disableButton","_removeFlyOuts","$flyOut","quantityField","ajax","param","done","imageUrl","product_title","variant_options","$productPrice","moneyFormat","cartRedirection","onSuccess","$subTotal","original_total_price","_positionFlyOut","_openFlyOut","fail","description","_enableButton","_closeFlyOut","$excludeFlyOut","_removeFlyOut","api","apiLoadedCallbacks","apiLoaded","onYouTubeIframeAPIReady","apiLoadedCallback","Youtube","regex","onApiLoaded","_onApiLoaded","isReady","onReady","_onReady","onReadyCallback","onStateChange","_onStateChange","onPlayCallback","Promise","resolve","player","playVideo","pauseVideo","mute","YT","Player","state","PlayerState","PLAYING","VimeoPlayer","urlParts","onProgress","_onProgress","onProgressCallback","play","pause","setVolume","catch","Vimeo","ready","then","Video","platform","playButton","videoEl","onPlayClick","_onPlayClick","onPauseClick","_onPauseClick","autoplay","_autoplay","video","classList","add","ProductGallery","$gallery","isQuickshop","slider","$slider","slides","$slides","slideImages","$sliderPagination","$paginationTrigger","videos","videoSlides","_onUpdateGallery","slideImageLoaded","_onSlideImageLoaded","variantChange","_onVariantChange","_unloadGallery","videoSlide","slideId","_initGallery","activeHeight","selectedElement","offsetHeight","flickityHeight","viewport","resize","featured_image","$selectedImage","flickityOptions","optionsMobile","optionsDesktop","initialIndex","_bindGallery","_handleGalleryVideos","_updateActiveSlide","selectedIndex","videoKey","enable_video_autoplay","$newSlide","$newThumbnail","siblings","ProductDetails","$formArea","$details","useHistory","variantHelper","_onATCOpen","_onATCClose","atcCallbacks","$productAtcButton","$productVariants","$productOptions","variantFields","gallery","_initOptions","_AddToCartFlyout","_updatePrice","_updateBadge","_updateButton","replaceState","hasComparePrice","$compareAtPrice","$compareAtPriceMoney","$priceMoney","priceSaved","$badge","$badgeMoneySaved","$badgePercentSaved","percentileSaved","round","product_available","product_unavailable","serializeArray","cart_redirection","ProductQuickshop","$quickShop","loaded","productDetails","quickShopHTML","hasAttribute","_initSPR","_initialize","PaymentButton","SPR","registerCallbacks","initRatingHandler","initDomEls","loadProducts","loadBadges","$message","$description","_onATCInit","_onATCError","_onATCSuccess","modalCallbacks","_toggleMessage","isVisible","ProductGridItem","productQuickshop","quickBuySettings","$html","$actions","hasProductActions","_addToCart","_actionsToggle","_openQuickShop","_setSortByQueryParameters","queryParams","grid_list","_initQuickBuy","_objectFitPolyfill","aCouples","substr","aKeyValue","decodeURIComponent","_isObjectFitAvailable","actionsHeight","_showActions","_hideActions","_getHeights","heightBase","heightExpanded","variantID","RecentlyViewed","recentlyViewed","recently_viewed_info","time","timestamp","Date","getTime","localStorage","getItem","timeSince","isPlaceholder","link","removeRecentlyViewed","setItem","stringify","$carousel","_initSlider","bindEvents","nextAll","selectCell","clearRecentlyViewed","now","secondsPast","secondsAgo","second","ago","seconds","minutesAgo","minute","minutes","hoursAgo","hour","hours","date","currentDate","day","getDate","month","toDateString","year","getFullYear","y1","y2","SelectWidth","_adjustWidth","selectedText","additionalStyles","StaticCollection","sortWidth","$focusItem","filtersContent","sortContent","$sortTrigger","$sortTriggerButton","$sortTriggerModal","$filtersTrigger","$allTags","$advandedTags","$additionalTags","$gridViewToggle","$listViewToggle","$gridContainer","_changeSorting","_changeSortingButton","_showSortModal","_showFiltersModal","_activateTag","_advancedTags","_toggleTags","_onModalOpen","_onModalClose","_toggleListView","_toggleGridView","_checkListView","$productItems","productItem","_updatePrices","tagGroup","$activeGroup","tagHandle","$trigger","$items","siblingsVisible","see_less","see_more","sort_by","StaticGiftcard","$qrCode","$giftCardCode","QRCode","print","_selectText","range","createTextRange","moveToElementText","getSelection","selection","createRange","selectNodeContents","removeAllRanges","addRange","StaticPassword","modalForms","newsletterForm","modalContents","$newsletterForm","modalOpen","onModalOpen","modalClose","onModalClose","_openModal","_checkForPasswordAttempt","$contents","ProductRowScroller","productRow","$productRow","_mobileSlider","_destroyFlickity","_bindSlider","_initFlickity","maxCellHeight","StaticProduct","reviewForm","$product","isThreeColumn","isThemeEditor","designMode","history","$formRegular","$formAlt","$relatedProducts","relatedProducts","relatedProductsScroller","$productReviews","_moveForm","StaticSearch","searchForm","DynamicTwitterFeed","$blogPosts","StaticHighlightsBanners","_bindFlickity","StaticSlideshow","carousel","container","isFullscreen","selectBlockOnLoad","continueAutoplay","stopAutoplay","autoplayTimeout","enable_autoplay","autoplay_duration","_slideshowHeight","_positionDots","_changeArrrowColors","pausePlayer","playPlayer","pageDots","dotGutter","pageDotsHeight","dotBottomGutter","currentColor","dataset","dots","themecolor","slidecolor","fill","background","headerHeight","$slide","slideIndex","DynamicPromoBlocks","expandedClass","compressBlocks","compress_blocks","_blockInteraction","_collapse","setAttribute","removeAttribute","DynamicMenuList","_toggleList","isIE9","$wrapper","$tweets","_load","track","$template","template","onboarding","username","retweets","locale","_evenHeights","fetch","tweets","_renderTweets","untrack","heights","apply","screenName","$avatar","postedAt","wrapperClass","tweetsLength","tweetsArray","tweet","$tweet","authorInfo","_extractAuthor","meta","_extractMeta","fadeOut","promise","_extractWrapperClass","DynamicInstagramFeed","photoCount","photo_count","accessToken","access_token","$photoContainer","$photoContainerPlaceholder","$photoTemplate","_getPhotos","photos","_renderPhotos","photoPromise","code","error_message","error_type","Deferred","reject","photoArray","photo","lowResolution","low_resolution","standardResolution","standard_resolution","$link","$photo","DynamicFeaturedCollection","DynamicSearch","rte","richTextArea","DynamicVideo","hasPlayed","rect","clientHeight","DynamicNewsletter","justDebounce","$script","sections","register","DynamicBlogPosts","DynamicRichText","PXSMap"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}